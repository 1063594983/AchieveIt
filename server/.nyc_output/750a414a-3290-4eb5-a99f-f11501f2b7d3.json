{
  "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\index.ts": {
    "path": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\index.ts",
    "statementMap": {
      "0": { "start": { "line": 2, "column": 22 }, "end": { "line": 4, "column": 1 } },
      "1": { "start": { "line": 3, "column": 4 }, "end": { "line": 3, "column": 62 } },
      "2": { "start": { "line": 5, "column": 16 }, "end": { "line": 5, "column": 51 } },
      "3": { "start": { "line": 6, "column": 20 }, "end": { "line": 6, "column": 59 } },
      "4": { "start": { "line": 7, "column": 15 }, "end": { "line": 7, "column": 51 } },
      "5": { "start": { "line": 8, "column": 13 }, "end": { "line": 8, "column": 45 } },
      "6": { "start": { "line": 9, "column": 16 }, "end": { "line": 9, "column": 57 } },
      "7": { "start": { "line": 10, "column": 16 }, "end": { "line": 10, "column": 57 } },
      "8": { "start": { "line": 11, "column": 18 }, "end": { "line": 11, "column": 61 } },
      "9": { "start": { "line": 12, "column": 19 }, "end": { "line": 12, "column": 63 } },
      "10": { "start": { "line": 13, "column": 19 }, "end": { "line": 13, "column": 63 } },
      "11": { "start": { "line": 14, "column": 18 }, "end": { "line": 14, "column": 61 } },
      "12": { "start": { "line": 15, "column": 16 }, "end": { "line": 15, "column": 57 } },
      "13": { "start": { "line": 16, "column": 20 }, "end": { "line": 16, "column": 65 } },
      "14": { "start": { "line": 17, "column": 20 }, "end": { "line": 17, "column": 65 } },
      "15": { "start": { "line": 18, "column": 10 }, "end": { "line": 18, "column": 29 } },
      "16": { "start": { "line": 19, "column": 11 }, "end": { "line": 19, "column": 15 } },
      "17": { "start": { "line": 21, "column": 0 }, "end": { "line": 21, "column": 38 } },
      "18": { "start": { "line": 23, "column": 0 }, "end": { "line": 23, "column": 26 } },
      "19": { "start": { "line": 41, "column": 0 }, "end": { "line": 41, "column": 36 } },
      "20": { "start": { "line": 42, "column": 0 }, "end": { "line": 42, "column": 36 } },
      "21": { "start": { "line": 43, "column": 0 }, "end": { "line": 43, "column": 40 } },
      "22": { "start": { "line": 44, "column": 0 }, "end": { "line": 44, "column": 43 } },
      "23": { "start": { "line": 45, "column": 0 }, "end": { "line": 45, "column": 42 } },
      "24": { "start": { "line": 46, "column": 0 }, "end": { "line": 46, "column": 40 } },
      "25": { "start": { "line": 47, "column": 0 }, "end": { "line": 47, "column": 36 } },
      "26": { "start": { "line": 48, "column": 0 }, "end": { "line": 48, "column": 44 } },
      "27": { "start": { "line": 49, "column": 0 }, "end": { "line": 49, "column": 44 } },
      "28": { "start": { "line": 51, "column": 0 }, "end": { "line": 58, "column": 3 } },
      "29": { "start": { "line": 52, "column": 4 }, "end": { "line": 57, "column": 5 } },
      "30": { "start": { "line": 53, "column": 8 }, "end": { "line": 56, "column": 11 } },
      "31": { "start": { "line": 59, "column": 0 }, "end": { "line": 59, "column": 95 } },
      "32": { "start": { "line": 59, "column": 31 }, "end": { "line": 59, "column": 91 } },
      "33": { "start": { "line": 60, "column": 0 }, "end": { "line": 60, "column": 21 } }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": { "start": { "line": 2, "column": 56 }, "end": { "line": 2, "column": 57 } },
        "loc": { "start": { "line": 2, "column": 71 }, "end": { "line": 4, "column": 1 } },
        "line": 2
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": { "start": { "line": 51, "column": 8 }, "end": { "line": 51, "column": 9 } },
        "loc": { "start": { "line": 51, "column": 39 }, "end": { "line": 58, "column": 1 } },
        "line": 51
      },
      "2": {
        "name": "(anonymous_2)",
        "decl": { "start": { "line": 59, "column": 17 }, "end": { "line": 59, "column": 18 } },
        "loc": { "start": { "line": 59, "column": 29 }, "end": { "line": 59, "column": 93 } },
        "line": 59
      }
    },
    "branchMap": {
      "0": {
        "loc": { "start": { "line": 2, "column": 22 }, "end": { "line": 4, "column": 1 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 2, "column": 23 }, "end": { "line": 2, "column": 27 } },
          { "start": { "line": 2, "column": 31 }, "end": { "line": 2, "column": 51 } },
          { "start": { "line": 2, "column": 56 }, "end": { "line": 4, "column": 1 } }
        ],
        "line": 2
      },
      "1": {
        "loc": { "start": { "line": 3, "column": 11 }, "end": { "line": 3, "column": 61 } },
        "type": "cond-expr",
        "locations": [
          { "start": { "line": 3, "column": 37 }, "end": { "line": 3, "column": 40 } },
          { "start": { "line": 3, "column": 43 }, "end": { "line": 3, "column": 61 } }
        ],
        "line": 3
      },
      "2": {
        "loc": { "start": { "line": 3, "column": 12 }, "end": { "line": 3, "column": 33 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 3, "column": 12 }, "end": { "line": 3, "column": 15 } },
          { "start": { "line": 3, "column": 19 }, "end": { "line": 3, "column": 33 } }
        ],
        "line": 3
      },
      "3": {
        "loc": { "start": { "line": 52, "column": 4 }, "end": { "line": 57, "column": 5 } },
        "type": "if",
        "locations": [
          { "start": { "line": 52, "column": 4 }, "end": { "line": 57, "column": 5 } },
          { "start": { "line": 52, "column": 4 }, "end": { "line": 57, "column": 5 } }
        ],
        "line": 52
      }
    },
    "s": {
      "0": 1,
      "1": 13,
      "2": 1,
      "3": 1,
      "4": 1,
      "5": 1,
      "6": 1,
      "7": 1,
      "8": 1,
      "9": 1,
      "10": 1,
      "11": 1,
      "12": 1,
      "13": 1,
      "14": 1,
      "15": 1,
      "16": 1,
      "17": 1,
      "18": 1,
      "19": 1,
      "20": 1,
      "21": 1,
      "22": 1,
      "23": 1,
      "24": 1,
      "25": 1,
      "26": 1,
      "27": 1,
      "28": 1,
      "29": 0,
      "30": 0,
      "31": 1,
      "32": 1,
      "33": 1
    },
    "f": { "0": 13, "1": 0, "2": 1 },
    "b": { "0": [1, 1, 1], "1": [10, 3], "2": [13, 13], "3": [0, 0] },
    "inputSourceMap": {
      "version": 3,
      "file": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\index.ts",
      "sources": ["F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\index.ts"],
      "names": [],
      "mappings": ";;;;AAAA,oDAAqD;AACrD,4DAAqC;AAErC,oDAA8B;AAC9B,8CAAwB;AACxB,0DAAoC;AACpC,0DAAoC;AACpC,8DAAwC;AACxC,gEAA2C;AAC3C,gEAA0C;AAC1C,8DAAwC;AACxC,0DAAmC;AACnC,kEAA4C;AAC5C,kEAA4C;AAM5C,IAAM,GAAG,GAAG,iBAAO,EAAE,CAAC;AACtB,IAAM,IAAI,GAAG,IAAI,CAAC;AAElB,eAAe;AACf,GAAG,CAAC,GAAG,CAAC,qBAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AAE3B,SAAS;AACT,GAAG,CAAC,GAAG,CAAC,cAAI,EAAE,CAAC,CAAC;AAEhB,WAAW;AACX,uBAAuB;AACvB,kCAAkC;AAClC,oCAAoC;AACpC,yCAAyC;AACzC,4CAA4C;AAC5C,UAAU;AACV,+CAA+C;AAC/C,iCAAiC;AACjC,mDAAmD;AACnD,iCAAiC;AACjC,UAAU;AACV,qBAAqB;AACrB,QAAQ;AACR,cAAc;AACd,4BAA4B;AAC5B,MAAM;AAGN,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,iBAAO,CAAC,CAAC;AAC1B,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,iBAAO,CAAC,CAAC;AAC1B,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,mBAAS,CAAC,CAAC;AAC9B,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,oBAAW,CAAC,CAAC;AAClC,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,oBAAU,CAAC,CAAC;AAChC,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,mBAAS,CAAC,CAAC;AAC9B,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,iBAAO,CAAC,CAAC;AAC1B,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,qBAAW,CAAC,CAAC;AAClC,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,qBAAW,CAAC,CAAC;AAElC,WAAW;AACX,GAAG,CAAC,GAAG,CAAC,UAAC,GAAG,EAAE,GAAG,EAAE,GAA2B,EAAE,IAAI;IAClD,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,EAAE;QACrB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,MAAM,EAAE,gBAAM,CAAC,MAAM,CAAC,KAAK;YAC3B,GAAG,EAAE,SAAS;SACf,CAAC,CAAC;KACJ;AACH,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,mCAAuB,IAAM,CAAC,EAA1C,CAA0C,CAAC,CAAC;AAEnE,iBAAS,GAAG,CAAA",
      "sourcesContent": [
        "import express, { Response, Request } from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport expressJwt from 'express-jwt';\r\nimport config from './config';\r\nimport cors from 'cors';\r\nimport userApi from \"./api/userApi\";\r\nimport demoApi from \"./api/demoApi\";\r\nimport memberApi from \"./api/memberApi\";\r\nimport functionApi from \"./api/featureApi\";\r\nimport projectApi from \"./api/projectApi\";\r\nimport deviceApi from \"./api/deviceApi\";\r\nimport riskApi from \"./api/riskApi\"\r\nimport activityApi from \"./api/activityApi\";\r\nimport workTimeApi from \"./api/workTimeApi\";\r\nimport configApi from \"./api/configApi\";\r\n\r\n\r\nimport { ResultCommon } from 'achieve-it-contract';\r\n\r\nconst app = express();\r\nconst port = 3000;\r\n\r\n// 解决json数据传输问题\r\napp.use(bodyParser.json());\r\n\r\n// 解决跨域问题\r\napp.use(cors());\r\n\r\n// 解决身份验证问题\r\n// app.use(expressJwt({\r\n//     secret: config.jwt.signKey,\r\n//     getToken: (req: Request) => {\r\n//       if (req.headers.authorization) {\r\n//         return req.headers.authorization;\r\n//       }\r\n//       else if (req.body && req.body.token) {\r\n//         return req.body.token;\r\n//       } else if (req.query && req.query.token) {\r\n//         return req.query.token\r\n//       }\r\n//       return null;\r\n//     }\r\n// }).unless({\r\n//     path: [\"/user/login\"]\r\n// }))\r\n\r\n\r\napp.use('/demo', demoApi);\r\napp.use('/user', userApi);\r\napp.use('/member', memberApi);\r\napp.use('/function', functionApi);\r\napp.use('/project', projectApi);\r\napp.use('/device', deviceApi);\r\napp.use('/risk', riskApi);\r\napp.use('/activity', activityApi);\r\napp.use('/workTime', workTimeApi);\r\n\r\n// 身份验证错误处理\r\napp.use((err, req, res: Response<ResultCommon>, next) => {\r\n  if (err.status == 401) {\r\n    res.status(401).json({\r\n      status: config.status.ERROR,\r\n      msg: 'token失效'\r\n    });\r\n  }\r\n});\r\n\r\napp.listen(port, () => console.log(`点我 http://localhost:${port}`));\r\n\r\nexport = app\r\n"
      ]
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "3aede0a1e64f0e0a0228c01a9a2b1ea2cd657457",
    "contentHash": "d8494af91369356aae248c10d57806518629174b1a7e9c2581e7ebf45d480f35"
  },
  "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\config.ts": {
    "path": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\config.ts",
    "statementMap": {
      "0": { "start": { "line": 2, "column": 0 }, "end": { "line": 2, "column": 62 } },
      "1": { "start": { "line": 3, "column": 13 }, "end": { "line": 55, "column": 1 } },
      "2": { "start": { "line": 56, "column": 0 }, "end": { "line": 56, "column": 25 } }
    },
    "fnMap": {},
    "branchMap": {},
    "s": { "0": 1, "1": 1, "2": 1 },
    "f": {},
    "b": {},
    "inputSourceMap": {
      "version": 3,
      "file": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\config.ts",
      "sources": ["F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\config.ts"],
      "names": [],
      "mappings": ";;AAEA,IAAM,MAAM,GAAkE;IAC5E,KAAK,EAAE;QACL,IAAI,EAAE,+CAA+C;QACrD,IAAI,EAAE,KAAK;QACX,QAAQ,EAAE,WAAW;QACrB,QAAQ,EAAE,WAAW;QACrB,IAAI,EAAE,MAAM;KACb;IACD,SAAS,EAAE;QACT,IAAI,EAAE,+CAA+C;QACrD,IAAI,EAAE,KAAK;QACX,QAAQ,EAAE,WAAW;QACrB,QAAQ,EAAE,WAAW;QACrB,IAAI,EAAE,MAAM;QACZ,eAAe,EAAE,EAAE;KACpB;IACD,GAAG,EAAE;QACH,OAAO,EAAE,4BAA4B;KACtC;IACD,MAAM,EAAE;QACN,OAAO,EAAE,IAAI;QACb,KAAK,EAAE,OAAO;KACf;IACD,GAAG,EAAE;QACH,UAAU,EAAE,SAAS;QACrB,aAAa,EAAE,SAAS;KACzB;IACD,SAAS,EAAE;QACT,YAAY,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC;QAC3B,SAAS,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,YAAY,EAAE,YAAY,EAAE,MAAM,CAAC;QAC3E,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,CAAC;QAC9E,aAAa,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC;QACjE,YAAY,EAAE;YACZ;gBACE,MAAM,EAAE,MAAM;gBACd,YAAY,EAAE,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC;aACvE;YACD;gBACE,MAAM,EAAE,MAAM;gBACd,YAAY,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;aAClD;YACD;gBACE,MAAM,EAAE,MAAM;gBACd,YAAY,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;aACvC;YACD;gBACE,MAAM,EAAE,MAAM;gBACd,YAAY,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC;aACtD;SACF;QACD,UAAU,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC;KACnC;CACF,CAAC;AAEF,kBAAe,MAAM,CAAC",
      "sourcesContent": [
        "import { StatusType } from 'achieve-it-contract';\r\n\r\nconst config: { [key: string]: any; status: { [key: string]: StatusType } } = {\r\n  mysql: {\r\n    host: 'rm-bp1r8386h2f0n9713jo.mysql.rds.aliyuncs.com',\r\n    user: 'zou',\r\n    password: 'Zouzou123',\r\n    database: 'achieveit',\r\n    port: '3306'\r\n  },\r\n  mysqlPool: {\r\n    host: 'rm-bp1r8386h2f0n9713jo.mysql.rds.aliyuncs.com',\r\n    user: 'zou',\r\n    password: 'Zouzou123',\r\n    database: 'achieveit',\r\n    port: '3306',\r\n    connectionLimit: 10\r\n  },\r\n  jwt: {\r\n    signKey: 'achieveit_project_sign_key'\r\n  },\r\n  status: {\r\n    SUCCESS: 'ok',\r\n    ERROR: 'error'\r\n  },\r\n  msg: {\r\n    GET_MEMBER: 'success',\r\n    UPDATE_MEMBER: 'success'\r\n  },\r\n  numberMap: {\r\n    deviceStatus: ['可用', '不可用'],\r\n    memberJob: ['项目经理', '项目上级', '组织级配置管理员', 'EPG Leader', 'QA Manager', '普通员工'],\r\n    projectRole: [\"开发 Leader\", \"测试 Leader\", \"开发人员\", \"测试人员\", \"配置管理人员\", \"QA\", \"EPG\"],\r\n    projectStatus: ['申请立项', '已立项', '立刻驳回', '进行中', '已交付', '结束', '已归档'],\r\n    activityName: [\r\n      {\r\n        prefix: '工程活动',\r\n        activityList: ['需求开发', '设计', '编码', '单体测试', '集成测试', '系统测试', '交付', '维护']\r\n      },\r\n      {\r\n        prefix: '管理活动',\r\n        activityList: ['范围管理', '计划与调整', '监控与分析', '联络与沟通']\r\n      },\r\n      {\r\n        prefix: '外包活动',\r\n        activityList: ['外包管理', '外包验收', '外包支持']\r\n      },\r\n      {\r\n        prefix: '支持活动',\r\n        activityList: ['配置管理', 'QA 审计', '会议报告总结', '培训', '其他']\r\n      }\r\n    ],\r\n    riskStatus: ['未处理', '正在跟进', '已解决']\r\n  }\r\n};\r\n\r\nexport default config;\r\n"
      ]
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "63a033750ab35b4499b344e201de592e1285268b",
    "contentHash": "737a62b6d76766f08b75a7344bc5b5234c971ac686a7ce7659ed4f46d0d0cdcc"
  },
  "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\userApi.ts": {
    "path": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\userApi.ts",
    "statementMap": {
      "0": { "start": { "line": 2, "column": 22 }, "end": { "line": 4, "column": 1 } },
      "1": { "start": { "line": 3, "column": 4 }, "end": { "line": 3, "column": 62 } },
      "2": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 62 } },
      "3": { "start": { "line": 6, "column": 15 }, "end": { "line": 6, "column": 52 } },
      "4": { "start": { "line": 7, "column": 16 }, "end": { "line": 7, "column": 51 } },
      "5": { "start": { "line": 8, "column": 21 }, "end": { "line": 8, "column": 61 } },
      "6": { "start": { "line": 9, "column": 15 }, "end": { "line": 9, "column": 51 } },
      "7": { "start": { "line": 10, "column": 13 }, "end": { "line": 10, "column": 31 } },
      "8": { "start": { "line": 11, "column": 18 }, "end": { "line": 11, "column": 41 } },
      "9": { "start": { "line": 12, "column": 13 }, "end": { "line": 12, "column": 39 } },
      "10": { "start": { "line": 15, "column": 0 }, "end": { "line": 46, "column": 3 } },
      "11": { "start": { "line": 16, "column": 19 }, "end": { "line": 16, "column": 36 } },
      "12": { "start": { "line": 17, "column": 19 }, "end": { "line": 17, "column": 36 } },
      "13": { "start": { "line": 18, "column": 4 }, "end": { "line": 45, "column": 7 } },
      "14": { "start": { "line": 19, "column": 8 }, "end": { "line": 44, "column": 9 } },
      "15": { "start": { "line": 20, "column": 12 }, "end": { "line": 20, "column": 47 } },
      "16": { "start": { "line": 22, "column": 13 }, "end": { "line": 44, "column": 9 } },
      "17": { "start": { "line": 23, "column": 23 }, "end": { "line": 23, "column": 32 } },
      "18": { "start": { "line": 25, "column": 24 }, "end": { "line": 30, "column": 14 } },
      "19": { "start": { "line": 31, "column": 12 }, "end": { "line": 31, "column": 30 } },
      "20": { "start": { "line": 32, "column": 12 }, "end": { "line": 37, "column": 15 } },
      "21": { "start": { "line": 40, "column": 12 }, "end": { "line": 43, "column": 15 } },
      "22": { "start": { "line": 47, "column": 0 }, "end": { "line": 47, "column": 25 } }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": { "start": { "line": 2, "column": 56 }, "end": { "line": 2, "column": 57 } },
        "loc": { "start": { "line": 2, "column": 71 }, "end": { "line": 4, "column": 1 } },
        "line": 2
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": { "start": { "line": 15, "column": 22 }, "end": { "line": 15, "column": 23 } },
        "loc": { "start": { "line": 15, "column": 42 }, "end": { "line": 46, "column": 1 } },
        "line": 15
      },
      "2": {
        "name": "(anonymous_2)",
        "decl": { "start": { "line": 18, "column": 82 }, "end": { "line": 18, "column": 83 } },
        "loc": { "start": { "line": 18, "column": 105 }, "end": { "line": 45, "column": 5 } },
        "line": 18
      }
    },
    "branchMap": {
      "0": {
        "loc": { "start": { "line": 2, "column": 22 }, "end": { "line": 4, "column": 1 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 2, "column": 23 }, "end": { "line": 2, "column": 27 } },
          { "start": { "line": 2, "column": 31 }, "end": { "line": 2, "column": 51 } },
          { "start": { "line": 2, "column": 56 }, "end": { "line": 4, "column": 1 } }
        ],
        "line": 2
      },
      "1": {
        "loc": { "start": { "line": 3, "column": 11 }, "end": { "line": 3, "column": 61 } },
        "type": "cond-expr",
        "locations": [
          { "start": { "line": 3, "column": 37 }, "end": { "line": 3, "column": 40 } },
          { "start": { "line": 3, "column": 43 }, "end": { "line": 3, "column": 61 } }
        ],
        "line": 3
      },
      "2": {
        "loc": { "start": { "line": 3, "column": 12 }, "end": { "line": 3, "column": 33 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 3, "column": 12 }, "end": { "line": 3, "column": 15 } },
          { "start": { "line": 3, "column": 19 }, "end": { "line": 3, "column": 33 } }
        ],
        "line": 3
      },
      "3": {
        "loc": { "start": { "line": 19, "column": 8 }, "end": { "line": 44, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 19, "column": 8 }, "end": { "line": 44, "column": 9 } },
          { "start": { "line": 19, "column": 8 }, "end": { "line": 44, "column": 9 } }
        ],
        "line": 19
      },
      "4": {
        "loc": { "start": { "line": 22, "column": 13 }, "end": { "line": 44, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 22, "column": 13 }, "end": { "line": 44, "column": 9 } },
          { "start": { "line": 22, "column": 13 }, "end": { "line": 44, "column": 9 } }
        ],
        "line": 22
      }
    },
    "s": {
      "0": 1,
      "1": 4,
      "2": 1,
      "3": 1,
      "4": 1,
      "5": 1,
      "6": 1,
      "7": 1,
      "8": 1,
      "9": 1,
      "10": 1,
      "11": 2,
      "12": 2,
      "13": 2,
      "14": 2,
      "15": 0,
      "16": 2,
      "17": 1,
      "18": 1,
      "19": 1,
      "20": 1,
      "21": 1,
      "22": 1
    },
    "f": { "0": 4, "1": 2, "2": 2 },
    "b": { "0": [1, 1, 1], "1": [2, 2], "2": [4, 4], "3": [0, 2], "4": [1, 1] },
    "inputSourceMap": {
      "version": 3,
      "file": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\userApi.ts",
      "sources": ["F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\userApi.ts"],
      "names": [],
      "mappings": ";;;;;AAAA,qDAA+B;AAC/B,oDAA4C;AAC5C,8DAA+B;AAC/B,oDAA4B;AAE5B,gCAA4C;AAC5C,0CAAoC;AAEpC,IAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,cAAc;AACd,OAAO;AACP,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAC,GAAG,EAAE,GAA8B;IACxD,IAAM,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IACnC,IAAM,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IAEnC,gBAAI,CAAC,KAAK,CAAC,gBAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,UAAC,GAAG,EAAE,MAAM;QAChE,IAAI,GAAG,EAAE;YACP,wBAAiB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;SAC7B;aAAM,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;YAC7B,IAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACvB,UAAU;YAEV,IAAM,KAAK,GAAG,sBAAG,CAAC,IAAI,CACpB;gBACE,QAAQ,UAAA;gBACR,GAAG,EAAE,gBAAM,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;aAC1C,EACD,gBAAM,CAAC,GAAG,CAAC,OAAO,EAClB;gBACE,SAAS,EAAE,GAAG;aACf,CACF,CAAC;YAEF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,GAAG,CAAC,IAAI,CAAC;gBACP,MAAM,EAAE,IAAI;gBACZ,GAAG,EAAE,MAAM;gBACX,KAAK,OAAA;gBACL,SAAS,EAAE,IAAI,CAAC,SAAS;aAC1B,CAAC,CAAC;SACJ;aAAM;YACL,GAAG,CAAC,IAAI,CAAC;gBACP,MAAM,EAAE,gBAAM,CAAC,MAAM,CAAC,KAAK;gBAC3B,GAAG,EAAE,UAAU;aAChB,CAAC,CAAC;SACJ;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,kBAAe,MAAM,CAAC",
      "sourcesContent": [
        "import config from '../config';\r\nimport express, { Response } from 'express';\r\nimport jwt from 'jsonwebtoken';\r\nimport $sql from './sqlMap';\r\nimport { UserLoginResult } from 'achieve-it-contract';\r\nimport { mysqlErrorHandler } from '../util';\r\nimport { conn } from '../mysqlPool';\r\n\r\nconst router = express.Router();\r\n\r\n// /user/login\r\n// 用户登录\r\nrouter.post('/login', (req, res: Response<UserLoginResult>) => {\r\n  const username = req.body.username;\r\n  const password = req.body.password;\r\n\r\n  conn.query($sql.user.checkUser, [username, password], (err, result) => {\r\n    if (err) {\r\n      mysqlErrorHandler(res, err);\r\n    } else if (result.length == 1) {\r\n      const user = result[0];\r\n      // 生成token\r\n\r\n      const token = jwt.sign(\r\n        {\r\n          username,\r\n          job: config.numberMap.memberJob[user.job]\r\n        },\r\n        config.jwt.signKey,\r\n        {\r\n          expiresIn: 600\r\n        }\r\n      );\r\n      \r\n      console.log(user);\r\n      res.json({\r\n        status: 'ok',\r\n        msg: '登陆成功',\r\n        token,\r\n        member_id: user.member_id\r\n      });\r\n    } else {\r\n      res.json({\r\n        status: config.status.ERROR,\r\n        msg: '用户名或密码错误'\r\n      });\r\n    }\r\n  });\r\n});\r\n\r\nexport default router;\r\n"
      ]
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "74feb69dd404ffc3f2202614eee4f09851754a7e",
    "contentHash": "36529308a78c8166697bc5c3f2937fd4a8b9b51c2b3d16f822afeaa03cb86305"
  },
  "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\sqlMap.ts": {
    "path": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\sqlMap.ts",
    "statementMap": {
      "0": { "start": { "line": 2, "column": 0 }, "end": { "line": 2, "column": 62 } },
      "1": { "start": { "line": 3, "column": 14 }, "end": { "line": 20, "column": 1 } },
      "2": { "start": { "line": 5, "column": 8 }, "end": { "line": 5, "column": 124 } },
      "3": { "start": { "line": 8, "column": 24 }, "end": { "line": 8, "column": 59 } },
      "4": { "start": { "line": 9, "column": 8 }, "end": { "line": 9, "column": 170 } },
      "5": { "start": { "line": 9, "column": 142 }, "end": { "line": 9, "column": 153 } },
      "6": { "start": { "line": 12, "column": 8 }, "end": { "line": 12, "column": 89 } },
      "7": { "start": { "line": 15, "column": 8 }, "end": { "line": 18, "column": 59 } },
      "8": { "start": { "line": 17, "column": 32 }, "end": { "line": 17, "column": 51 } },
      "9": { "start": { "line": 21, "column": 0 }, "end": { "line": 135, "column": 2 } }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": { "start": { "line": 4, "column": 19 }, "end": { "line": 4, "column": 20 } },
        "loc": { "start": { "line": 4, "column": 37 }, "end": { "line": 6, "column": 5 } },
        "line": 4
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": { "start": { "line": 7, "column": 19 }, "end": { "line": 7, "column": 20 } },
        "loc": { "start": { "line": 7, "column": 37 }, "end": { "line": 10, "column": 5 } },
        "line": 7
      },
      "2": {
        "name": "(anonymous_2)",
        "decl": { "start": { "line": 9, "column": 128 }, "end": { "line": 9, "column": 129 } },
        "loc": { "start": { "line": 9, "column": 140 }, "end": { "line": 9, "column": 155 } },
        "line": 9
      },
      "3": {
        "name": "(anonymous_3)",
        "decl": { "start": { "line": 11, "column": 19 }, "end": { "line": 11, "column": 20 } },
        "loc": { "start": { "line": 11, "column": 37 }, "end": { "line": 13, "column": 5 } },
        "line": 11
      },
      "4": {
        "name": "(anonymous_4)",
        "decl": { "start": { "line": 14, "column": 19 }, "end": { "line": 14, "column": 20 } },
        "loc": { "start": { "line": 14, "column": 37 }, "end": { "line": 19, "column": 5 } },
        "line": 14
      },
      "5": {
        "name": "(anonymous_5)",
        "decl": { "start": { "line": 17, "column": 17 }, "end": { "line": 17, "column": 18 } },
        "loc": { "start": { "line": 17, "column": 30 }, "end": { "line": 17, "column": 53 } },
        "line": 17
      }
    },
    "branchMap": {
      "0": {
        "loc": { "start": { "line": 5, "column": 28 }, "end": { "line": 5, "column": 52 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 5, "column": 28 }, "end": { "line": 5, "column": 45 } },
          { "start": { "line": 5, "column": 49 }, "end": { "line": 5, "column": 52 } }
        ],
        "line": 5
      }
    },
    "s": { "0": 1, "1": 1, "2": 4, "3": 5, "4": 5, "5": 23, "6": 2, "7": 3, "8": 10, "9": 1 },
    "f": { "0": 4, "1": 5, "2": 23, "3": 2, "4": 3, "5": 10 },
    "b": { "0": [4, 4] },
    "inputSourceMap": {
      "version": 3,
      "file": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\sqlMap.ts",
      "sources": ["F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\sqlMap.ts"],
      "names": [],
      "mappings": "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",
      "sourcesContent": [
        "/**\r\n * @author: zou\r\n * @description: sql语句字符串模板\r\n */\r\ninterface SelectOption {\r\n  select_col?: string;\r\n  table_name: string;\r\n  key_name: string;\r\n}\r\n\r\ninterface InsertOption {\r\n  table_name: string;\r\n  select_col: string;\r\n}\r\n\r\ninterface DeleteOption {\r\n  table_name: string;\r\n  key_name: string;\r\n}\r\n\r\ninterface UpdateOption {\r\n  table_name: string;\r\n  key_name: string;\r\n  select_col: string;\r\n}\r\n\r\nconst pattern = {\r\n  selectPattern: (option: SelectOption) => {\r\n    return `select ${option.select_col || '*'} from ${option.table_name} where ${option.key_name} = ?`;\r\n  },\r\n  insertPattern: (option: InsertOption) => {\r\n    const col_count = option.select_col.split(',').length;\r\n    \r\n    return `insert into ${option.table_name} (${option.select_col}) values (${Array.from(\r\n      { length: col_count },\r\n      () => '?'\r\n    ).join()})`;\r\n  },\r\n  deletePattern: (option: DeleteOption) => {\r\n    return `delete from ${option.table_name} where ${option.key_name} = ?`;\r\n  },\r\n  updatePattern: (option: UpdateOption) => {\r\n    return `update ${option.table_name} set ${option.select_col\r\n      .split(',')\r\n      .map(x => (x += '=?'))\r\n      .join()} where ${option.key_name} = ?`;\r\n  }\r\n};\r\n\r\nexport default {\r\n  user: {\r\n    checkUser: 'select a.username, a.member_id, b.job from user a inner join member b on a.member_id = b.member_id  where a.username = ? and a.password = ?',\r\n    insertUser: 'insert into user (username, password, member_id) values (?, ?, ?)',\r\n    deleteUser: 'delete from user where member_id = ?'\r\n  },\r\n  member: {\r\n    getMemberById: pattern.selectPattern({\r\n      table_name: 'member',\r\n      key_name: 'member_id'\r\n    }),\r\n    // updateMemberById: \"update member set member_name = ?, email = ?, department = ?, leader_email = ?, phone = ?, job = ? where member_id = ?\",\r\n    updateMemberById: pattern.updatePattern({\r\n      table_name: 'member',\r\n      select_col: 'member_name, email, department, leader_email, phone, job',\r\n      key_name: 'member_id'\r\n    }),\r\n    insertMember: pattern.insertPattern({\r\n      table_name: 'member',\r\n      select_col: 'member_name, email, department, leader_email, phone, job'\r\n    }),\r\n    deleteMemberById: pattern.deletePattern({\r\n      table_name: 'member',\r\n      key_name: 'member_id'\r\n    }),\r\n    getMemberRole: \"select * from member_project where project_id = ? and member_id = ?\",\r\n    changeMemberRole: \"update member_project set role = ?, authority = ? where project_id = ? and member_id = ?\",\r\n    addMemberToProject: pattern.insertPattern({\r\n      table_name: 'member_project',\r\n      select_col: \"project_id, member_id, role, authority\"\r\n    })\r\n  },\r\n  function: {\r\n    getFunctionByProjectId: pattern.selectPattern({ table_name: 'function', key_name: 'function_id' }),\r\n    insertFunction: pattern.insertPattern({ table_name: 'function', select_col: 'function_name, project_id, layer' }),\r\n    setFunctionRelation: 'insert into function_function (first_function_id, second_function_id) values (?, ?)'\r\n  },\r\n\r\n  project: {\r\n    getProjectById: 'select * from project where project_id = ?',\r\n    deleteProjectById: 'delete from project where project_id = ?',\r\n    insertProject:\r\n      'insert into project (project_id, project_name, client_info, start_time, end_time, manager, important_events, technology, business, status) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)',\r\n    updateProjectById: `update project set project_name = ?, client_info = ?, start_time = ?, end_time = ?, manager = ?, important_events = ?, technology = ?,\r\n            business = ?, status = ? where project_id = ?`,\r\n    updateProjectStatus: pattern.updatePattern({\r\n      table_name: 'project',\r\n      select_col: 'status',\r\n      key_name: 'project_id'\r\n    }),\r\n    getAllProjects: 'select * from project',\r\n  },\r\n  /**\r\n   * @author: zou\r\n   */\r\n  device: {\r\n    getDeviceById: 'select * from device where device_id = ?',\r\n    updateDeviceById: 'update device set device_name = ?, device_status = ? where device_id = ?',\r\n    insertDevice: 'insert into device (device_name, device_status) values (?, ?)',\r\n    deleteDeviceById: 'delete from device where device_id = ?',\r\n    getProjectDeviceList: 'SELECT a.device_id, a.member_id, a.return_time, b.device_name FROM project_device a inner join device b on a.device_id = b.device_id where a.project_id = ?',\r\n    applyDeviceForProject: 'call applyDeviceForProject(?, ?, ?, ?)'\r\n  },\r\n  /**\r\n   * @author: zou\r\n   */\r\n  activity: {\r\n    getActivityById: 'select * from activity where activity_id = ?',\r\n    deleteActivityById: 'delete from activity where activity_id = ?',\r\n    updateActivityById: 'update activity set activity_name = ?, activity_content = ? where activity_id = ?',\r\n    insertActivity: 'insert into activity (activity_name, activity_content) values (?, ?)'\r\n  },\r\n  /**\r\n   * @author: zou\r\n   */\r\n  risk: {\r\n    getRiskById: 'select * from risk where risk_id = ?',\r\n    insertRisk: 'insert into risk (detail, project_id, solve_status) values (?, ?, ?)',\r\n    updateRiskById: 'update risk set detail = ?, solve_status = ? where risk_id = ?',\r\n    deleteRiskById: 'delete from risk where risk_id = ?',\r\n    getProjectRiskList: 'select * from risk where project_id = ?'\r\n  },\r\n  /**\r\n   * @author: zou\r\n   */\r\n  config: {\r\n    getConfigByProjectId: pattern.selectPattern({\r\n      table_name: \"config\",\r\n      key_name: \"project_id\"\r\n    }),\r\n    insertConfig: pattern.insertPattern({\r\n      table_name: \"config\",\r\n      select_col: \"git_address, server_menu, vm_space, project_id\"\r\n    }),\r\n    updateConfigByProjectId: pattern.updatePattern({\r\n      table_name: \"config\",\r\n      select_col: \"git_address, server_menu, vm_space\",\r\n      key_name: \"project_id\"\r\n    }),\r\n    deleteConfigByProjectId: pattern.deletePattern({\r\n      table_name: \"config\",\r\n      key_name: \"project_id\"\r\n    })\r\n  },\r\n  /**\r\n   * @author: zou\r\n   */\r\n  workTime: {\r\n    getMemberWorkTimeList: pattern.selectPattern({\r\n      table_name: 'work_time',\r\n      key_name: 'member_id'\r\n    }),\r\n    insertWorkTime: pattern.insertPattern({\r\n      table_name: 'work_time',\r\n      select_col: 'member_id, function_id, activity_content, project_id, start_time, end_time'\r\n    })\r\n  }\r\n};\r\n"
      ]
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "91963461656608e3f3e44d3e672da068800ea418",
    "contentHash": "caa94f9f16ea2feafb0f6351abb1cc99bca07119fb9056541a3b4fd0afeb7e4b"
  },
  "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\util.ts": {
    "path": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\util.ts",
    "statementMap": {
      "0": { "start": { "line": 2, "column": 22 }, "end": { "line": 4, "column": 1 } },
      "1": { "start": { "line": 3, "column": 4 }, "end": { "line": 3, "column": 62 } },
      "2": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 62 } },
      "3": { "start": { "line": 6, "column": 15 }, "end": { "line": 6, "column": 51 } },
      "4": { "start": { "line": 7, "column": 0 }, "end": { "line": 12, "column": 2 } },
      "5": { "start": { "line": 8, "column": 4 }, "end": { "line": 11, "column": 7 } },
      "6": { "start": { "line": 13, "column": 0 }, "end": { "line": 18, "column": 2 } },
      "7": { "start": { "line": 14, "column": 4 }, "end": { "line": 17, "column": 7 } },
      "8": { "start": { "line": 19, "column": 0 }, "end": { "line": 25, "column": 2 } },
      "9": { "start": { "line": 20, "column": 4 }, "end": { "line": 20, "column": 44 } },
      "10": { "start": { "line": 20, "column": 26 }, "end": { "line": 20, "column": 42 } },
      "11": { "start": { "line": 21, "column": 4 }, "end": { "line": 24, "column": 7 } },
      "12": { "start": { "line": 26, "column": 0 }, "end": { "line": 33, "column": 2 } },
      "13": { "start": { "line": 27, "column": 4 }, "end": { "line": 32, "column": 5 } },
      "14": { "start": { "line": 28, "column": 8 }, "end": { "line": 28, "column": 44 } },
      "15": { "start": { "line": 31, "column": 8 }, "end": { "line": 31, "column": 54 } },
      "16": { "start": { "line": 34, "column": 0 }, "end": { "line": 41, "column": 2 } },
      "17": { "start": { "line": 35, "column": 4 }, "end": { "line": 40, "column": 5 } },
      "18": { "start": { "line": 36, "column": 8 }, "end": { "line": 36, "column": 44 } },
      "19": { "start": { "line": 39, "column": 8 }, "end": { "line": 39, "column": 54 } },
      "20": { "start": { "line": 42, "column": 0 }, "end": { "line": 49, "column": 2 } },
      "21": { "start": { "line": 43, "column": 4 }, "end": { "line": 48, "column": 5 } },
      "22": { "start": { "line": 44, "column": 8 }, "end": { "line": 44, "column": 44 } },
      "23": { "start": { "line": 47, "column": 8 }, "end": { "line": 47, "column": 54 } }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": { "start": { "line": 2, "column": 56 }, "end": { "line": 2, "column": 57 } },
        "loc": { "start": { "line": 2, "column": 71 }, "end": { "line": 4, "column": 1 } },
        "line": 2
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": { "start": { "line": 7, "column": 28 }, "end": { "line": 7, "column": 29 } },
        "loc": { "start": { "line": 7, "column": 48 }, "end": { "line": 12, "column": 1 } },
        "line": 7
      },
      "2": {
        "name": "(anonymous_2)",
        "decl": { "start": { "line": 13, "column": 31 }, "end": { "line": 13, "column": 32 } },
        "loc": { "start": { "line": 13, "column": 46 }, "end": { "line": 18, "column": 1 } },
        "line": 13
      },
      "3": {
        "name": "(anonymous_3)",
        "decl": { "start": { "line": 19, "column": 25 }, "end": { "line": 19, "column": 26 } },
        "loc": { "start": { "line": 19, "column": 45 }, "end": { "line": 25, "column": 1 } },
        "line": 19
      },
      "4": {
        "name": "(anonymous_4)",
        "decl": { "start": { "line": 26, "column": 30 }, "end": { "line": 26, "column": 31 } },
        "loc": { "start": { "line": 26, "column": 50 }, "end": { "line": 33, "column": 1 } },
        "line": 26
      },
      "5": {
        "name": "(anonymous_5)",
        "decl": { "start": { "line": 34, "column": 30 }, "end": { "line": 34, "column": 31 } },
        "loc": { "start": { "line": 34, "column": 50 }, "end": { "line": 41, "column": 1 } },
        "line": 34
      },
      "6": {
        "name": "(anonymous_6)",
        "decl": { "start": { "line": 42, "column": 30 }, "end": { "line": 42, "column": 31 } },
        "loc": { "start": { "line": 42, "column": 50 }, "end": { "line": 49, "column": 1 } },
        "line": 42
      }
    },
    "branchMap": {
      "0": {
        "loc": { "start": { "line": 2, "column": 22 }, "end": { "line": 4, "column": 1 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 2, "column": 23 }, "end": { "line": 2, "column": 27 } },
          { "start": { "line": 2, "column": 31 }, "end": { "line": 2, "column": 51 } },
          { "start": { "line": 2, "column": 56 }, "end": { "line": 4, "column": 1 } }
        ],
        "line": 2
      },
      "1": {
        "loc": { "start": { "line": 3, "column": 11 }, "end": { "line": 3, "column": 61 } },
        "type": "cond-expr",
        "locations": [
          { "start": { "line": 3, "column": 37 }, "end": { "line": 3, "column": 40 } },
          { "start": { "line": 3, "column": 43 }, "end": { "line": 3, "column": 61 } }
        ],
        "line": 3
      },
      "2": {
        "loc": { "start": { "line": 3, "column": 12 }, "end": { "line": 3, "column": 33 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 3, "column": 12 }, "end": { "line": 3, "column": 15 } },
          { "start": { "line": 3, "column": 19 }, "end": { "line": 3, "column": 33 } }
        ],
        "line": 3
      },
      "3": {
        "loc": { "start": { "line": 20, "column": 4 }, "end": { "line": 20, "column": 44 } },
        "type": "if",
        "locations": [
          { "start": { "line": 20, "column": 4 }, "end": { "line": 20, "column": 44 } },
          { "start": { "line": 20, "column": 4 }, "end": { "line": 20, "column": 44 } }
        ],
        "line": 20
      },
      "4": {
        "loc": { "start": { "line": 27, "column": 4 }, "end": { "line": 32, "column": 5 } },
        "type": "if",
        "locations": [
          { "start": { "line": 27, "column": 4 }, "end": { "line": 32, "column": 5 } },
          { "start": { "line": 27, "column": 4 }, "end": { "line": 32, "column": 5 } }
        ],
        "line": 27
      },
      "5": {
        "loc": { "start": { "line": 35, "column": 4 }, "end": { "line": 40, "column": 5 } },
        "type": "if",
        "locations": [
          { "start": { "line": 35, "column": 4 }, "end": { "line": 40, "column": 5 } },
          { "start": { "line": 35, "column": 4 }, "end": { "line": 40, "column": 5 } }
        ],
        "line": 35
      },
      "6": {
        "loc": { "start": { "line": 43, "column": 4 }, "end": { "line": 48, "column": 5 } },
        "type": "if",
        "locations": [
          { "start": { "line": 43, "column": 4 }, "end": { "line": 48, "column": 5 } },
          { "start": { "line": 43, "column": 4 }, "end": { "line": 48, "column": 5 } }
        ],
        "line": 43
      }
    },
    "s": {
      "0": 1,
      "1": 1,
      "2": 1,
      "3": 1,
      "4": 1,
      "5": 0,
      "6": 1,
      "7": 9,
      "8": 1,
      "9": 2,
      "10": 0,
      "11": 2,
      "12": 1,
      "13": 1,
      "14": 0,
      "15": 1,
      "16": 1,
      "17": 1,
      "18": 0,
      "19": 1,
      "20": 1,
      "21": 0,
      "22": 0,
      "23": 0
    },
    "f": { "0": 1, "1": 0, "2": 9, "3": 2, "4": 1, "5": 1, "6": 0 },
    "b": { "0": [1, 1, 1], "1": [1, 0], "2": [1, 1], "3": [0, 2], "4": [0, 1], "5": [0, 1], "6": [0, 0] },
    "inputSourceMap": {
      "version": 3,
      "file": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\util.ts",
      "sources": ["F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\util.ts"],
      "names": [],
      "mappings": ";;;;;AAEA,oDAA8B;AAEjB,QAAA,iBAAiB,GAAG,UAAC,GAA2B,EAAE,GAAG;IAChE,GAAG,CAAC,IAAI,CAAC;QACP,MAAM,EAAE,gBAAM,CAAC,MAAM,CAAC,KAAK;QAC3B,GAAG,EAAE,UAAU,GAAG,GAAG;KACtB,CAAC,CAAC;AACL,CAAC,CAAC;AAEW,QAAA,oBAAoB,GAAG,UAAC,GAA2B;IAC9D,GAAG,CAAC,IAAI,CAAC;QACP,MAAM,EAAE,gBAAM,CAAC,MAAM,CAAC,KAAK;QAC3B,GAAG,EAAE,WAAW;KACjB,CAAC,CAAC;AACL,CAAC,CAAC;AAEW,QAAA,cAAc,GAAG,UAAC,GAA2B,EAAE,GAAe;IAAf,oBAAA,EAAA,eAAe;IACzE,GAAG,CAAC,IAAI,CAAC;QACP,MAAM,EAAE,gBAAM,CAAC,MAAM,CAAC,OAAO;QAC7B,GAAG,EAAE,GAAG;KACT,CAAC,CAAC;AACL,CAAC,CAAC;AAEW,QAAA,mBAAmB,GAAG,UAAC,GAA2B,EAAE,GAAG;IAClE,IAAI,GAAG,EAAE;QACP,yBAAiB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;KAC7B;SAAM;QACL,sBAAc,CAAC,GAAG,EAAE,gBAAgB,CAAC,CAAC;KACvC;AACH,CAAC,CAAC;AAEW,QAAA,mBAAmB,GAAG,UAAC,GAA2B,EAAE,GAAG;IAClE,IAAI,GAAG,EAAE;QACP,yBAAiB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;KAC7B;SAAM;QACL,sBAAc,CAAC,GAAG,EAAE,gBAAgB,CAAC,CAAC;KACvC;AACH,CAAC,CAAC;AAEW,QAAA,mBAAmB,GAAG,UAAC,GAA2B,EAAE,GAAG;IAClE,IAAI,GAAG,EAAE;QACP,yBAAiB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;KAC7B;SAAM;QACL,sBAAc,CAAC,GAAG,EAAE,gBAAgB,CAAC,CAAC;KACvC;AACH,CAAC,CAAC",
      "sourcesContent": [
        "import { ResultCommon } from 'achieve-it-contract';\r\nimport { Response } from 'express';\r\nimport config from './config';\r\n\r\nexport const mysqlErrorHandler = (res: Response<ResultCommon>, err) => {\r\n  res.json({\r\n    status: config.status.ERROR,\r\n    msg: '[mysql] ' + err\r\n  });\r\n};\r\n\r\nexport const notFoundErrorHandler = (res: Response<ResultCommon>) => {\r\n  res.json({\r\n    status: config.status.ERROR,\r\n    msg: 'not found'\r\n  });\r\n};\r\n\r\nexport const successHandler = (res: Response<ResultCommon>, msg = 'success') => {\r\n  res.json({\r\n    status: config.status.SUCCESS,\r\n    msg: msg\r\n  });\r\n};\r\n\r\nexport const commomInsertHandler = (res: Response<ResultCommon>, err) => {\r\n  if (err) {\r\n    mysqlErrorHandler(res, err);\r\n  } else {\r\n    successHandler(res, 'insert success');\r\n  }\r\n};\r\n\r\nexport const commomUpdateHandler = (res: Response<ResultCommon>, err) => {\r\n  if (err) {\r\n    mysqlErrorHandler(res, err);\r\n  } else {\r\n    successHandler(res, 'update success');\r\n  }\r\n};\r\n\r\nexport const commonDeleteHandler = (res: Response<ResultCommon>, err) => {\r\n  if (err) {\r\n    mysqlErrorHandler(res, err);\r\n  } else {\r\n    successHandler(res, 'delete success');\r\n  }\r\n};\r\n"
      ]
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "0874fca15f9d4c7fc815b7c7a999e5ceb888a697",
    "contentHash": "f585942c589787b4ebb8b587f1bddb3ce1cf84f59ef766d7ef81f7e67de1de98"
  },
  "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\mysqlPool.ts": {
    "path": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\mysqlPool.ts",
    "statementMap": {
      "0": { "start": { "line": 2, "column": 22 }, "end": { "line": 4, "column": 1 } },
      "1": { "start": { "line": 3, "column": 4 }, "end": { "line": 3, "column": 62 } },
      "2": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 62 } },
      "3": { "start": { "line": 6, "column": 14 }, "end": { "line": 6, "column": 47 } },
      "4": { "start": { "line": 7, "column": 15 }, "end": { "line": 7, "column": 51 } },
      "5": { "start": { "line": 8, "column": 11 }, "end": { "line": 8, "column": 65 } },
      "6": { "start": { "line": 9, "column": 0 }, "end": { "line": 21, "column": 2 } },
      "7": { "start": { "line": 11, "column": 8 }, "end": { "line": 19, "column": 11 } },
      "8": { "start": { "line": 12, "column": 12 }, "end": { "line": 14, "column": 13 } },
      "9": { "start": { "line": 13, "column": 16 }, "end": { "line": 13, "column": 26 } },
      "10": { "start": { "line": 15, "column": 12 }, "end": { "line": 18, "column": 15 } },
      "11": { "start": { "line": 16, "column": 16 }, "end": { "line": 16, "column": 38 } },
      "12": { "start": { "line": 17, "column": 16 }, "end": { "line": 17, "column": 31 } }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": { "start": { "line": 2, "column": 56 }, "end": { "line": 2, "column": 57 } },
        "loc": { "start": { "line": 2, "column": 71 }, "end": { "line": 4, "column": 1 } },
        "line": 2
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": { "start": { "line": 10, "column": 11 }, "end": { "line": 10, "column": 12 } },
        "loc": { "start": { "line": 10, "column": 44 }, "end": { "line": 20, "column": 5 } },
        "line": 10
      },
      "2": {
        "name": "(anonymous_2)",
        "decl": { "start": { "line": 11, "column": 27 }, "end": { "line": 11, "column": 28 } },
        "loc": { "start": { "line": 11, "column": 48 }, "end": { "line": 19, "column": 9 } },
        "line": 11
      },
      "3": {
        "name": "(anonymous_3)",
        "decl": { "start": { "line": 15, "column": 36 }, "end": { "line": 15, "column": 37 } },
        "loc": { "start": { "line": 15, "column": 59 }, "end": { "line": 18, "column": 13 } },
        "line": 15
      }
    },
    "branchMap": {
      "0": {
        "loc": { "start": { "line": 2, "column": 22 }, "end": { "line": 4, "column": 1 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 2, "column": 23 }, "end": { "line": 2, "column": 27 } },
          { "start": { "line": 2, "column": 31 }, "end": { "line": 2, "column": 51 } },
          { "start": { "line": 2, "column": 56 }, "end": { "line": 4, "column": 1 } }
        ],
        "line": 2
      },
      "1": {
        "loc": { "start": { "line": 3, "column": 11 }, "end": { "line": 3, "column": 61 } },
        "type": "cond-expr",
        "locations": [
          { "start": { "line": 3, "column": 37 }, "end": { "line": 3, "column": 40 } },
          { "start": { "line": 3, "column": 43 }, "end": { "line": 3, "column": 61 } }
        ],
        "line": 3
      },
      "2": {
        "loc": { "start": { "line": 3, "column": 12 }, "end": { "line": 3, "column": 33 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 3, "column": 12 }, "end": { "line": 3, "column": 15 } },
          { "start": { "line": 3, "column": 19 }, "end": { "line": 3, "column": 33 } }
        ],
        "line": 3
      },
      "3": {
        "loc": { "start": { "line": 12, "column": 12 }, "end": { "line": 14, "column": 13 } },
        "type": "if",
        "locations": [
          { "start": { "line": 12, "column": 12 }, "end": { "line": 14, "column": 13 } },
          { "start": { "line": 12, "column": 12 }, "end": { "line": 14, "column": 13 } }
        ],
        "line": 12
      }
    },
    "s": {
      "0": 1,
      "1": 2,
      "2": 1,
      "3": 1,
      "4": 1,
      "5": 1,
      "6": 1,
      "7": 21,
      "8": 21,
      "9": 0,
      "10": 21,
      "11": 21,
      "12": 21
    },
    "f": { "0": 2, "1": 21, "2": 21, "3": 21 },
    "b": { "0": [1, 1, 1], "1": [1, 1], "2": [2, 2], "3": [0, 21] },
    "inputSourceMap": {
      "version": 3,
      "file": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\mysqlPool.ts",
      "sources": ["F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\mysqlPool.ts"],
      "names": [],
      "mappings": ";;;;;AAAA,gDAA0B;AAC1B,oDAA8B;AAE9B,IAAM,IAAI,GAAG,eAAK,CAAC,UAAU,CAAC,gBAAM,CAAC,SAAS,CAAC,CAAC;AAEnC,QAAA,IAAI,GAAG;IAClB,KAAK,EAAE,UAAC,GAAG,EAAE,MAAM,EAAE,QAAQ;QAC3B,IAAI,CAAC,aAAa,CAAC,UAAC,GAAG,EAAE,IAAI;YAC3B,IAAI,GAAG,EAAE;gBACP,MAAM,GAAG,CAAC;aACX;YACD,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,EAAE,UAAC,GAAG,EAAE,MAAM;gBAClC,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;gBACtB,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;CACF,CAAC",
      "sourcesContent": [
        "import mysql from 'mysql';\r\nimport config from './config';\r\n\r\nconst pool = mysql.createPool(config.mysqlPool);\r\n\r\nexport const conn = {\r\n  query: (sql, values, callback) => {\r\n    pool.getConnection((err, conn) => {\r\n      if (err) {\r\n        throw err;\r\n      }\r\n      conn.query(sql, values, (err, result) => {\r\n        callback(err, result);\r\n        conn.release();\r\n      });\r\n    });\r\n  }\r\n};\r\n"
      ]
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "14946e957b75808ed2fee0da597bd97fa0014a81",
    "contentHash": "df3e2447fcab95672e13eba00598c9fe6d40fa390ac25b8c22034319232f38b8"
  },
  "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\demoApi.ts": {
    "path": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\demoApi.ts",
    "statementMap": {
      "0": { "start": { "line": 2, "column": 22 }, "end": { "line": 4, "column": 1 } },
      "1": { "start": { "line": 3, "column": 4 }, "end": { "line": 3, "column": 62 } },
      "2": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 62 } },
      "3": { "start": { "line": 6, "column": 16 }, "end": { "line": 6, "column": 51 } },
      "4": { "start": { "line": 7, "column": 15 }, "end": { "line": 7, "column": 52 } },
      "5": { "start": { "line": 8, "column": 14 }, "end": { "line": 8, "column": 50 } },
      "6": { "start": { "line": 9, "column": 13 }, "end": { "line": 9, "column": 39 } },
      "7": { "start": { "line": 11, "column": 0 }, "end": { "line": 31, "column": 3 } },
      "8": { "start": { "line": 12, "column": 4 }, "end": { "line": 30, "column": 7 } },
      "9": { "start": { "line": 18, "column": 8 }, "end": { "line": 29, "column": 9 } },
      "10": { "start": { "line": 19, "column": 12 }, "end": { "line": 22, "column": 15 } },
      "11": { "start": { "line": 25, "column": 12 }, "end": { "line": 28, "column": 15 } },
      "12": { "start": { "line": 33, "column": 0 }, "end": { "line": 39, "column": 3 } },
      "13": { "start": { "line": 34, "column": 4 }, "end": { "line": 38, "column": 7 } },
      "14": { "start": { "line": 41, "column": 0 }, "end": { "line": 46, "column": 3 } },
      "15": { "start": { "line": 42, "column": 20 }, "end": { "line": 42, "column": 40 } },
      "16": { "start": { "line": 43, "column": 4 }, "end": { "line": 45, "column": 7 } },
      "17": { "start": { "line": 48, "column": 0 }, "end": { "line": 57, "column": 3 } },
      "18": { "start": { "line": 49, "column": 20 }, "end": { "line": 49, "column": 40 } },
      "19": { "start": { "line": 50, "column": 19 }, "end": { "line": 50, "column": 36 } },
      "20": { "start": { "line": 51, "column": 19 }, "end": { "line": 51, "column": 36 } },
      "21": { "start": { "line": 52, "column": 4 }, "end": { "line": 56, "column": 7 } },
      "22": { "start": { "line": 59, "column": 0 }, "end": { "line": 66, "column": 3 } },
      "23": { "start": { "line": 60, "column": 19 }, "end": { "line": 60, "column": 36 } },
      "24": { "start": { "line": 61, "column": 19 }, "end": { "line": 61, "column": 36 } },
      "25": { "start": { "line": 62, "column": 4 }, "end": { "line": 65, "column": 7 } },
      "26": { "start": { "line": 68, "column": 0 }, "end": { "line": 75, "column": 3 } },
      "27": { "start": { "line": 69, "column": 19 }, "end": { "line": 69, "column": 36 } },
      "28": { "start": { "line": 70, "column": 19 }, "end": { "line": 70, "column": 36 } },
      "29": { "start": { "line": 71, "column": 4 }, "end": { "line": 74, "column": 7 } },
      "30": { "start": { "line": 76, "column": 0 }, "end": { "line": 76, "column": 25 } }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": { "start": { "line": 2, "column": 56 }, "end": { "line": 2, "column": 57 } },
        "loc": { "start": { "line": 2, "column": 71 }, "end": { "line": 4, "column": 1 } },
        "line": 2
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": { "start": { "line": 11, "column": 26 }, "end": { "line": 11, "column": 27 } },
        "loc": { "start": { "line": 11, "column": 46 }, "end": { "line": 31, "column": 1 } },
        "line": 11
      },
      "2": {
        "name": "(anonymous_2)",
        "decl": { "start": { "line": 17, "column": 7 }, "end": { "line": 17, "column": 8 } },
        "loc": { "start": { "line": 17, "column": 28 }, "end": { "line": 30, "column": 5 } },
        "line": 17
      },
      "3": {
        "name": "(anonymous_3)",
        "decl": { "start": { "line": 33, "column": 21 }, "end": { "line": 33, "column": 22 } },
        "loc": { "start": { "line": 33, "column": 41 }, "end": { "line": 39, "column": 1 } },
        "line": 33
      },
      "4": {
        "name": "(anonymous_4)",
        "decl": { "start": { "line": 41, "column": 34 }, "end": { "line": 41, "column": 35 } },
        "loc": { "start": { "line": 41, "column": 54 }, "end": { "line": 46, "column": 1 } },
        "line": 41
      },
      "5": {
        "name": "(anonymous_5)",
        "decl": { "start": { "line": 48, "column": 36 }, "end": { "line": 48, "column": 37 } },
        "loc": { "start": { "line": 48, "column": 56 }, "end": { "line": 57, "column": 1 } },
        "line": 48
      },
      "6": {
        "name": "(anonymous_6)",
        "decl": { "start": { "line": 59, "column": 23 }, "end": { "line": 59, "column": 24 } },
        "loc": { "start": { "line": 59, "column": 43 }, "end": { "line": 66, "column": 1 } },
        "line": 59
      },
      "7": {
        "name": "(anonymous_7)",
        "decl": { "start": { "line": 68, "column": 26 }, "end": { "line": 68, "column": 27 } },
        "loc": { "start": { "line": 68, "column": 46 }, "end": { "line": 75, "column": 1 } },
        "line": 68
      }
    },
    "branchMap": {
      "0": {
        "loc": { "start": { "line": 2, "column": 22 }, "end": { "line": 4, "column": 1 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 2, "column": 23 }, "end": { "line": 2, "column": 27 } },
          { "start": { "line": 2, "column": 31 }, "end": { "line": 2, "column": 51 } },
          { "start": { "line": 2, "column": 56 }, "end": { "line": 4, "column": 1 } }
        ],
        "line": 2
      },
      "1": {
        "loc": { "start": { "line": 3, "column": 11 }, "end": { "line": 3, "column": 61 } },
        "type": "cond-expr",
        "locations": [
          { "start": { "line": 3, "column": 37 }, "end": { "line": 3, "column": 40 } },
          { "start": { "line": 3, "column": 43 }, "end": { "line": 3, "column": 61 } }
        ],
        "line": 3
      },
      "2": {
        "loc": { "start": { "line": 3, "column": 12 }, "end": { "line": 3, "column": 33 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 3, "column": 12 }, "end": { "line": 3, "column": 15 } },
          { "start": { "line": 3, "column": 19 }, "end": { "line": 3, "column": 33 } }
        ],
        "line": 3
      },
      "3": {
        "loc": { "start": { "line": 18, "column": 8 }, "end": { "line": 29, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 18, "column": 8 }, "end": { "line": 29, "column": 9 } },
          { "start": { "line": 18, "column": 8 }, "end": { "line": 29, "column": 9 } }
        ],
        "line": 18
      }
    },
    "s": {
      "0": 1,
      "1": 3,
      "2": 1,
      "3": 1,
      "4": 1,
      "5": 1,
      "6": 1,
      "7": 1,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 1,
      "13": 0,
      "14": 1,
      "15": 0,
      "16": 0,
      "17": 1,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 1,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 1,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 1
    },
    "f": { "0": 3, "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0 },
    "b": { "0": [1, 1, 1], "1": [2, 1], "2": [3, 3], "3": [0, 0] },
    "inputSourceMap": {
      "version": 3,
      "file": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\demoApi.ts",
      "sources": ["F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\demoApi.ts"],
      "names": [],
      "mappings": ";;;;;AAAA,oDAA4C;AAE5C,qDAA+B;AAC/B,mDAA6B;AAE7B,IAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,uBAAuB;AACvB,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,UAAC,GAAG,EAAE,GAA2B;IACzD,eAAK,CAAC,SAAS,CAAC;QACd,EAAE,EAAE,mBAAmB;QACvB,OAAO,EAAE,aAAa;QACtB,IAAI,EAAE,OAAO;QACb,IAAI,EAAE,cAAc;KACrB,EAAE,UAAC,GAAG,EAAE,IAAI;QACX,IAAI,GAAG,EAAE;YACP,GAAG,CAAC,IAAI,CAAC;gBACP,MAAM,EAAE,gBAAM,CAAC,MAAM,CAAC,KAAK;gBAC3B,GAAG,EAAE,UAAU,GAAG,GAAG,CAAC,QAAQ;aAC/B,CAAC,CAAA;SACH;aAAM;YACL,GAAG,CAAC,IAAI,CAAC;gBACP,MAAM,EAAE,gBAAM,CAAC,MAAM,CAAC,OAAO;gBAC7B,GAAG,EAAE,eAAe,GAAG,IAAI,CAAC,SAAS;aACtC,CAAC,CAAA;SACH;IACH,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA;AAEF,cAAc;AACd,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAC,GAAG,EAAE,GAAyB;IAClD,GAAG,CAAC,IAAI,CAAC;QACP,OAAO,EAAE,WAAW;QACpB,GAAG,EAAE,MAAM;QACX,MAAM,EAAE,IAAI;KACb,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,gBAAgB;AAChB,MAAM,CAAC,GAAG,CAAC,qBAAqB,EAAE,UAAC,GAAG,EAAE,GAAG;IACzC,IAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;IACvC,GAAG,CAAC,IAAI,CAAC;QACP,SAAS,WAAA;KACV,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,iBAAiB;AACjB,MAAM,CAAC,IAAI,CAAC,sBAAsB,EAAE,UAAC,GAAG,EAAE,GAAG;IAC3C,IAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;IACvC,IAAM,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IACnC,IAAM,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IACnC,GAAG,CAAC,IAAI,CAAC;QACP,SAAS,WAAA;QACT,QAAQ,UAAA;QACR,QAAQ,UAAA;KACT,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,gBAAgB;AAChB,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IAC9B,IAAM,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IACnC,IAAM,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IACnC,GAAG,CAAC,IAAI,CAAC;QACP,QAAQ,UAAA;QACR,QAAQ,UAAA;KACT,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,mBAAmB;AACnB,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,UAAC,GAAG,EAAE,GAAG;IACjC,IAAM,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IACnC,IAAM,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IACnC,GAAG,CAAC,IAAI,CAAC;QACP,QAAQ,UAAA;QACR,QAAQ,UAAA;KACT,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,kBAAe,MAAM,CAAC",
      "sourcesContent": [
        "import express, { Response } from 'express';\r\nimport { DemoResult, ResultCommon } from 'achieve-it-contract';\r\nimport config from '../config';\r\nimport email from '../email';\r\n\r\nconst router = express.Router();\r\n\r\n// post /demo/sendEmail\r\nrouter.post('/sendEmail', (req, res: Response<ResultCommon>) => {\r\n  email.sendEmail({\r\n    to: '1063594983@qq.com',\r\n    subject: 'Hello World',\r\n    text: 'Hello',\r\n    html: '<b>Hello</b>'\r\n  }, (err, info) => {\r\n    if (err) {\r\n      res.json({\r\n        status: config.status.ERROR,\r\n        msg: '[email] ' + err.response\r\n      })\r\n    } else {\r\n      res.json({\r\n        status: config.status.SUCCESS,\r\n        msg: 'send success ' + info.messageId\r\n      })\r\n    }\r\n  })\r\n})\r\n\r\n// /demo/hello\r\nrouter.get('/hello', (req, res: Response<DemoResult>) => {\r\n  res.json({\r\n    project: 'AchieveIt',\r\n    msg: 'Test',\r\n    status: 'ok'\r\n  });\r\n});\r\n\r\n// /demo/getDemo\r\nrouter.get('/getDemo/:employ_id', (req, res) => {\r\n  const employ_id = req.params.employ_id;\r\n  res.json({\r\n    employ_id\r\n  });\r\n});\r\n\r\n// /demo/postDemo\r\nrouter.post('/postDemo/:employ_id', (req, res) => {\r\n  const employ_id = req.params.employ_id;\r\n  const username = req.body.username;\r\n  const password = req.body.password;\r\n  res.json({\r\n    employ_id,\r\n    username,\r\n    password\r\n  });\r\n});\r\n\r\n// /demo/putDemo\r\nrouter.put('/putDemo', (req, res) => {\r\n  const username = req.body.username;\r\n  const password = req.body.password;\r\n  res.json({\r\n    username,\r\n    password\r\n  });\r\n});\r\n\r\n// /demo/deleteDemo\r\nrouter.put('/deleteDemo', (req, res) => {\r\n  const username = req.body.username;\r\n  const password = req.body.password;\r\n  res.json({\r\n    username,\r\n    password\r\n  });\r\n});\r\n\r\nexport default router;\r\n"
      ]
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "1c3d38688a101f31ff27527570080da494ecb4b4",
    "contentHash": "63f366246e1dd3bbbf631c8b31999da5177598f187dfc93c6ee75ebc0ac9b8e0"
  },
  "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\email.ts": {
    "path": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\email.ts",
    "statementMap": {
      "0": { "start": { "line": 2, "column": 15 }, "end": { "line": 12, "column": 1 } },
      "1": { "start": { "line": 3, "column": 4 }, "end": { "line": 10, "column": 6 } },
      "2": { "start": { "line": 4, "column": 8 }, "end": { "line": 8, "column": 9 } },
      "3": { "start": { "line": 4, "column": 24 }, "end": { "line": 4, "column": 25 } },
      "4": { "start": { "line": 4, "column": 31 }, "end": { "line": 4, "column": 47 } },
      "5": { "start": { "line": 5, "column": 12 }, "end": { "line": 5, "column": 29 } },
      "6": { "start": { "line": 6, "column": 12 }, "end": { "line": 7, "column": 28 } },
      "7": { "start": { "line": 6, "column": 29 }, "end": { "line": 7, "column": 28 } },
      "8": { "start": { "line": 7, "column": 16 }, "end": { "line": 7, "column": 28 } },
      "9": { "start": { "line": 9, "column": 8 }, "end": { "line": 9, "column": 17 } },
      "10": { "start": { "line": 11, "column": 4 }, "end": { "line": 11, "column": 43 } },
      "11": { "start": { "line": 13, "column": 16 }, "end": { "line": 21, "column": 1 } },
      "12": { "start": { "line": 14, "column": 28 }, "end": { "line": 14, "column": 110 } },
      "13": { "start": { "line": 14, "column": 91 }, "end": { "line": 14, "column": 106 } },
      "14": { "start": { "line": 15, "column": 4 }, "end": { "line": 20, "column": 7 } },
      "15": { "start": { "line": 16, "column": 36 }, "end": { "line": 16, "column": 97 } },
      "16": { "start": { "line": 16, "column": 42 }, "end": { "line": 16, "column": 70 } },
      "17": { "start": { "line": 16, "column": 85 }, "end": { "line": 16, "column": 95 } },
      "18": { "start": { "line": 17, "column": 35 }, "end": { "line": 17, "column": 100 } },
      "19": { "start": { "line": 17, "column": 41 }, "end": { "line": 17, "column": 73 } },
      "20": { "start": { "line": 17, "column": 88 }, "end": { "line": 17, "column": 98 } },
      "21": { "start": { "line": 18, "column": 32 }, "end": { "line": 18, "column": 116 } },
      "22": { "start": { "line": 19, "column": 8 }, "end": { "line": 19, "column": 78 } },
      "23": { "start": { "line": 22, "column": 18 }, "end": { "line": 48, "column": 1 } },
      "24": { "start": { "line": 23, "column": 12 }, "end": { "line": 23, "column": 104 } },
      "25": { "start": { "line": 23, "column": 43 }, "end": { "line": 23, "column": 68 } },
      "26": { "start": { "line": 23, "column": 57 }, "end": { "line": 23, "column": 68 } },
      "27": { "start": { "line": 23, "column": 69 }, "end": { "line": 23, "column": 81 } },
      "28": { "start": { "line": 24, "column": 4 }, "end": { "line": 24, "column": 157 } },
      "29": { "start": { "line": 24, "column": 138 }, "end": { "line": 24, "column": 150 } },
      "30": { "start": { "line": 25, "column": 23 }, "end": { "line": 25, "column": 68 } },
      "31": { "start": { "line": 25, "column": 45 }, "end": { "line": 25, "column": 65 } },
      "32": { "start": { "line": 27, "column": 8 }, "end": { "line": 27, "column": 70 } },
      "33": { "start": { "line": 27, "column": 15 }, "end": { "line": 27, "column": 70 } },
      "34": { "start": { "line": 28, "column": 8 }, "end": { "line": 45, "column": 66 } },
      "35": { "start": { "line": 28, "column": 18 }, "end": { "line": 45, "column": 66 } },
      "36": { "start": { "line": 29, "column": 12 }, "end": { "line": 29, "column": 169 } },
      "37": { "start": { "line": 29, "column": 160 }, "end": { "line": 29, "column": 169 } },
      "38": { "start": { "line": 30, "column": 12 }, "end": { "line": 30, "column": 52 } },
      "39": { "start": { "line": 30, "column": 26 }, "end": { "line": 30, "column": 52 } },
      "40": { "start": { "line": 31, "column": 12 }, "end": { "line": 43, "column": 13 } },
      "41": { "start": { "line": 32, "column": 32 }, "end": { "line": 32, "column": 39 } },
      "42": { "start": { "line": 32, "column": 40 }, "end": { "line": 32, "column": 46 } },
      "43": { "start": { "line": 33, "column": 24 }, "end": { "line": 33, "column": 34 } },
      "44": { "start": { "line": 33, "column": 35 }, "end": { "line": 33, "column": 72 } },
      "45": { "start": { "line": 34, "column": 24 }, "end": { "line": 34, "column": 34 } },
      "46": { "start": { "line": 34, "column": 35 }, "end": { "line": 34, "column": 45 } },
      "47": { "start": { "line": 34, "column": 46 }, "end": { "line": 34, "column": 55 } },
      "48": { "start": { "line": 34, "column": 56 }, "end": { "line": 34, "column": 65 } },
      "49": { "start": { "line": 35, "column": 24 }, "end": { "line": 35, "column": 41 } },
      "50": { "start": { "line": 35, "column": 42 }, "end": { "line": 35, "column": 55 } },
      "51": { "start": { "line": 35, "column": 56 }, "end": { "line": 35, "column": 65 } },
      "52": { "start": { "line": 37, "column": 20 }, "end": { "line": 37, "column": 128 } },
      "53": { "start": { "line": 37, "column": 110 }, "end": { "line": 37, "column": 116 } },
      "54": { "start": { "line": 37, "column": 117 }, "end": { "line": 37, "column": 126 } },
      "55": { "start": { "line": 38, "column": 20 }, "end": { "line": 38, "column": 106 } },
      "56": { "start": { "line": 38, "column": 81 }, "end": { "line": 38, "column": 97 } },
      "57": { "start": { "line": 38, "column": 98 }, "end": { "line": 38, "column": 104 } },
      "58": { "start": { "line": 39, "column": 20 }, "end": { "line": 39, "column": 89 } },
      "59": { "start": { "line": 39, "column": 57 }, "end": { "line": 39, "column": 72 } },
      "60": { "start": { "line": 39, "column": 73 }, "end": { "line": 39, "column": 80 } },
      "61": { "start": { "line": 39, "column": 81 }, "end": { "line": 39, "column": 87 } },
      "62": { "start": { "line": 40, "column": 20 }, "end": { "line": 40, "column": 87 } },
      "63": { "start": { "line": 40, "column": 47 }, "end": { "line": 40, "column": 62 } },
      "64": { "start": { "line": 40, "column": 63 }, "end": { "line": 40, "column": 78 } },
      "65": { "start": { "line": 40, "column": 79 }, "end": { "line": 40, "column": 85 } },
      "66": { "start": { "line": 41, "column": 20 }, "end": { "line": 41, "column": 42 } },
      "67": { "start": { "line": 41, "column": 30 }, "end": { "line": 41, "column": 42 } },
      "68": { "start": { "line": 42, "column": 20 }, "end": { "line": 42, "column": 33 } },
      "69": { "start": { "line": 42, "column": 34 }, "end": { "line": 42, "column": 43 } },
      "70": { "start": { "line": 44, "column": 12 }, "end": { "line": 44, "column": 39 } },
      "71": { "start": { "line": 45, "column": 22 }, "end": { "line": 45, "column": 34 } },
      "72": { "start": { "line": 45, "column": 35 }, "end": { "line": 45, "column": 41 } },
      "73": { "start": { "line": 45, "column": 54 }, "end": { "line": 45, "column": 64 } },
      "74": { "start": { "line": 46, "column": 8 }, "end": { "line": 46, "column": 35 } },
      "75": { "start": { "line": 46, "column": 23 }, "end": { "line": 46, "column": 35 } },
      "76": { "start": { "line": 46, "column": 36 }, "end": { "line": 46, "column": 89 } },
      "77": { "start": { "line": 49, "column": 22 }, "end": { "line": 51, "column": 1 } },
      "78": { "start": { "line": 50, "column": 4 }, "end": { "line": 50, "column": 62 } },
      "79": { "start": { "line": 52, "column": 0 }, "end": { "line": 52, "column": 62 } },
      "80": { "start": { "line": 53, "column": 19 }, "end": { "line": 53, "column": 57 } },
      "81": { "start": { "line": 54, "column": 18 }, "end": { "line": 63, "column": 2 } },
      "82": { "start": { "line": 64, "column": 12 }, "end": { "line": 73, "column": 1 } },
      "83": { "start": { "line": 65, "column": 45 }, "end": { "line": 72, "column": 7 } },
      "84": { "start": { "line": 66, "column": 8 }, "end": { "line": 71, "column": 11 } },
      "85": { "start": { "line": 67, "column": 12 }, "end": { "line": 69, "column": 15 } },
      "86": { "start": { "line": 68, "column": 16 }, "end": { "line": 68, "column": 36 } },
      "87": { "start": { "line": 70, "column": 12 }, "end": { "line": 70, "column": 34 } },
      "88": { "start": { "line": 74, "column": 16 }, "end": { "line": 74, "column": 18 } },
      "89": { "start": { "line": 75, "column": 0 }, "end": { "line": 75, "column": 24 } }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": { "start": { "line": 2, "column": 42 }, "end": { "line": 2, "column": 43 } },
        "loc": { "start": { "line": 2, "column": 54 }, "end": { "line": 12, "column": 1 } },
        "line": 2
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": { "start": { "line": 3, "column": 32 }, "end": { "line": 3, "column": 33 } },
        "loc": { "start": { "line": 3, "column": 44 }, "end": { "line": 10, "column": 5 } },
        "line": 3
      },
      "2": {
        "name": "(anonymous_2)",
        "decl": { "start": { "line": 13, "column": 44 }, "end": { "line": 13, "column": 45 } },
        "loc": { "start": { "line": 13, "column": 89 }, "end": { "line": 21, "column": 1 } },
        "line": 13
      },
      "3": {
        "name": "adopt",
        "decl": { "start": { "line": 14, "column": 13 }, "end": { "line": 14, "column": 18 } },
        "loc": { "start": { "line": 14, "column": 26 }, "end": { "line": 14, "column": 112 } },
        "line": 14
      },
      "4": {
        "name": "(anonymous_4)",
        "decl": { "start": { "line": 14, "column": 70 }, "end": { "line": 14, "column": 71 } },
        "loc": { "start": { "line": 14, "column": 89 }, "end": { "line": 14, "column": 108 } },
        "line": 14
      },
      "5": {
        "name": "(anonymous_5)",
        "decl": { "start": { "line": 15, "column": 36 }, "end": { "line": 15, "column": 37 } },
        "loc": { "start": { "line": 15, "column": 63 }, "end": { "line": 20, "column": 5 } },
        "line": 15
      },
      "6": {
        "name": "fulfilled",
        "decl": { "start": { "line": 16, "column": 17 }, "end": { "line": 16, "column": 26 } },
        "loc": { "start": { "line": 16, "column": 34 }, "end": { "line": 16, "column": 99 } },
        "line": 16
      },
      "7": {
        "name": "rejected",
        "decl": { "start": { "line": 17, "column": 17 }, "end": { "line": 17, "column": 25 } },
        "loc": { "start": { "line": 17, "column": 33 }, "end": { "line": 17, "column": 102 } },
        "line": 17
      },
      "8": {
        "name": "step",
        "decl": { "start": { "line": 18, "column": 17 }, "end": { "line": 18, "column": 21 } },
        "loc": { "start": { "line": 18, "column": 30 }, "end": { "line": 18, "column": 118 } },
        "line": 18
      },
      "9": {
        "name": "(anonymous_9)",
        "decl": { "start": { "line": 22, "column": 48 }, "end": { "line": 22, "column": 49 } },
        "loc": { "start": { "line": 22, "column": 73 }, "end": { "line": 48, "column": 1 } },
        "line": 22
      },
      "10": {
        "name": "(anonymous_10)",
        "decl": { "start": { "line": 23, "column": 30 }, "end": { "line": 23, "column": 31 } },
        "loc": { "start": { "line": 23, "column": 41 }, "end": { "line": 23, "column": 83 } },
        "line": 23
      },
      "11": {
        "name": "(anonymous_11)",
        "decl": { "start": { "line": 24, "column": 125 }, "end": { "line": 24, "column": 126 } },
        "loc": { "start": { "line": 24, "column": 136 }, "end": { "line": 24, "column": 152 } },
        "line": 24
      },
      "12": {
        "name": "verb",
        "decl": { "start": { "line": 25, "column": 13 }, "end": { "line": 25, "column": 17 } },
        "loc": { "start": { "line": 25, "column": 21 }, "end": { "line": 25, "column": 70 } },
        "line": 25
      },
      "13": {
        "name": "(anonymous_13)",
        "decl": { "start": { "line": 25, "column": 30 }, "end": { "line": 25, "column": 31 } },
        "loc": { "start": { "line": 25, "column": 43 }, "end": { "line": 25, "column": 67 } },
        "line": 25
      },
      "14": {
        "name": "step",
        "decl": { "start": { "line": 26, "column": 13 }, "end": { "line": 26, "column": 17 } },
        "loc": { "start": { "line": 26, "column": 22 }, "end": { "line": 47, "column": 5 } },
        "line": 26
      },
      "15": {
        "name": "(anonymous_15)",
        "decl": { "start": { "line": 49, "column": 56 }, "end": { "line": 49, "column": 57 } },
        "loc": { "start": { "line": 49, "column": 71 }, "end": { "line": 51, "column": 1 } },
        "line": 49
      },
      "16": {
        "name": "(anonymous_16)",
        "decl": { "start": { "line": 65, "column": 15 }, "end": { "line": 65, "column": 16 } },
        "loc": { "start": { "line": 65, "column": 43 }, "end": { "line": 72, "column": 9 } },
        "line": 65
      },
      "17": {
        "name": "(anonymous_17)",
        "decl": { "start": { "line": 65, "column": 86 }, "end": { "line": 65, "column": 87 } },
        "loc": { "start": { "line": 65, "column": 98 }, "end": { "line": 72, "column": 5 } },
        "line": 65
      },
      "18": {
        "name": "(anonymous_18)",
        "decl": { "start": { "line": 66, "column": 33 }, "end": { "line": 66, "column": 34 } },
        "loc": { "start": { "line": 66, "column": 47 }, "end": { "line": 71, "column": 9 } },
        "line": 66
      },
      "19": {
        "name": "(anonymous_19)",
        "decl": { "start": { "line": 67, "column": 97 }, "end": { "line": 67, "column": 98 } },
        "loc": { "start": { "line": 67, "column": 118 }, "end": { "line": 69, "column": 13 } },
        "line": 67
      }
    },
    "branchMap": {
      "0": {
        "loc": { "start": { "line": 2, "column": 15 }, "end": { "line": 12, "column": 1 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 2, "column": 16 }, "end": { "line": 2, "column": 20 } },
          { "start": { "line": 2, "column": 24 }, "end": { "line": 2, "column": 37 } },
          { "start": { "line": 2, "column": 42 }, "end": { "line": 12, "column": 1 } }
        ],
        "line": 2
      },
      "1": {
        "loc": { "start": { "line": 3, "column": 15 }, "end": { "line": 10, "column": 5 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 3, "column": 15 }, "end": { "line": 3, "column": 28 } },
          { "start": { "line": 3, "column": 32 }, "end": { "line": 10, "column": 5 } }
        ],
        "line": 3
      },
      "2": {
        "loc": { "start": { "line": 6, "column": 29 }, "end": { "line": 7, "column": 28 } },
        "type": "if",
        "locations": [
          { "start": { "line": 6, "column": 29 }, "end": { "line": 7, "column": 28 } },
          { "start": { "line": 6, "column": 29 }, "end": { "line": 7, "column": 28 } }
        ],
        "line": 6
      },
      "3": {
        "loc": { "start": { "line": 13, "column": 16 }, "end": { "line": 21, "column": 1 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 13, "column": 17 }, "end": { "line": 13, "column": 21 } },
          { "start": { "line": 13, "column": 25 }, "end": { "line": 13, "column": 39 } },
          { "start": { "line": 13, "column": 44 }, "end": { "line": 21, "column": 1 } }
        ],
        "line": 13
      },
      "4": {
        "loc": { "start": { "line": 14, "column": 35 }, "end": { "line": 14, "column": 109 } },
        "type": "cond-expr",
        "locations": [
          { "start": { "line": 14, "column": 56 }, "end": { "line": 14, "column": 61 } },
          { "start": { "line": 14, "column": 64 }, "end": { "line": 14, "column": 109 } }
        ],
        "line": 14
      },
      "5": {
        "loc": { "start": { "line": 15, "column": 16 }, "end": { "line": 15, "column": 34 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 15, "column": 16 }, "end": { "line": 15, "column": 17 } },
          { "start": { "line": 15, "column": 22 }, "end": { "line": 15, "column": 33 } }
        ],
        "line": 15
      },
      "6": {
        "loc": { "start": { "line": 18, "column": 32 }, "end": { "line": 18, "column": 115 } },
        "type": "cond-expr",
        "locations": [
          { "start": { "line": 18, "column": 46 }, "end": { "line": 18, "column": 67 } },
          { "start": { "line": 18, "column": 70 }, "end": { "line": 18, "column": 115 } }
        ],
        "line": 18
      },
      "7": {
        "loc": { "start": { "line": 19, "column": 51 }, "end": { "line": 19, "column": 67 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 19, "column": 51 }, "end": { "line": 19, "column": 61 } },
          { "start": { "line": 19, "column": 65 }, "end": { "line": 19, "column": 67 } }
        ],
        "line": 19
      },
      "8": {
        "loc": { "start": { "line": 22, "column": 18 }, "end": { "line": 48, "column": 1 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 22, "column": 19 }, "end": { "line": 22, "column": 23 } },
          { "start": { "line": 22, "column": 27 }, "end": { "line": 22, "column": 43 } },
          { "start": { "line": 22, "column": 48 }, "end": { "line": 48, "column": 1 } }
        ],
        "line": 22
      },
      "9": {
        "loc": { "start": { "line": 23, "column": 43 }, "end": { "line": 23, "column": 68 } },
        "type": "if",
        "locations": [
          { "start": { "line": 23, "column": 43 }, "end": { "line": 23, "column": 68 } },
          { "start": { "line": 23, "column": 43 }, "end": { "line": 23, "column": 68 } }
        ],
        "line": 23
      },
      "10": {
        "loc": { "start": { "line": 24, "column": 71 }, "end": { "line": 24, "column": 153 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 24, "column": 71 }, "end": { "line": 24, "column": 99 } },
          { "start": { "line": 24, "column": 104 }, "end": { "line": 24, "column": 152 } }
        ],
        "line": 24
      },
      "11": {
        "loc": { "start": { "line": 27, "column": 8 }, "end": { "line": 27, "column": 70 } },
        "type": "if",
        "locations": [
          { "start": { "line": 27, "column": 8 }, "end": { "line": 27, "column": 70 } },
          { "start": { "line": 27, "column": 8 }, "end": { "line": 27, "column": 70 } }
        ],
        "line": 27
      },
      "12": {
        "loc": { "start": { "line": 29, "column": 12 }, "end": { "line": 29, "column": 169 } },
        "type": "if",
        "locations": [
          { "start": { "line": 29, "column": 12 }, "end": { "line": 29, "column": 169 } },
          { "start": { "line": 29, "column": 12 }, "end": { "line": 29, "column": 169 } }
        ],
        "line": 29
      },
      "13": {
        "loc": { "start": { "line": 29, "column": 23 }, "end": { "line": 29, "column": 158 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 29, "column": 23 }, "end": { "line": 29, "column": 24 } },
          { "start": { "line": 29, "column": 29 }, "end": { "line": 29, "column": 125 } },
          { "start": { "line": 29, "column": 130 }, "end": { "line": 29, "column": 158 } }
        ],
        "line": 29
      },
      "14": {
        "loc": { "start": { "line": 29, "column": 33 }, "end": { "line": 29, "column": 125 } },
        "type": "cond-expr",
        "locations": [
          { "start": { "line": 29, "column": 45 }, "end": { "line": 29, "column": 56 } },
          { "start": { "line": 29, "column": 59 }, "end": { "line": 29, "column": 125 } }
        ],
        "line": 29
      },
      "15": {
        "loc": { "start": { "line": 29, "column": 59 }, "end": { "line": 29, "column": 125 } },
        "type": "cond-expr",
        "locations": [
          { "start": { "line": 29, "column": 67 }, "end": { "line": 29, "column": 116 } },
          { "start": { "line": 29, "column": 119 }, "end": { "line": 29, "column": 125 } }
        ],
        "line": 29
      },
      "16": {
        "loc": { "start": { "line": 29, "column": 67 }, "end": { "line": 29, "column": 116 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 29, "column": 67 }, "end": { "line": 29, "column": 77 } },
          { "start": { "line": 29, "column": 82 }, "end": { "line": 29, "column": 115 } }
        ],
        "line": 29
      },
      "17": {
        "loc": { "start": { "line": 29, "column": 82 }, "end": { "line": 29, "column": 112 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 29, "column": 83 }, "end": { "line": 29, "column": 98 } },
          { "start": { "line": 29, "column": 103 }, "end": { "line": 29, "column": 112 } }
        ],
        "line": 29
      },
      "18": {
        "loc": { "start": { "line": 30, "column": 12 }, "end": { "line": 30, "column": 52 } },
        "type": "if",
        "locations": [
          { "start": { "line": 30, "column": 12 }, "end": { "line": 30, "column": 52 } },
          { "start": { "line": 30, "column": 12 }, "end": { "line": 30, "column": 52 } }
        ],
        "line": 30
      },
      "19": {
        "loc": { "start": { "line": 31, "column": 12 }, "end": { "line": 43, "column": 13 } },
        "type": "switch",
        "locations": [
          { "start": { "line": 32, "column": 16 }, "end": { "line": 32, "column": 23 } },
          { "start": { "line": 32, "column": 24 }, "end": { "line": 32, "column": 46 } },
          { "start": { "line": 33, "column": 16 }, "end": { "line": 33, "column": 72 } },
          { "start": { "line": 34, "column": 16 }, "end": { "line": 34, "column": 65 } },
          { "start": { "line": 35, "column": 16 }, "end": { "line": 35, "column": 65 } },
          { "start": { "line": 36, "column": 16 }, "end": { "line": 42, "column": 43 } }
        ],
        "line": 31
      },
      "20": {
        "loc": { "start": { "line": 37, "column": 20 }, "end": { "line": 37, "column": 128 } },
        "type": "if",
        "locations": [
          { "start": { "line": 37, "column": 20 }, "end": { "line": 37, "column": 128 } },
          { "start": { "line": 37, "column": 20 }, "end": { "line": 37, "column": 128 } }
        ],
        "line": 37
      },
      "21": {
        "loc": { "start": { "line": 37, "column": 24 }, "end": { "line": 37, "column": 106 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 37, "column": 24 }, "end": { "line": 37, "column": 74 } },
          { "start": { "line": 37, "column": 79 }, "end": { "line": 37, "column": 90 } },
          { "start": { "line": 37, "column": 94 }, "end": { "line": 37, "column": 105 } }
        ],
        "line": 37
      },
      "22": {
        "loc": { "start": { "line": 37, "column": 42 }, "end": { "line": 37, "column": 73 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 37, "column": 42 }, "end": { "line": 37, "column": 54 } },
          { "start": { "line": 37, "column": 58 }, "end": { "line": 37, "column": 73 } }
        ],
        "line": 37
      },
      "23": {
        "loc": { "start": { "line": 38, "column": 20 }, "end": { "line": 38, "column": 106 } },
        "type": "if",
        "locations": [
          { "start": { "line": 38, "column": 20 }, "end": { "line": 38, "column": 106 } },
          { "start": { "line": 38, "column": 20 }, "end": { "line": 38, "column": 106 } }
        ],
        "line": 38
      },
      "24": {
        "loc": { "start": { "line": 38, "column": 24 }, "end": { "line": 38, "column": 77 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 38, "column": 24 }, "end": { "line": 38, "column": 35 } },
          { "start": { "line": 38, "column": 40 }, "end": { "line": 38, "column": 42 } },
          { "start": { "line": 38, "column": 47 }, "end": { "line": 38, "column": 59 } },
          { "start": { "line": 38, "column": 63 }, "end": { "line": 38, "column": 75 } }
        ],
        "line": 38
      },
      "25": {
        "loc": { "start": { "line": 39, "column": 20 }, "end": { "line": 39, "column": 89 } },
        "type": "if",
        "locations": [
          { "start": { "line": 39, "column": 20 }, "end": { "line": 39, "column": 89 } },
          { "start": { "line": 39, "column": 20 }, "end": { "line": 39, "column": 89 } }
        ],
        "line": 39
      },
      "26": {
        "loc": { "start": { "line": 39, "column": 24 }, "end": { "line": 39, "column": 53 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 39, "column": 24 }, "end": { "line": 39, "column": 35 } },
          { "start": { "line": 39, "column": 39 }, "end": { "line": 39, "column": 53 } }
        ],
        "line": 39
      },
      "27": {
        "loc": { "start": { "line": 40, "column": 20 }, "end": { "line": 40, "column": 87 } },
        "type": "if",
        "locations": [
          { "start": { "line": 40, "column": 20 }, "end": { "line": 40, "column": 87 } },
          { "start": { "line": 40, "column": 20 }, "end": { "line": 40, "column": 87 } }
        ],
        "line": 40
      },
      "28": {
        "loc": { "start": { "line": 40, "column": 24 }, "end": { "line": 40, "column": 43 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 40, "column": 24 }, "end": { "line": 40, "column": 25 } },
          { "start": { "line": 40, "column": 29 }, "end": { "line": 40, "column": 43 } }
        ],
        "line": 40
      },
      "29": {
        "loc": { "start": { "line": 41, "column": 20 }, "end": { "line": 41, "column": 42 } },
        "type": "if",
        "locations": [
          { "start": { "line": 41, "column": 20 }, "end": { "line": 41, "column": 42 } },
          { "start": { "line": 41, "column": 20 }, "end": { "line": 41, "column": 42 } }
        ],
        "line": 41
      },
      "30": {
        "loc": { "start": { "line": 46, "column": 8 }, "end": { "line": 46, "column": 35 } },
        "type": "if",
        "locations": [
          { "start": { "line": 46, "column": 8 }, "end": { "line": 46, "column": 35 } },
          { "start": { "line": 46, "column": 8 }, "end": { "line": 46, "column": 35 } }
        ],
        "line": 46
      },
      "31": {
        "loc": { "start": { "line": 46, "column": 52 }, "end": { "line": 46, "column": 74 } },
        "type": "cond-expr",
        "locations": [
          { "start": { "line": 46, "column": 60 }, "end": { "line": 46, "column": 65 } },
          { "start": { "line": 46, "column": 68 }, "end": { "line": 46, "column": 74 } }
        ],
        "line": 46
      },
      "32": {
        "loc": { "start": { "line": 49, "column": 22 }, "end": { "line": 51, "column": 1 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 49, "column": 23 }, "end": { "line": 49, "column": 27 } },
          { "start": { "line": 49, "column": 31 }, "end": { "line": 49, "column": 51 } },
          { "start": { "line": 49, "column": 56 }, "end": { "line": 51, "column": 1 } }
        ],
        "line": 49
      },
      "33": {
        "loc": { "start": { "line": 50, "column": 11 }, "end": { "line": 50, "column": 61 } },
        "type": "cond-expr",
        "locations": [
          { "start": { "line": 50, "column": 37 }, "end": { "line": 50, "column": 40 } },
          { "start": { "line": 50, "column": 43 }, "end": { "line": 50, "column": 61 } }
        ],
        "line": 50
      },
      "34": {
        "loc": { "start": { "line": 50, "column": 12 }, "end": { "line": 50, "column": 33 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 50, "column": 12 }, "end": { "line": 50, "column": 15 } },
          { "start": { "line": 50, "column": 19 }, "end": { "line": 50, "column": 33 } }
        ],
        "line": 50
      }
    },
    "s": {
      "0": 1,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 1,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 1,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 1,
      "78": 1,
      "79": 1,
      "80": 1,
      "81": 1,
      "82": 1,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 1,
      "89": 1
    },
    "f": {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 1,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    "b": {
      "0": [1, 1, 1],
      "1": [0, 0],
      "2": [0, 0],
      "3": [1, 1, 1],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [1, 1, 1],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0, 0, 0, 0],
      "20": [0, 0],
      "21": [0, 0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0, 0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [1, 1, 1],
      "33": [0, 1],
      "34": [1, 1]
    },
    "inputSourceMap": {
      "version": 3,
      "file": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\email.ts",
      "sources": ["F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\email.ts"],
      "names": [],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,0DAAoC;AASpC,IAAM,WAAW,GAAG,oBAAU,CAAC,eAAe,CAAC;IAC7C,IAAI,EAAE,IAAI;IACR,OAAO,EAAE,KAAK;IACd,IAAI,EAAE,GAAG;IACT,MAAM,EAAE,IAAI;IACZ,IAAI,EAAE;QACF,IAAI,EAAE,oBAAoB;QAC1B,IAAI,EAAE,kBAAkB;KAC3B;CACJ,CAAC,CAAC;AAEH,IAAM,KAAK,GAAG;IACZ,SAAS,EAAE,UAAO,MAAmB,EAAE,QAAkB;;YACvD,WAAW,CAAC,QAAQ,uBAAK,MAAM,KAAE,IAAI,EAAE,oBAAoB,KAAG,UAAC,GAAG,EAAE,IAAI;gBACtE,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;YACtB,CAAC,CAAC,CAAA;;;SACH;CACF,CAAA;AAED,IAAM,SAAS,GAAG,EAEjB,CAAA;AAED,kBAAe,KAAK,CAAC;AACrB,sBAAsB;AACtB,oDAAoD;AACpD,oDAAoD;AACpD,wCAAwC;AACxC,wBAAwB;AACxB,kDAAkD;AAClD,+CAA+C;AAC/C,OAAO;AAEP,+CAA+C;AAC/C,yDAAyD;AACzD,mBAAmB;AACnB,mCAAmC;AACnC,QAAQ;AACR,uDAAuD;AACvD,qEAAqE;AACrE,QAAQ",
      "sourcesContent": [
        "import nodeMailer from 'nodemailer';\r\n\r\ninterface EmailOption {\r\n  to: string,\r\n  subject: string,\r\n  text?: string,\r\n  html?: string\r\n}\r\n\r\nconst transporter = nodeMailer.createTransport({\r\n  pool: true,\r\n    service: '126',\r\n    port: 465,\r\n    secure: true,\r\n    auth: {\r\n        user: 'xuanlinzou@126.com',\r\n        pass: 'VDNLVYBEZWLJXVEH'\r\n    }\r\n});\r\n\r\nconst email = {\r\n  sendEmail: async (option: EmailOption, callback: Function) => {\r\n    transporter.sendMail({...option, from: \"xuanlinzou@126.com\"}, (err, info) => {\r\n      callback(err, info);\r\n    })\r\n  }\r\n}\r\n\r\nconst emailUtil = {\r\n  \r\n}\r\n\r\nexport default email;\r\n// let mailOptions = {\r\n//     from: 'xuanlinzou@126.com', // sender address\r\n//     to: '1063594983@qq.com', // list of receivers\r\n//     subject: 'Hello', // Subject line\r\n//     // 发送text或者html格式\r\n//     // text: 'Hello world?', // plain text body\r\n//     html: '<b>Hello world?</b>' // html body\r\n//   };\r\n  \r\n//   // send mail with defined transport object\r\n//   transporter.sendMail(mailOptions, (error, info) => {\r\n//     if (error) {\r\n//       return console.log(error);\r\n//     }\r\n//     console.log('Message sent: %s', info.messageId);\r\n//     // Message sent: <04ec7731-cc68-1ef6-303c-61b0f796b78f@qq.com>\r\n//   });"
      ]
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "d15e58f35a1fc9b57bba004ed40a1b4289d3f116",
    "contentHash": "850d7be5717ac5d1d126b2180dda6633134e47c874bce19086a9fed96f0835f0"
  },
  "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\memberApi.ts": {
    "path": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\memberApi.ts",
    "statementMap": {
      "0": { "start": { "line": 2, "column": 22 }, "end": { "line": 4, "column": 1 } },
      "1": { "start": { "line": 3, "column": 4 }, "end": { "line": 3, "column": 62 } },
      "2": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 62 } },
      "3": { "start": { "line": 6, "column": 15 }, "end": { "line": 6, "column": 52 } },
      "4": { "start": { "line": 7, "column": 16 }, "end": { "line": 7, "column": 51 } },
      "5": { "start": { "line": 8, "column": 15 }, "end": { "line": 8, "column": 51 } },
      "6": { "start": { "line": 9, "column": 13 }, "end": { "line": 9, "column": 31 } },
      "7": { "start": { "line": 10, "column": 18 }, "end": { "line": 10, "column": 41 } },
      "8": { "start": { "line": 11, "column": 14 }, "end": { "line": 11, "column": 50 } },
      "9": { "start": { "line": 12, "column": 13 }, "end": { "line": 12, "column": 39 } },
      "10": { "start": { "line": 15, "column": 0 }, "end": { "line": 34, "column": 3 } },
      "11": { "start": { "line": 17, "column": 20 }, "end": { "line": 17, "column": 40 } },
      "12": { "start": { "line": 18, "column": 4 }, "end": { "line": 33, "column": 7 } },
      "13": { "start": { "line": 19, "column": 8 }, "end": { "line": 32, "column": 9 } },
      "14": { "start": { "line": 20, "column": 12 }, "end": { "line": 20, "column": 47 } },
      "15": { "start": { "line": 22, "column": 13 }, "end": { "line": 32, "column": 9 } },
      "16": { "start": { "line": 23, "column": 12 }, "end": { "line": 23, "column": 80 } },
      "17": { "start": { "line": 24, "column": 12 }, "end": { "line": 28, "column": 15 } },
      "18": { "start": { "line": 31, "column": 12 }, "end": { "line": 31, "column": 45 } },
      "19": { "start": { "line": 37, "column": 0 }, "end": { "line": 62, "column": 3 } },
      "20": { "start": { "line": 38, "column": 25 }, "end": { "line": 38, "column": 33 } },
      "21": { "start": { "line": 39, "column": 20 }, "end": { "line": 39, "column": 40 } },
      "22": { "start": { "line": 40, "column": 4 }, "end": { "line": 61, "column": 7 } },
      "23": { "start": { "line": 41, "column": 8 }, "end": { "line": 60, "column": 9 } },
      "24": { "start": { "line": 42, "column": 12 }, "end": { "line": 42, "column": 47 } },
      "25": { "start": { "line": 44, "column": 13 }, "end": { "line": 60, "column": 9 } },
      "26": { "start": { "line": 45, "column": 29 }, "end": { "line": 45, "column": 38 } },
      "27": { "start": { "line": 46, "column": 12 }, "end": { "line": 56, "column": 15 } },
      "28": { "start": { "line": 55, "column": 16 }, "end": { "line": 55, "column": 54 } },
      "29": { "start": { "line": 59, "column": 12 }, "end": { "line": 59, "column": 45 } },
      "30": { "start": { "line": 65, "column": 0 }, "end": { "line": 84, "column": 3 } },
      "31": { "start": { "line": 66, "column": 25 }, "end": { "line": 66, "column": 33 } },
      "32": { "start": { "line": 67, "column": 4 }, "end": { "line": 83, "column": 7 } },
      "33": { "start": { "line": 75, "column": 8 }, "end": { "line": 82, "column": 9 } },
      "34": { "start": { "line": 76, "column": 12 }, "end": { "line": 76, "column": 47 } },
      "35": { "start": { "line": 79, "column": 12 }, "end": { "line": 81, "column": 15 } },
      "36": { "start": { "line": 80, "column": 16 }, "end": { "line": 80, "column": 54 } },
      "37": { "start": { "line": 87, "column": 0 }, "end": { "line": 102, "column": 3 } },
      "38": { "start": { "line": 88, "column": 20 }, "end": { "line": 88, "column": 40 } },
      "39": { "start": { "line": 89, "column": 4 }, "end": { "line": 101, "column": 7 } },
      "40": { "start": { "line": 90, "column": 8 }, "end": { "line": 100, "column": 9 } },
      "41": { "start": { "line": 91, "column": 12 }, "end": { "line": 91, "column": 47 } },
      "42": { "start": { "line": 93, "column": 13 }, "end": { "line": 100, "column": 9 } },
      "43": { "start": { "line": 94, "column": 12 }, "end": { "line": 94, "column": 45 } },
      "44": { "start": { "line": 97, "column": 12 }, "end": { "line": 99, "column": 15 } },
      "45": { "start": { "line": 98, "column": 16 }, "end": { "line": 98, "column": 53 } },
      "46": { "start": { "line": 104, "column": 0 }, "end": { "line": 126, "column": 3 } },
      "47": { "start": { "line": 105, "column": 20 }, "end": { "line": 105, "column": 41 } },
      "48": { "start": { "line": 106, "column": 20 }, "end": { "line": 106, "column": 39 } },
      "49": { "start": { "line": 107, "column": 4 }, "end": { "line": 125, "column": 7 } },
      "50": { "start": { "line": 108, "column": 8 }, "end": { "line": 124, "column": 9 } },
      "51": { "start": { "line": 109, "column": 12 }, "end": { "line": 109, "column": 47 } },
      "52": { "start": { "line": 111, "column": 13 }, "end": { "line": 124, "column": 9 } },
      "53": { "start": { "line": 112, "column": 12 }, "end": { "line": 114, "column": 15 } },
      "54": { "start": { "line": 113, "column": 16 }, "end": { "line": 113, "column": 65 } },
      "55": { "start": { "line": 115, "column": 12 }, "end": { "line": 115, "column": 66 } },
      "56": { "start": { "line": 116, "column": 12 }, "end": { "line": 120, "column": 15 } },
      "57": { "start": { "line": 123, "column": 12 }, "end": { "line": 123, "column": 45 } },
      "58": { "start": { "line": 129, "column": 0 }, "end": { "line": 160, "column": 3 } },
      "59": { "start": { "line": 130, "column": 21 }, "end": { "line": 130, "column": 42 } },
      "60": { "start": { "line": 131, "column": 18 }, "end": { "line": 131, "column": 26 } },
      "61": { "start": { "line": 132, "column": 4 }, "end": { "line": 159, "column": 7 } },
      "62": { "start": { "line": 133, "column": 8 }, "end": { "line": 158, "column": 9 } },
      "63": { "start": { "line": 134, "column": 12 }, "end": { "line": 134, "column": 47 } },
      "64": { "start": { "line": 137, "column": 12 }, "end": { "line": 157, "column": 15 } },
      "65": { "start": { "line": 138, "column": 16 }, "end": { "line": 156, "column": 17 } },
      "66": { "start": { "line": 139, "column": 20 }, "end": { "line": 139, "column": 56 } },
      "67": { "start": { "line": 142, "column": 33 }, "end": { "line": 142, "column": 42 } },
      "68": { "start": { "line": 143, "column": 20 }, "end": { "line": 151, "column": 23 } },
      "69": { "start": { "line": 146, "column": 171 }, "end": { "line": 146, "column": 220 } },
      "70": { "start": { "line": 148, "column": 24 }, "end": { "line": 150, "column": 25 } },
      "71": { "start": { "line": 149, "column": 28 }, "end": { "line": 149, "column": 91 } },
      "72": { "start": { "line": 152, "column": 20 }, "end": { "line": 155, "column": 23 } },
      "73": { "start": { "line": 161, "column": 0 }, "end": { "line": 161, "column": 25 } }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": { "start": { "line": 2, "column": 56 }, "end": { "line": 2, "column": 57 } },
        "loc": { "start": { "line": 2, "column": 71 }, "end": { "line": 4, "column": 1 } },
        "line": 2
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": { "start": { "line": 15, "column": 26 }, "end": { "line": 15, "column": 27 } },
        "loc": { "start": { "line": 15, "column": 46 }, "end": { "line": 34, "column": 1 } },
        "line": 15
      },
      "2": {
        "name": "(anonymous_2)",
        "decl": { "start": { "line": 18, "column": 79 }, "end": { "line": 18, "column": 80 } },
        "loc": { "start": { "line": 18, "column": 102 }, "end": { "line": 33, "column": 5 } },
        "line": 18
      },
      "3": {
        "name": "(anonymous_3)",
        "decl": { "start": { "line": 37, "column": 26 }, "end": { "line": 37, "column": 27 } },
        "loc": { "start": { "line": 37, "column": 46 }, "end": { "line": 62, "column": 1 } },
        "line": 37
      },
      "4": {
        "name": "(anonymous_4)",
        "decl": { "start": { "line": 40, "column": 79 }, "end": { "line": 40, "column": 80 } },
        "loc": { "start": { "line": 40, "column": 102 }, "end": { "line": 61, "column": 5 } },
        "line": 40
      },
      "5": {
        "name": "(anonymous_5)",
        "decl": { "start": { "line": 54, "column": 15 }, "end": { "line": 54, "column": 16 } },
        "loc": { "start": { "line": 54, "column": 31 }, "end": { "line": 56, "column": 13 } },
        "line": 54
      },
      "6": {
        "name": "(anonymous_6)",
        "decl": { "start": { "line": 65, "column": 17 }, "end": { "line": 65, "column": 18 } },
        "loc": { "start": { "line": 65, "column": 37 }, "end": { "line": 84, "column": 1 } },
        "line": 65
      },
      "7": {
        "name": "(anonymous_7)",
        "decl": { "start": { "line": 74, "column": 7 }, "end": { "line": 74, "column": 8 } },
        "loc": { "start": { "line": 74, "column": 30 }, "end": { "line": 83, "column": 5 } },
        "line": 74
      },
      "8": {
        "name": "(anonymous_8)",
        "decl": { "start": { "line": 79, "column": 176 }, "end": { "line": 79, "column": 177 } },
        "loc": { "start": { "line": 79, "column": 192 }, "end": { "line": 81, "column": 13 } },
        "line": 79
      },
      "9": {
        "name": "(anonymous_9)",
        "decl": { "start": { "line": 87, "column": 29 }, "end": { "line": 87, "column": 30 } },
        "loc": { "start": { "line": 87, "column": 49 }, "end": { "line": 102, "column": 1 } },
        "line": 87
      },
      "10": {
        "name": "(anonymous_10)",
        "decl": { "start": { "line": 89, "column": 79 }, "end": { "line": 89, "column": 80 } },
        "loc": { "start": { "line": 89, "column": 102 }, "end": { "line": 101, "column": 5 } },
        "line": 89
      },
      "11": {
        "name": "(anonymous_11)",
        "decl": { "start": { "line": 97, "column": 90 }, "end": { "line": 97, "column": 91 } },
        "loc": { "start": { "line": 97, "column": 105 }, "end": { "line": 99, "column": 13 } },
        "line": 97
      },
      "12": {
        "name": "(anonymous_12)",
        "decl": { "start": { "line": 104, "column": 50 }, "end": { "line": 104, "column": 51 } },
        "loc": { "start": { "line": 104, "column": 70 }, "end": { "line": 126, "column": 1 } },
        "line": 104
      },
      "13": {
        "name": "(anonymous_13)",
        "decl": { "start": { "line": 107, "column": 90 }, "end": { "line": 107, "column": 91 } },
        "loc": { "start": { "line": 107, "column": 113 }, "end": { "line": 125, "column": 5 } },
        "line": 107
      },
      "14": {
        "name": "(anonymous_14)",
        "decl": { "start": { "line": 112, "column": 60 }, "end": { "line": 112, "column": 61 } },
        "loc": { "start": { "line": 112, "column": 73 }, "end": { "line": 114, "column": 13 } },
        "line": 112
      },
      "15": {
        "name": "(anonymous_15)",
        "decl": { "start": { "line": 129, "column": 47 }, "end": { "line": 129, "column": 48 } },
        "loc": { "start": { "line": 129, "column": 67 }, "end": { "line": 160, "column": 1 } },
        "line": 129
      },
      "16": {
        "name": "(anonymous_16)",
        "decl": { "start": { "line": 132, "column": 169 }, "end": { "line": 132, "column": 170 } },
        "loc": { "start": { "line": 132, "column": 184 }, "end": { "line": 159, "column": 5 } },
        "line": 132
      },
      "17": {
        "name": "(anonymous_17)",
        "decl": { "start": { "line": 137, "column": 95 }, "end": { "line": 137, "column": 96 } },
        "loc": { "start": { "line": 137, "column": 119 }, "end": { "line": 157, "column": 13 } },
        "line": 137
      },
      "18": {
        "name": "(anonymous_18)",
        "decl": { "start": { "line": 146, "column": 156 }, "end": { "line": 146, "column": 157 } },
        "loc": { "start": { "line": 146, "column": 169 }, "end": { "line": 146, "column": 222 } },
        "line": 146
      },
      "19": {
        "name": "(anonymous_19)",
        "decl": { "start": { "line": 147, "column": 23 }, "end": { "line": 147, "column": 24 } },
        "loc": { "start": { "line": 147, "column": 44 }, "end": { "line": 151, "column": 21 } },
        "line": 147
      }
    },
    "branchMap": {
      "0": {
        "loc": { "start": { "line": 2, "column": 22 }, "end": { "line": 4, "column": 1 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 2, "column": 23 }, "end": { "line": 2, "column": 27 } },
          { "start": { "line": 2, "column": 31 }, "end": { "line": 2, "column": 51 } },
          { "start": { "line": 2, "column": 56 }, "end": { "line": 4, "column": 1 } }
        ],
        "line": 2
      },
      "1": {
        "loc": { "start": { "line": 3, "column": 11 }, "end": { "line": 3, "column": 61 } },
        "type": "cond-expr",
        "locations": [
          { "start": { "line": 3, "column": 37 }, "end": { "line": 3, "column": 40 } },
          { "start": { "line": 3, "column": 43 }, "end": { "line": 3, "column": 61 } }
        ],
        "line": 3
      },
      "2": {
        "loc": { "start": { "line": 3, "column": 12 }, "end": { "line": 3, "column": 33 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 3, "column": 12 }, "end": { "line": 3, "column": 15 } },
          { "start": { "line": 3, "column": 19 }, "end": { "line": 3, "column": 33 } }
        ],
        "line": 3
      },
      "3": {
        "loc": { "start": { "line": 19, "column": 8 }, "end": { "line": 32, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 19, "column": 8 }, "end": { "line": 32, "column": 9 } },
          { "start": { "line": 19, "column": 8 }, "end": { "line": 32, "column": 9 } }
        ],
        "line": 19
      },
      "4": {
        "loc": { "start": { "line": 22, "column": 13 }, "end": { "line": 32, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 22, "column": 13 }, "end": { "line": 32, "column": 9 } },
          { "start": { "line": 22, "column": 13 }, "end": { "line": 32, "column": 9 } }
        ],
        "line": 22
      },
      "5": {
        "loc": { "start": { "line": 41, "column": 8 }, "end": { "line": 60, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 41, "column": 8 }, "end": { "line": 60, "column": 9 } },
          { "start": { "line": 41, "column": 8 }, "end": { "line": 60, "column": 9 } }
        ],
        "line": 41
      },
      "6": {
        "loc": { "start": { "line": 44, "column": 13 }, "end": { "line": 60, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 44, "column": 13 }, "end": { "line": 60, "column": 9 } },
          { "start": { "line": 44, "column": 13 }, "end": { "line": 60, "column": 9 } }
        ],
        "line": 44
      },
      "7": {
        "loc": { "start": { "line": 47, "column": 16 }, "end": { "line": 47, "column": 68 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 47, "column": 16 }, "end": { "line": 47, "column": 42 } },
          { "start": { "line": 47, "column": 46 }, "end": { "line": 47, "column": 68 } }
        ],
        "line": 47
      },
      "8": {
        "loc": { "start": { "line": 48, "column": 16 }, "end": { "line": 48, "column": 56 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 48, "column": 16 }, "end": { "line": 48, "column": 36 } },
          { "start": { "line": 48, "column": 40 }, "end": { "line": 48, "column": 56 } }
        ],
        "line": 48
      },
      "9": {
        "loc": { "start": { "line": 49, "column": 16 }, "end": { "line": 49, "column": 66 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 49, "column": 16 }, "end": { "line": 49, "column": 41 } },
          { "start": { "line": 49, "column": 45 }, "end": { "line": 49, "column": 66 } }
        ],
        "line": 49
      },
      "10": {
        "loc": { "start": { "line": 50, "column": 16 }, "end": { "line": 50, "column": 70 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 50, "column": 16 }, "end": { "line": 50, "column": 43 } },
          { "start": { "line": 50, "column": 47 }, "end": { "line": 50, "column": 70 } }
        ],
        "line": 50
      },
      "11": {
        "loc": { "start": { "line": 51, "column": 16 }, "end": { "line": 51, "column": 56 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 51, "column": 16 }, "end": { "line": 51, "column": 36 } },
          { "start": { "line": 51, "column": 40 }, "end": { "line": 51, "column": 56 } }
        ],
        "line": 51
      },
      "12": {
        "loc": { "start": { "line": 52, "column": 16 }, "end": { "line": 52, "column": 52 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 52, "column": 16 }, "end": { "line": 52, "column": 34 } },
          { "start": { "line": 52, "column": 38 }, "end": { "line": 52, "column": 52 } }
        ],
        "line": 52
      },
      "13": {
        "loc": { "start": { "line": 68, "column": 8 }, "end": { "line": 68, "column": 40 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 68, "column": 8 }, "end": { "line": 68, "column": 34 } },
          { "start": { "line": 68, "column": 38 }, "end": { "line": 68, "column": 40 } }
        ],
        "line": 68
      },
      "14": {
        "loc": { "start": { "line": 69, "column": 8 }, "end": { "line": 69, "column": 34 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 69, "column": 8 }, "end": { "line": 69, "column": 28 } },
          { "start": { "line": 69, "column": 32 }, "end": { "line": 69, "column": 34 } }
        ],
        "line": 69
      },
      "15": {
        "loc": { "start": { "line": 70, "column": 8 }, "end": { "line": 70, "column": 39 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 70, "column": 8 }, "end": { "line": 70, "column": 33 } },
          { "start": { "line": 70, "column": 37 }, "end": { "line": 70, "column": 39 } }
        ],
        "line": 70
      },
      "16": {
        "loc": { "start": { "line": 71, "column": 8 }, "end": { "line": 71, "column": 41 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 71, "column": 8 }, "end": { "line": 71, "column": 35 } },
          { "start": { "line": 71, "column": 39 }, "end": { "line": 71, "column": 41 } }
        ],
        "line": 71
      },
      "17": {
        "loc": { "start": { "line": 72, "column": 8 }, "end": { "line": 72, "column": 34 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 72, "column": 8 }, "end": { "line": 72, "column": 28 } },
          { "start": { "line": 72, "column": 32 }, "end": { "line": 72, "column": 34 } }
        ],
        "line": 72
      },
      "18": {
        "loc": { "start": { "line": 73, "column": 8 }, "end": { "line": 73, "column": 32 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 73, "column": 8 }, "end": { "line": 73, "column": 26 } },
          { "start": { "line": 73, "column": 30 }, "end": { "line": 73, "column": 32 } }
        ],
        "line": 73
      },
      "19": {
        "loc": { "start": { "line": 75, "column": 8 }, "end": { "line": 82, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 75, "column": 8 }, "end": { "line": 82, "column": 9 } },
          { "start": { "line": 75, "column": 8 }, "end": { "line": 82, "column": 9 } }
        ],
        "line": 75
      },
      "20": {
        "loc": { "start": { "line": 79, "column": 70 }, "end": { "line": 79, "column": 112 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 79, "column": 70 }, "end": { "line": 79, "column": 93 } },
          { "start": { "line": 79, "column": 97 }, "end": { "line": 79, "column": 112 } }
        ],
        "line": 79
      },
      "21": {
        "loc": { "start": { "line": 79, "column": 114 }, "end": { "line": 79, "column": 156 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 79, "column": 114 }, "end": { "line": 79, "column": 137 } },
          { "start": { "line": 79, "column": 141 }, "end": { "line": 79, "column": 156 } }
        ],
        "line": 79
      },
      "22": {
        "loc": { "start": { "line": 90, "column": 8 }, "end": { "line": 100, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 90, "column": 8 }, "end": { "line": 100, "column": 9 } },
          { "start": { "line": 90, "column": 8 }, "end": { "line": 100, "column": 9 } }
        ],
        "line": 90
      },
      "23": {
        "loc": { "start": { "line": 93, "column": 13 }, "end": { "line": 100, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 93, "column": 13 }, "end": { "line": 100, "column": 9 } },
          { "start": { "line": 93, "column": 13 }, "end": { "line": 100, "column": 9 } }
        ],
        "line": 93
      },
      "24": {
        "loc": { "start": { "line": 108, "column": 8 }, "end": { "line": 124, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 108, "column": 8 }, "end": { "line": 124, "column": 9 } },
          { "start": { "line": 108, "column": 8 }, "end": { "line": 124, "column": 9 } }
        ],
        "line": 108
      },
      "25": {
        "loc": { "start": { "line": 111, "column": 13 }, "end": { "line": 124, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 111, "column": 13 }, "end": { "line": 124, "column": 9 } },
          { "start": { "line": 111, "column": 13 }, "end": { "line": 124, "column": 9 } }
        ],
        "line": 111
      },
      "26": {
        "loc": { "start": { "line": 133, "column": 8 }, "end": { "line": 158, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 133, "column": 8 }, "end": { "line": 158, "column": 9 } },
          { "start": { "line": 133, "column": 8 }, "end": { "line": 158, "column": 9 } }
        ],
        "line": 133
      },
      "27": {
        "loc": { "start": { "line": 138, "column": 16 }, "end": { "line": 156, "column": 17 } },
        "type": "if",
        "locations": [
          { "start": { "line": 138, "column": 16 }, "end": { "line": 156, "column": 17 } },
          { "start": { "line": 138, "column": 16 }, "end": { "line": 156, "column": 17 } }
        ],
        "line": 138
      },
      "28": {
        "loc": { "start": { "line": 148, "column": 24 }, "end": { "line": 150, "column": 25 } },
        "type": "if",
        "locations": [
          { "start": { "line": 148, "column": 24 }, "end": { "line": 150, "column": 25 } },
          { "start": { "line": 148, "column": 24 }, "end": { "line": 150, "column": 25 } }
        ],
        "line": 148
      }
    },
    "s": {
      "0": 1,
      "1": 4,
      "2": 1,
      "3": 1,
      "4": 1,
      "5": 1,
      "6": 1,
      "7": 1,
      "8": 1,
      "9": 1,
      "10": 1,
      "11": 2,
      "12": 2,
      "13": 2,
      "14": 0,
      "15": 2,
      "16": 1,
      "17": 1,
      "18": 1,
      "19": 1,
      "20": 2,
      "21": 2,
      "22": 2,
      "23": 2,
      "24": 0,
      "25": 2,
      "26": 1,
      "27": 1,
      "28": 1,
      "29": 1,
      "30": 1,
      "31": 1,
      "32": 1,
      "33": 1,
      "34": 0,
      "35": 1,
      "36": 1,
      "37": 1,
      "38": 2,
      "39": 2,
      "40": 2,
      "41": 0,
      "42": 2,
      "43": 2,
      "44": 0,
      "45": 0,
      "46": 1,
      "47": 2,
      "48": 2,
      "49": 2,
      "50": 2,
      "51": 0,
      "52": 2,
      "53": 1,
      "54": 4,
      "55": 1,
      "56": 1,
      "57": 1,
      "58": 1,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 1
    },
    "f": {
      "0": 4,
      "1": 2,
      "2": 2,
      "3": 2,
      "4": 2,
      "5": 1,
      "6": 1,
      "7": 1,
      "8": 1,
      "9": 2,
      "10": 2,
      "11": 0,
      "12": 2,
      "13": 2,
      "14": 4,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    "b": {
      "0": [1, 1, 1],
      "1": [3, 1],
      "2": [4, 4],
      "3": [0, 2],
      "4": [1, 1],
      "5": [0, 2],
      "6": [1, 1],
      "7": [1, 0],
      "8": [1, 0],
      "9": [1, 0],
      "10": [1, 0],
      "11": [1, 0],
      "12": [1, 0],
      "13": [1, 0],
      "14": [1, 0],
      "15": [1, 0],
      "16": [1, 0],
      "17": [1, 0],
      "18": [1, 0],
      "19": [0, 1],
      "20": [1, 1],
      "21": [1, 1],
      "22": [0, 2],
      "23": [2, 0],
      "24": [0, 2],
      "25": [1, 1],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0]
    },
    "inputSourceMap": {
      "version": 3,
      "file": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\memberApi.ts",
      "sources": ["F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\memberApi.ts"],
      "names": [],
      "mappings": "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",
      "sourcesContent": [
        "import config from '../config';\r\nimport express, { Response } from 'express';\r\nimport $sql from './sqlMap';\r\nimport { GetMemberResult, ResultCommon, GetMemberRoleResult } from 'achieve-it-contract';\r\nimport {\r\n  commonDeleteHandler,\r\n  commomInsertHandler,\r\n  mysqlErrorHandler,\r\n  commomUpdateHandler,\r\n  notFoundErrorHandler\r\n} from '../util';\r\nimport { conn } from '../mysqlPool';\r\nimport email from '../email';\r\nconst router = express.Router();\r\n\r\n// get /member/:member_id\r\n// getMember\r\n\r\nrouter.get('/:member_id', (req, res: Response<GetMemberResult>) => {\r\n  // console.log(req.user)\r\n  const member_id = req.params.member_id;\r\n  conn.query($sql.member.getMemberById, [member_id], (err, result) => {\r\n    if (err) {\r\n      mysqlErrorHandler(res, err);\r\n    } else if (result.length == 1) {\r\n      result[0].job = config.numberMap.memberJob[result[0].job];\r\n      res.json({\r\n        member: result[0],\r\n        status: config.status.SUCCESS,\r\n        msg: config.msg.GET_MEMBER\r\n      });\r\n    } else {\r\n      notFoundErrorHandler(res);\r\n    }\r\n  });\r\n});\r\n\r\n// put /member/:member_id\r\n// updateMember\r\nrouter.put('/:member_id', (req, res: Response<ResultCommon>) => {\r\n  const member_details = req.body;\r\n  const member_id = req.params.member_id;\r\n\r\n  conn.query($sql.member.getMemberById, [member_id], (err, result) => {\r\n    if (err) {\r\n      mysqlErrorHandler(res, err);\r\n    } else if (result.length == 1) {\r\n      const old_member = result[0];\r\n      conn.query(\r\n        $sql.member.updateMemberById,\r\n        [\r\n          member_details.member_name || old_member.member_name,\r\n          member_details.email || old_member.email,\r\n          member_details.department || old_member.department,\r\n          member_details.leader_email || old_member.leader_email,\r\n          member_details.phone || old_member.phone,\r\n          member_details.job || old_member.job,\r\n          member_id\r\n        ],\r\n        err2 => {\r\n          commomUpdateHandler(res, err2);\r\n        }\r\n      );\r\n    } else {\r\n      notFoundErrorHandler(res);\r\n    }\r\n  });\r\n});\r\n\r\n// post /memner\r\n// insertMember\r\nrouter.post('/', (req, res: Response<ResultCommon>) => {\r\n  const member_details = req.body;\r\n  conn.query(\r\n    $sql.member.insertMember,\r\n    [\r\n      member_details.member_name || '',\r\n      member_details.email || '',\r\n      member_details.department || '',\r\n      member_details.leader_email || '',\r\n      member_details.phone || '',\r\n      member_details.job || ''\r\n    ],\r\n    (err, result) => {\r\n      if (err) {\r\n        mysqlErrorHandler(res, err);\r\n      } else {\r\n        conn.query(\r\n          $sql.user.insertUser,\r\n          [member_details.username || result.insertId, member_details.password || result.insertId, result.insertId],\r\n          err2 => {\r\n            commomInsertHandler(res, err2);\r\n          }\r\n        );\r\n      }\r\n    }\r\n  );\r\n});\r\n\r\n// delete /member/:member_id\r\n// 已在数据库中实现级联删除\r\nrouter.delete('/:member_id', (req, res: Response<ResultCommon>) => {\r\n  const member_id = req.params.member_id;\r\n  conn.query($sql.member.getMemberById, [member_id], (err, result) => {\r\n    if (err) {\r\n      mysqlErrorHandler(res, err);\r\n    } else if (result.length == 0) {\r\n      notFoundErrorHandler(res);\r\n    } else {\r\n      conn.query($sql.member.deleteMemberById, [member_id], err => {\r\n        commonDeleteHandler(res, err);\r\n      });\r\n    }\r\n  });\r\n});\r\n\r\n// get /member/getMemberRoleInProject/:projec_id\r\nrouter.get(\"/getMemberRoleInProject/:project_id\", (req, res: Response<GetMemberRoleResult>) => {\r\n  const projec_id = req.params.project_id;\r\n  const member_id = req.query.member_id;\r\n  conn.query($sql.member.getMemberRole, [projec_id, member_id], (err, result) => {\r\n      if (err) {\r\n          mysqlErrorHandler(res, err);\r\n      } else if (result.length == 1) {\r\n          result[0].role = JSON.parse(result[0].role).map((x) => {\r\n            return config.numberMap.projectRole[x];\r\n          });\r\n          result[0].authority = JSON.parse(result[0].authority);\r\n          res.json({\r\n              member_role: result[0],\r\n              status: config.status.SUCCESS,\r\n              msg: 'get success'\r\n          })\r\n      } else {\r\n          notFoundErrorHandler(res);\r\n      }\r\n  })\r\n})\r\n\r\n// post /member/addMemberToProject/:project_id\r\n// 添加成功后会向该员工发送通知邮件\r\n\r\nrouter.post(\"/addMemberToProject/:project_id\", (req, res: Response<ResultCommon>) => {\r\n  const project_id = req.params.project_id;\r\n  const details = req.body;\r\n\r\n  conn.query($sql.member.addMemberToProject, [project_id, details.member_id, JSON.stringify(details.role), JSON.stringify(details.authority)], (err) => {\r\n    if (err) {\r\n      mysqlErrorHandler(res, err);\r\n    } else {\r\n      conn.query($sql.member.getMemberById, [details.member_id], (err2, result) => {\r\n        if (err2) {\r\n          mysqlErrorHandler(res, err2);\r\n        } else {\r\n          const member = result[0];\r\n          email.sendEmail({\r\n            to: member.email,\r\n            subject: `[${project_id}]项目邀请`,\r\n            text: `你已被邀请加入${project_id}项目,你的角色为[${details.role.map((x) => config.numberMap.projectRole[x])}],你的权限为[${details.authority}]`\r\n          }, (err, info) => {\r\n            if (err) {\r\n              console.log(`send to member ${details.member_id} failed`);\r\n            }\r\n          })\r\n          res.json({\r\n            status: config.status.SUCCESS,\r\n            msg: 'success'\r\n          })\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n})\r\n\r\n\r\nexport default router;\r\n"
      ]
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "aa8bda1c22a0a839e32f329360eefa60997f31ff",
    "contentHash": "c9b0f286715f530cda51adca746cc282c097f251cbe5ed256dee95c11d40f1f8"
  },
  "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\featureApi.ts": {
    "path": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\featureApi.ts",
    "statementMap": {
      "0": { "start": { "line": 2, "column": 22 }, "end": { "line": 4, "column": 1 } },
      "1": { "start": { "line": 3, "column": 4 }, "end": { "line": 3, "column": 62 } },
      "2": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 62 } },
      "3": { "start": { "line": 6, "column": 15 }, "end": { "line": 6, "column": 52 } },
      "4": { "start": { "line": 7, "column": 16 }, "end": { "line": 7, "column": 51 } },
      "5": { "start": { "line": 8, "column": 15 }, "end": { "line": 8, "column": 51 } },
      "6": { "start": { "line": 9, "column": 18 }, "end": { "line": 9, "column": 41 } },
      "7": { "start": { "line": 10, "column": 13 }, "end": { "line": 10, "column": 31 } },
      "8": { "start": { "line": 11, "column": 13 }, "end": { "line": 11, "column": 39 } },
      "9": { "start": { "line": 14, "column": 0 }, "end": { "line": 29, "column": 3 } },
      "10": { "start": { "line": 15, "column": 21 }, "end": { "line": 15, "column": 42 } },
      "11": { "start": { "line": 16, "column": 4 }, "end": { "line": 28, "column": 7 } },
      "12": { "start": { "line": 17, "column": 8 }, "end": { "line": 27, "column": 9 } },
      "13": { "start": { "line": 18, "column": 12 }, "end": { "line": 18, "column": 47 } },
      "14": { "start": { "line": 21, "column": 12 }, "end": { "line": 26, "column": 15 } },
      "15": { "start": { "line": 32, "column": 0 }, "end": { "line": 38, "column": 3 } },
      "16": { "start": { "line": 33, "column": 21 }, "end": { "line": 33, "column": 42 } },
      "17": { "start": { "line": 34, "column": 27 }, "end": { "line": 34, "column": 35 } },
      "18": { "start": { "line": 35, "column": 4 }, "end": { "line": 37, "column": 7 } },
      "19": { "start": { "line": 36, "column": 8 }, "end": { "line": 36, "column": 45 } },
      "20": { "start": { "line": 40, "column": 0 }, "end": { "line": 68, "column": 3 } },
      "21": { "start": { "line": 41, "column": 21 }, "end": { "line": 41, "column": 42 } },
      "22": { "start": { "line": 42, "column": 25 }, "end": { "line": 42, "column": 48 } },
      "23": { "start": { "line": 43, "column": 18 }, "end": { "line": 62, "column": 5 } },
      "24": { "start": { "line": 44, "column": 23 }, "end": { "line": 44, "column": 34 } },
      "25": { "start": { "line": 45, "column": 8 }, "end": { "line": 61, "column": 11 } },
      "26": { "start": { "line": 46, "column": 12 }, "end": { "line": 60, "column": 13 } },
      "27": { "start": { "line": 47, "column": 16 }, "end": { "line": 47, "column": 47 } },
      "28": { "start": { "line": 50, "column": 31 }, "end": { "line": 50, "column": 44 } },
      "29": { "start": { "line": 51, "column": 16 }, "end": { "line": 59, "column": 17 } },
      "30": { "start": { "line": 51, "column": 30 }, "end": { "line": 51, "column": 31 } },
      "31": { "start": { "line": 51, "column": 46 }, "end": { "line": 51, "column": 54 } },
      "32": { "start": { "line": 52, "column": 32 }, "end": { "line": 52, "column": 46 } },
      "33": { "start": { "line": 53, "column": 20 }, "end": { "line": 58, "column": 23 } },
      "34": { "start": { "line": 55, "column": 24 }, "end": { "line": 57, "column": 25 } },
      "35": { "start": { "line": 56, "column": 28 }, "end": { "line": 56, "column": 60 } },
      "36": { "start": { "line": 63, "column": 4 }, "end": { "line": 66, "column": 5 } },
      "37": { "start": { "line": 63, "column": 18 }, "end": { "line": 63, "column": 19 } },
      "38": { "start": { "line": 63, "column": 40 }, "end": { "line": 63, "column": 54 } },
      "39": { "start": { "line": 64, "column": 19 }, "end": { "line": 64, "column": 39 } },
      "40": { "start": { "line": 65, "column": 8 }, "end": { "line": 65, "column": 22 } },
      "41": { "start": { "line": 67, "column": 4 }, "end": { "line": 67, "column": 31 } },
      "42": { "start": { "line": 71, "column": 0 }, "end": { "line": 76, "column": 3 } },
      "43": { "start": { "line": 72, "column": 27 }, "end": { "line": 72, "column": 35 } },
      "44": { "start": { "line": 73, "column": 4 }, "end": { "line": 75, "column": 8 } },
      "45": { "start": { "line": 74, "column": 8 }, "end": { "line": 74, "column": 45 } },
      "46": { "start": { "line": 77, "column": 0 }, "end": { "line": 77, "column": 25 } }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": { "start": { "line": 2, "column": 56 }, "end": { "line": 2, "column": 57 } },
        "loc": { "start": { "line": 2, "column": 71 }, "end": { "line": 4, "column": 1 } },
        "line": 2
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": { "start": { "line": 14, "column": 50 }, "end": { "line": 14, "column": 51 } },
        "loc": { "start": { "line": 14, "column": 70 }, "end": { "line": 29, "column": 1 } },
        "line": 14
      },
      "2": {
        "name": "(anonymous_2)",
        "decl": { "start": { "line": 16, "column": 91 }, "end": { "line": 16, "column": 92 } },
        "loc": { "start": { "line": 16, "column": 114 }, "end": { "line": 28, "column": 5 } },
        "line": 16
      },
      "3": {
        "name": "(anonymous_3)",
        "decl": { "start": { "line": 32, "column": 28 }, "end": { "line": 32, "column": 29 } },
        "loc": { "start": { "line": 32, "column": 48 }, "end": { "line": 38, "column": 1 } },
        "line": 32
      },
      "4": {
        "name": "(anonymous_4)",
        "decl": { "start": { "line": 35, "column": 151 }, "end": { "line": 35, "column": 152 } },
        "loc": { "start": { "line": 35, "column": 166 }, "end": { "line": 37, "column": 5 } },
        "line": 35
      },
      "5": {
        "name": "(anonymous_5)",
        "decl": { "start": { "line": 40, "column": 57 }, "end": { "line": 40, "column": 58 } },
        "loc": { "start": { "line": 40, "column": 77 }, "end": { "line": 68, "column": 1 } },
        "line": 40
      },
      "6": {
        "name": "(anonymous_6)",
        "decl": { "start": { "line": 43, "column": 18 }, "end": { "line": 43, "column": 19 } },
        "loc": { "start": { "line": 43, "column": 34 }, "end": { "line": 62, "column": 5 } },
        "line": 43
      },
      "7": {
        "name": "(anonymous_7)",
        "decl": { "start": { "line": 45, "column": 211 }, "end": { "line": 45, "column": 212 } },
        "loc": { "start": { "line": 45, "column": 226 }, "end": { "line": 61, "column": 9 } },
        "line": 45
      },
      "8": {
        "name": "(anonymous_8)",
        "decl": { "start": { "line": 54, "column": 163 }, "end": { "line": 54, "column": 164 } },
        "loc": { "start": { "line": 54, "column": 179 }, "end": { "line": 58, "column": 21 } },
        "line": 54
      },
      "9": {
        "name": "(anonymous_9)",
        "decl": { "start": { "line": 71, "column": 36 }, "end": { "line": 71, "column": 37 } },
        "loc": { "start": { "line": 71, "column": 56 }, "end": { "line": 76, "column": 1 } },
        "line": 71
      },
      "10": {
        "name": "(anonymous_10)",
        "decl": { "start": { "line": 73, "column": 150 }, "end": { "line": 73, "column": 151 } },
        "loc": { "start": { "line": 73, "column": 165 }, "end": { "line": 75, "column": 5 } },
        "line": 73
      }
    },
    "branchMap": {
      "0": {
        "loc": { "start": { "line": 2, "column": 22 }, "end": { "line": 4, "column": 1 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 2, "column": 23 }, "end": { "line": 2, "column": 27 } },
          { "start": { "line": 2, "column": 31 }, "end": { "line": 2, "column": 51 } },
          { "start": { "line": 2, "column": 56 }, "end": { "line": 4, "column": 1 } }
        ],
        "line": 2
      },
      "1": {
        "loc": { "start": { "line": 3, "column": 11 }, "end": { "line": 3, "column": 61 } },
        "type": "cond-expr",
        "locations": [
          { "start": { "line": 3, "column": 37 }, "end": { "line": 3, "column": 40 } },
          { "start": { "line": 3, "column": 43 }, "end": { "line": 3, "column": 61 } }
        ],
        "line": 3
      },
      "2": {
        "loc": { "start": { "line": 3, "column": 12 }, "end": { "line": 3, "column": 33 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 3, "column": 12 }, "end": { "line": 3, "column": 15 } },
          { "start": { "line": 3, "column": 19 }, "end": { "line": 3, "column": 33 } }
        ],
        "line": 3
      },
      "3": {
        "loc": { "start": { "line": 17, "column": 8 }, "end": { "line": 27, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 17, "column": 8 }, "end": { "line": 27, "column": 9 } },
          { "start": { "line": 17, "column": 8 }, "end": { "line": 27, "column": 9 } }
        ],
        "line": 17
      },
      "4": {
        "loc": { "start": { "line": 35, "column": 70 }, "end": { "line": 35, "column": 106 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 35, "column": 70 }, "end": { "line": 35, "column": 100 } },
          { "start": { "line": 35, "column": 104 }, "end": { "line": 35, "column": 106 } }
        ],
        "line": 35
      },
      "5": {
        "loc": { "start": { "line": 35, "column": 120 }, "end": { "line": 35, "column": 148 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 35, "column": 120 }, "end": { "line": 35, "column": 142 } },
          { "start": { "line": 35, "column": 146 }, "end": { "line": 35, "column": 148 } }
        ],
        "line": 35
      },
      "6": {
        "loc": { "start": { "line": 46, "column": 12 }, "end": { "line": 60, "column": 13 } },
        "type": "if",
        "locations": [
          { "start": { "line": 46, "column": 12 }, "end": { "line": 60, "column": 13 } },
          { "start": { "line": 46, "column": 12 }, "end": { "line": 60, "column": 13 } }
        ],
        "line": 46
      },
      "7": {
        "loc": { "start": { "line": 55, "column": 24 }, "end": { "line": 57, "column": 25 } },
        "type": "if",
        "locations": [
          { "start": { "line": 55, "column": 24 }, "end": { "line": 57, "column": 25 } },
          { "start": { "line": 55, "column": 24 }, "end": { "line": 57, "column": 25 } }
        ],
        "line": 55
      }
    },
    "s": {
      "0": 1,
      "1": 3,
      "2": 1,
      "3": 1,
      "4": 1,
      "5": 1,
      "6": 1,
      "7": 1,
      "8": 1,
      "9": 1,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 1,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 1,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 1,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 1
    },
    "f": { "0": 3, "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0 },
    "b": { "0": [1, 1, 1], "1": [2, 1], "2": [3, 3], "3": [0, 0], "4": [0, 0], "5": [0, 0], "6": [0, 0], "7": [0, 0] },
    "inputSourceMap": {
      "version": 3,
      "file": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\featureApi.ts",
      "sources": ["F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\featureApi.ts"],
      "names": [],
      "mappings": "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",
      "sourcesContent": [
        "import config from '../config';\r\nimport express, { Response } from 'express';\r\nimport $sql from './sqlMap';\r\nimport { GetProjectFeatureListResult, ResultCommon } from 'achieve-it-contract';\r\nimport { conn } from '../mysqlPool';\r\nimport { mysqlErrorHandler, commomInsertHandler, successHandler } from '../util';\r\n\r\nconst router = express.Router();\r\n\r\n// get /function/getProjectFunctionList/:project_id\r\n\r\n// 获取项目功能\r\nrouter.get('/getProjectFunctionList/:project_id', (req, res: Response<GetProjectFeatureListResult>) => {\r\n  const project_id = req.params.project_id;\r\n  conn.query($sql.function.getFunctionByProjectId, [project_id], (err, result) => {\r\n    if (err) {\r\n      mysqlErrorHandler(res, err);\r\n    } else {\r\n      res.json({\r\n        feature_list: result,\r\n        project_id,\r\n        status: config.status.SUCCESS,\r\n        msg: 'success'\r\n      });\r\n    }\r\n  });\r\n});\r\n\r\n// /function/addFunctionToProject/:project_id\r\n// 增加功能\r\nrouter.post('/addFunction', (req, res: Response<ResultCommon>) => {\r\n  const project_id = req.params.project_id;\r\n  const function_details = req.body;\r\n  conn.query(\r\n    $sql.function.insertFunction,\r\n    [function_details.function_name || '', project_id, function_details.layer || ''],\r\n    (err) => {\r\n      commomInsertHandler(res, err);\r\n    }\r\n  );\r\n});\r\n\r\n// post /function/importFunctionExcelToProject/:project_id\r\nrouter.post('/importFunctionExcelToProject/:project_id', (req, res: Response<ResultCommon>) => {\r\n  const project_id = req.params.project_id;\r\n  const function_excel = req.body.function_excel;\r\n  for (const item of function_excel) {\r\n    const parent = item.parent;\r\n    conn.query(\"insert into \\`function\\` (project_id, function_id, function_name, layer) values (?, ?, ?, ?)\", [project_id, `${project_id}_${parent.function_name}`, parent.function_name, 1], (err) => {\r\n      if (err) {\r\n        console.log(`[myssql] ${err}`)\r\n      } else {\r\n        const children = item.children;\r\n        for (const child of children) {\r\n          conn.query(\"insert into \\`function\\` (project_id, function_id, function_name, layer, parent) values (?, ?, ?, ?, ?)\", [project_id, \r\n            `${project_id}_${parent.function_name}_${child.function_name}`, child.function_name, 2, `${project_id}_${parent.function_name}`], (err2) => {\r\n            if (err) {\r\n              console.log(`[myssql] ${err2}`)\r\n            }\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  successHandler(res);\r\n})\r\n\r\n// /function/setFunctionRelation\r\n// 设置功能上下级关系\r\nrouter.post('/setFunctionRelation', (req, res: Response<ResultCommon>) => {\r\n  const relation_details = req.body;\r\n  conn.query(\r\n    $sql.function.setFunctionRelation,\r\n    [relation_details.first_function_id, relation_details.second_function_id],\r\n    (err => {\r\n      commomInsertHandler(res, err);\r\n    })\r\n)});\r\n\r\nexport default router;\r\n"
      ]
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "5a5a46110f3c28f73d171719146e86137c6837a0",
    "contentHash": "9c7b2b6403fe7961ea8e7038edd99fdee51b842f5cf959888716a8115ec40f39"
  },
  "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\projectApi.ts": {
    "path": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\projectApi.ts",
    "statementMap": {
      "0": { "start": { "line": 2, "column": 22 }, "end": { "line": 4, "column": 1 } },
      "1": { "start": { "line": 3, "column": 4 }, "end": { "line": 3, "column": 62 } },
      "2": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 62 } },
      "3": { "start": { "line": 6, "column": 15 }, "end": { "line": 6, "column": 52 } },
      "4": { "start": { "line": 7, "column": 16 }, "end": { "line": 7, "column": 51 } },
      "5": { "start": { "line": 8, "column": 15 }, "end": { "line": 8, "column": 51 } },
      "6": { "start": { "line": 9, "column": 13 }, "end": { "line": 9, "column": 31 } },
      "7": { "start": { "line": 10, "column": 18 }, "end": { "line": 10, "column": 41 } },
      "8": { "start": { "line": 11, "column": 14 }, "end": { "line": 11, "column": 50 } },
      "9": { "start": { "line": 12, "column": 13 }, "end": { "line": 12, "column": 39 } },
      "10": { "start": { "line": 15, "column": 0 }, "end": { "line": 34, "column": 3 } },
      "11": { "start": { "line": 16, "column": 4 }, "end": { "line": 33, "column": 7 } },
      "12": { "start": { "line": 17, "column": 8 }, "end": { "line": 32, "column": 9 } },
      "13": { "start": { "line": 18, "column": 12 }, "end": { "line": 18, "column": 47 } },
      "14": { "start": { "line": 21, "column": 12 }, "end": { "line": 26, "column": 13 } },
      "15": { "start": { "line": 22, "column": 16 }, "end": { "line": 22, "column": 94 } },
      "16": { "start": { "line": 23, "column": 16 }, "end": { "line": 23, "column": 84 } },
      "17": { "start": { "line": 24, "column": 16 }, "end": { "line": 24, "column": 72 } },
      "18": { "start": { "line": 25, "column": 16 }, "end": { "line": 25, "column": 68 } },
      "19": { "start": { "line": 27, "column": 12 }, "end": { "line": 31, "column": 15 } },
      "20": { "start": { "line": 37, "column": 0 }, "end": { "line": 58, "column": 3 } },
      "21": { "start": { "line": 38, "column": 21 }, "end": { "line": 38, "column": 42 } },
      "22": { "start": { "line": 39, "column": 4 }, "end": { "line": 57, "column": 7 } },
      "23": { "start": { "line": 40, "column": 8 }, "end": { "line": 56, "column": 9 } },
      "24": { "start": { "line": 41, "column": 12 }, "end": { "line": 41, "column": 47 } },
      "25": { "start": { "line": 43, "column": 13 }, "end": { "line": 56, "column": 9 } },
      "26": { "start": { "line": 44, "column": 12 }, "end": { "line": 44, "column": 90 } },
      "27": { "start": { "line": 45, "column": 12 }, "end": { "line": 45, "column": 80 } },
      "28": { "start": { "line": 46, "column": 12 }, "end": { "line": 46, "column": 68 } },
      "29": { "start": { "line": 47, "column": 12 }, "end": { "line": 47, "column": 64 } },
      "30": { "start": { "line": 48, "column": 12 }, "end": { "line": 52, "column": 15 } },
      "31": { "start": { "line": 55, "column": 12 }, "end": { "line": 55, "column": 45 } },
      "32": { "start": { "line": 61, "column": 0 }, "end": { "line": 66, "column": 3 } },
      "33": { "start": { "line": 62, "column": 21 }, "end": { "line": 62, "column": 42 } },
      "34": { "start": { "line": 63, "column": 4 }, "end": { "line": 65, "column": 7 } },
      "35": { "start": { "line": 64, "column": 8 }, "end": { "line": 64, "column": 45 } },
      "36": { "start": { "line": 69, "column": 0 }, "end": { "line": 165, "column": 3 } },
      "37": { "start": { "line": 70, "column": 26 }, "end": { "line": 70, "column": 34 } },
      "38": { "start": { "line": 71, "column": 4 }, "end": { "line": 76, "column": 5 } },
      "39": { "start": { "line": 72, "column": 8 }, "end": { "line": 75, "column": 11 } },
      "40": { "start": { "line": 77, "column": 4 }, "end": { "line": 164, "column": 7 } },
      "41": { "start": { "line": 89, "column": 8 }, "end": { "line": 163, "column": 9 } },
      "42": { "start": { "line": 90, "column": 12 }, "end": { "line": 90, "column": 47 } },
      "43": { "start": { "line": 94, "column": 12 }, "end": { "line": 162, "column": 15 } },
      "44": { "start": { "line": 95, "column": 16 }, "end": { "line": 161, "column": 17 } },
      "45": { "start": { "line": 96, "column": 20 }, "end": { "line": 96, "column": 55 } },
      "46": { "start": { "line": 99, "column": 36 }, "end": { "line": 99, "column": 42 } },
      "47": { "start": { "line": 100, "column": 20 }, "end": { "line": 155, "column": 21 } },
      "48": { "start": { "line": 100, "column": 34 }, "end": { "line": 100, "column": 35 } },
      "49": { "start": { "line": 100, "column": 51 }, "end": { "line": 100, "column": 60 } },
      "50": { "start": { "line": 101, "column": 32 }, "end": { "line": 101, "column": 47 } },
      "51": { "start": { "line": 102, "column": 38 }, "end": { "line": 102, "column": 115 } },
      "52": { "start": { "line": 103, "column": 24 }, "end": { "line": 148, "column": 25 } },
      "53": { "start": { "line": 105, "column": 32 }, "end": { "line": 113, "column": 35 } },
      "54": { "start": { "line": 110, "column": 36 }, "end": { "line": 112, "column": 37 } },
      "55": { "start": { "line": 111, "column": 40 }, "end": { "line": 111, "column": 75 } },
      "56": { "start": { "line": 114, "column": 32 }, "end": { "line": 114, "column": 38 } },
      "57": { "start": { "line": 125, "column": 32 }, "end": { "line": 125, "column": 38 } },
      "58": { "start": { "line": 136, "column": 32 }, "end": { "line": 136, "column": 38 } },
      "59": { "start": { "line": 147, "column": 32 }, "end": { "line": 147, "column": 38 } },
      "60": { "start": { "line": 156, "column": 20 }, "end": { "line": 156, "column": 43 } },
      "61": { "start": { "line": 157, "column": 20 }, "end": { "line": 160, "column": 23 } },
      "62": { "start": { "line": 168, "column": 0 }, "end": { "line": 196, "column": 3 } },
      "63": { "start": { "line": 169, "column": 21 }, "end": { "line": 169, "column": 42 } },
      "64": { "start": { "line": 170, "column": 26 }, "end": { "line": 170, "column": 34 } },
      "65": { "start": { "line": 171, "column": 4 }, "end": { "line": 195, "column": 7 } },
      "66": { "start": { "line": 172, "column": 8 }, "end": { "line": 194, "column": 9 } },
      "67": { "start": { "line": 173, "column": 12 }, "end": { "line": 173, "column": 47 } },
      "68": { "start": { "line": 175, "column": 13 }, "end": { "line": 194, "column": 9 } },
      "69": { "start": { "line": 176, "column": 30 }, "end": { "line": 176, "column": 39 } },
      "70": { "start": { "line": 177, "column": 12 }, "end": { "line": 190, "column": 15 } },
      "71": { "start": { "line": 189, "column": 16 }, "end": { "line": 189, "column": 54 } },
      "72": { "start": { "line": 193, "column": 12 }, "end": { "line": 193, "column": 45 } },
      "73": { "start": { "line": 199, "column": 0 }, "end": { "line": 272, "column": 3 } },
      "74": { "start": { "line": 200, "column": 21 }, "end": { "line": 200, "column": 42 } },
      "75": { "start": { "line": 201, "column": 4 }, "end": { "line": 271, "column": 7 } },
      "76": { "start": { "line": 203, "column": 8 }, "end": { "line": 270, "column": 9 } },
      "77": { "start": { "line": 204, "column": 12 }, "end": { "line": 204, "column": 47 } },
      "78": { "start": { "line": 208, "column": 12 }, "end": { "line": 269, "column": 15 } },
      "79": { "start": { "line": 209, "column": 16 }, "end": { "line": 264, "column": 17 } },
      "80": { "start": { "line": 210, "column": 20 }, "end": { "line": 210, "column": 56 } },
      "81": { "start": { "line": 213, "column": 36 }, "end": { "line": 213, "column": 42 } },
      "82": { "start": { "line": 214, "column": 20 }, "end": { "line": 263, "column": 21 } },
      "83": { "start": { "line": 214, "column": 34 }, "end": { "line": 214, "column": 35 } },
      "84": { "start": { "line": 214, "column": 51 }, "end": { "line": 214, "column": 60 } },
      "85": { "start": { "line": 215, "column": 32 }, "end": { "line": 215, "column": 47 } },
      "86": { "start": { "line": 216, "column": 38 }, "end": { "line": 216, "column": 141 } },
      "87": { "start": { "line": 217, "column": 24 }, "end": { "line": 262, "column": 25 } },
      "88": { "start": { "line": 219, "column": 32 }, "end": { "line": 227, "column": 35 } },
      "89": { "start": { "line": 224, "column": 36 }, "end": { "line": 226, "column": 37 } },
      "90": { "start": { "line": 225, "column": 40 }, "end": { "line": 225, "column": 78 } },
      "91": { "start": { "line": 228, "column": 32 }, "end": { "line": 228, "column": 38 } },
      "92": { "start": { "line": 230, "column": 32 }, "end": { "line": 238, "column": 35 } },
      "93": { "start": { "line": 235, "column": 36 }, "end": { "line": 237, "column": 37 } },
      "94": { "start": { "line": 236, "column": 40 }, "end": { "line": 236, "column": 78 } },
      "95": { "start": { "line": 239, "column": 32 }, "end": { "line": 239, "column": 38 } },
      "96": { "start": { "line": 241, "column": 32 }, "end": { "line": 249, "column": 35 } },
      "97": { "start": { "line": 246, "column": 36 }, "end": { "line": 248, "column": 37 } },
      "98": { "start": { "line": 247, "column": 40 }, "end": { "line": 247, "column": 81 } },
      "99": { "start": { "line": 250, "column": 32 }, "end": { "line": 250, "column": 38 } },
      "100": { "start": { "line": 252, "column": 32 }, "end": { "line": 260, "column": 35 } },
      "101": { "start": { "line": 257, "column": 36 }, "end": { "line": 259, "column": 37 } },
      "102": { "start": { "line": 258, "column": 40 }, "end": { "line": 258, "column": 81 } },
      "103": { "start": { "line": 261, "column": 32 }, "end": { "line": 261, "column": 38 } },
      "104": { "start": { "line": 265, "column": 16 }, "end": { "line": 268, "column": 19 } },
      "105": { "start": { "line": 275, "column": 0 }, "end": { "line": 315, "column": 3 } },
      "106": { "start": { "line": 276, "column": 21 }, "end": { "line": 276, "column": 42 } },
      "107": { "start": { "line": 277, "column": 4 }, "end": { "line": 314, "column": 7 } },
      "108": { "start": { "line": 279, "column": 8 }, "end": { "line": 313, "column": 9 } },
      "109": { "start": { "line": 280, "column": 12 }, "end": { "line": 280, "column": 47 } },
      "110": { "start": { "line": 284, "column": 12 }, "end": { "line": 312, "column": 15 } },
      "111": { "start": { "line": 285, "column": 16 }, "end": { "line": 307, "column": 17 } },
      "112": { "start": { "line": 286, "column": 20 }, "end": { "line": 286, "column": 56 } },
      "113": { "start": { "line": 289, "column": 36 }, "end": { "line": 289, "column": 42 } },
      "114": { "start": { "line": 290, "column": 34 }, "end": { "line": 302, "column": 21 } },
      "115": { "start": { "line": 291, "column": 38 }, "end": { "line": 291, "column": 147 } },
      "116": { "start": { "line": 292, "column": 35 }, "end": { "line": 292, "column": 39 } },
      "117": { "start": { "line": 293, "column": 24 }, "end": { "line": 301, "column": 27 } },
      "118": { "start": { "line": 298, "column": 28 }, "end": { "line": 300, "column": 29 } },
      "119": { "start": { "line": 299, "column": 32 }, "end": { "line": 299, "column": 114 } },
      "120": { "start": { "line": 303, "column": 20 }, "end": { "line": 306, "column": 21 } },
      "121": { "start": { "line": 303, "column": 34 }, "end": { "line": 303, "column": 35 } },
      "122": { "start": { "line": 303, "column": 51 }, "end": { "line": 303, "column": 60 } },
      "123": { "start": { "line": 304, "column": 32 }, "end": { "line": 304, "column": 47 } },
      "124": { "start": { "line": 305, "column": 24 }, "end": { "line": 305, "column": 35 } },
      "125": { "start": { "line": 308, "column": 16 }, "end": { "line": 311, "column": 19 } },
      "126": { "start": { "line": 316, "column": 0 }, "end": { "line": 316, "column": 25 } }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": { "start": { "line": 2, "column": 56 }, "end": { "line": 2, "column": 57 } },
        "loc": { "start": { "line": 2, "column": 71 }, "end": { "line": 4, "column": 1 } },
        "line": 2
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": { "start": { "line": 15, "column": 30 }, "end": { "line": 15, "column": 31 } },
        "loc": { "start": { "line": 15, "column": 50 }, "end": { "line": 34, "column": 1 } },
        "line": 15
      },
      "2": {
        "name": "(anonymous_2)",
        "decl": { "start": { "line": 16, "column": 72 }, "end": { "line": 16, "column": 73 } },
        "loc": { "start": { "line": 16, "column": 95 }, "end": { "line": 33, "column": 5 } },
        "line": 16
      },
      "3": {
        "name": "(anonymous_3)",
        "decl": { "start": { "line": 37, "column": 27 }, "end": { "line": 37, "column": 28 } },
        "loc": { "start": { "line": 37, "column": 47 }, "end": { "line": 58, "column": 1 } },
        "line": 37
      },
      "4": {
        "name": "(anonymous_4)",
        "decl": { "start": { "line": 39, "column": 82 }, "end": { "line": 39, "column": 83 } },
        "loc": { "start": { "line": 39, "column": 105 }, "end": { "line": 57, "column": 5 } },
        "line": 39
      },
      "5": {
        "name": "(anonymous_5)",
        "decl": { "start": { "line": 61, "column": 30 }, "end": { "line": 61, "column": 31 } },
        "loc": { "start": { "line": 61, "column": 50 }, "end": { "line": 66, "column": 1 } },
        "line": 61
      },
      "6": {
        "name": "(anonymous_6)",
        "decl": { "start": { "line": 63, "column": 85 }, "end": { "line": 63, "column": 86 } },
        "loc": { "start": { "line": 63, "column": 100 }, "end": { "line": 65, "column": 5 } },
        "line": 63
      },
      "7": {
        "name": "(anonymous_7)",
        "decl": { "start": { "line": 69, "column": 17 }, "end": { "line": 69, "column": 18 } },
        "loc": { "start": { "line": 69, "column": 37 }, "end": { "line": 165, "column": 1 } },
        "line": 69
      },
      "8": {
        "name": "(anonymous_8)",
        "decl": { "start": { "line": 88, "column": 7 }, "end": { "line": 88, "column": 8 } },
        "loc": { "start": { "line": 88, "column": 22 }, "end": { "line": 164, "column": 5 } },
        "line": 88
      },
      "9": {
        "name": "(anonymous_9)",
        "decl": { "start": { "line": 94, "column": 129 }, "end": { "line": 94, "column": 130 } },
        "loc": { "start": { "line": 94, "column": 152 }, "end": { "line": 162, "column": 13 } },
        "line": 94
      },
      "10": {
        "name": "(anonymous_10)",
        "decl": { "start": { "line": 109, "column": 35 }, "end": { "line": 109, "column": 36 } },
        "loc": { "start": { "line": 109, "column": 56 }, "end": { "line": 113, "column": 33 } },
        "line": 109
      },
      "11": {
        "name": "(anonymous_11)",
        "decl": { "start": { "line": 168, "column": 27 }, "end": { "line": 168, "column": 28 } },
        "loc": { "start": { "line": 168, "column": 47 }, "end": { "line": 196, "column": 1 } },
        "line": 168
      },
      "12": {
        "name": "(anonymous_12)",
        "decl": { "start": { "line": 171, "column": 82 }, "end": { "line": 171, "column": 83 } },
        "loc": { "start": { "line": 171, "column": 105 }, "end": { "line": 195, "column": 5 } },
        "line": 171
      },
      "13": {
        "name": "(anonymous_13)",
        "decl": { "start": { "line": 188, "column": 15 }, "end": { "line": 188, "column": 16 } },
        "loc": { "start": { "line": 188, "column": 31 }, "end": { "line": 190, "column": 13 } },
        "line": 188
      },
      "14": {
        "name": "(anonymous_14)",
        "decl": { "start": { "line": 199, "column": 41 }, "end": { "line": 199, "column": 42 } },
        "loc": { "start": { "line": 199, "column": 61 }, "end": { "line": 272, "column": 1 } },
        "line": 199
      },
      "15": {
        "name": "(anonymous_15)",
        "decl": { "start": { "line": 201, "column": 90 }, "end": { "line": 201, "column": 91 } },
        "loc": { "start": { "line": 201, "column": 105 }, "end": { "line": 271, "column": 5 } },
        "line": 201
      },
      "16": {
        "name": "(anonymous_16)",
        "decl": { "start": { "line": 208, "column": 129 }, "end": { "line": 208, "column": 130 } },
        "loc": { "start": { "line": 208, "column": 153 }, "end": { "line": 269, "column": 13 } },
        "line": 208
      },
      "17": {
        "name": "(anonymous_17)",
        "decl": { "start": { "line": 223, "column": 35 }, "end": { "line": 223, "column": 36 } },
        "loc": { "start": { "line": 223, "column": 56 }, "end": { "line": 227, "column": 33 } },
        "line": 223
      },
      "18": {
        "name": "(anonymous_18)",
        "decl": { "start": { "line": 234, "column": 35 }, "end": { "line": 234, "column": 36 } },
        "loc": { "start": { "line": 234, "column": 56 }, "end": { "line": 238, "column": 33 } },
        "line": 234
      },
      "19": {
        "name": "(anonymous_19)",
        "decl": { "start": { "line": 245, "column": 35 }, "end": { "line": 245, "column": 36 } },
        "loc": { "start": { "line": 245, "column": 56 }, "end": { "line": 249, "column": 33 } },
        "line": 245
      },
      "20": {
        "name": "(anonymous_20)",
        "decl": { "start": { "line": 256, "column": 35 }, "end": { "line": 256, "column": 36 } },
        "loc": { "start": { "line": 256, "column": 56 }, "end": { "line": 260, "column": 33 } },
        "line": 256
      },
      "21": {
        "name": "(anonymous_21)",
        "decl": { "start": { "line": 275, "column": 41 }, "end": { "line": 275, "column": 42 } },
        "loc": { "start": { "line": 275, "column": 61 }, "end": { "line": 315, "column": 1 } },
        "line": 275
      },
      "22": {
        "name": "(anonymous_22)",
        "decl": { "start": { "line": 277, "column": 90 }, "end": { "line": 277, "column": 91 } },
        "loc": { "start": { "line": 277, "column": 105 }, "end": { "line": 314, "column": 5 } },
        "line": 277
      },
      "23": {
        "name": "(anonymous_23)",
        "decl": { "start": { "line": 284, "column": 129 }, "end": { "line": 284, "column": 130 } },
        "loc": { "start": { "line": 284, "column": 153 }, "end": { "line": 312, "column": 13 } },
        "line": 284
      },
      "24": {
        "name": "(anonymous_24)",
        "decl": { "start": { "line": 290, "column": 34 }, "end": { "line": 290, "column": 35 } },
        "loc": { "start": { "line": 290, "column": 47 }, "end": { "line": 302, "column": 21 } },
        "line": 290
      },
      "25": {
        "name": "(anonymous_25)",
        "decl": { "start": { "line": 297, "column": 27 }, "end": { "line": 297, "column": 28 } },
        "loc": { "start": { "line": 297, "column": 48 }, "end": { "line": 301, "column": 25 } },
        "line": 297
      }
    },
    "branchMap": {
      "0": {
        "loc": { "start": { "line": 2, "column": 22 }, "end": { "line": 4, "column": 1 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 2, "column": 23 }, "end": { "line": 2, "column": 27 } },
          { "start": { "line": 2, "column": 31 }, "end": { "line": 2, "column": 51 } },
          { "start": { "line": 2, "column": 56 }, "end": { "line": 4, "column": 1 } }
        ],
        "line": 2
      },
      "1": {
        "loc": { "start": { "line": 3, "column": 11 }, "end": { "line": 3, "column": 61 } },
        "type": "cond-expr",
        "locations": [
          { "start": { "line": 3, "column": 37 }, "end": { "line": 3, "column": 40 } },
          { "start": { "line": 3, "column": 43 }, "end": { "line": 3, "column": 61 } }
        ],
        "line": 3
      },
      "2": {
        "loc": { "start": { "line": 3, "column": 12 }, "end": { "line": 3, "column": 33 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 3, "column": 12 }, "end": { "line": 3, "column": 15 } },
          { "start": { "line": 3, "column": 19 }, "end": { "line": 3, "column": 33 } }
        ],
        "line": 3
      },
      "3": {
        "loc": { "start": { "line": 17, "column": 8 }, "end": { "line": 32, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 17, "column": 8 }, "end": { "line": 32, "column": 9 } },
          { "start": { "line": 17, "column": 8 }, "end": { "line": 32, "column": 9 } }
        ],
        "line": 17
      },
      "4": {
        "loc": { "start": { "line": 40, "column": 8 }, "end": { "line": 56, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 40, "column": 8 }, "end": { "line": 56, "column": 9 } },
          { "start": { "line": 40, "column": 8 }, "end": { "line": 56, "column": 9 } }
        ],
        "line": 40
      },
      "5": {
        "loc": { "start": { "line": 43, "column": 13 }, "end": { "line": 56, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 43, "column": 13 }, "end": { "line": 56, "column": 9 } },
          { "start": { "line": 43, "column": 13 }, "end": { "line": 56, "column": 9 } }
        ],
        "line": 43
      },
      "6": {
        "loc": { "start": { "line": 71, "column": 4 }, "end": { "line": 76, "column": 5 } },
        "type": "if",
        "locations": [
          { "start": { "line": 71, "column": 4 }, "end": { "line": 76, "column": 5 } },
          { "start": { "line": 71, "column": 4 }, "end": { "line": 76, "column": 5 } }
        ],
        "line": 71
      },
      "7": {
        "loc": { "start": { "line": 78, "column": 8 }, "end": { "line": 78, "column": 40 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 78, "column": 8 }, "end": { "line": 78, "column": 34 } },
          { "start": { "line": 78, "column": 38 }, "end": { "line": 78, "column": 40 } }
        ],
        "line": 78
      },
      "8": {
        "loc": { "start": { "line": 79, "column": 8 }, "end": { "line": 79, "column": 42 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 79, "column": 8 }, "end": { "line": 79, "column": 36 } },
          { "start": { "line": 79, "column": 40 }, "end": { "line": 79, "column": 42 } }
        ],
        "line": 79
      },
      "9": {
        "loc": { "start": { "line": 80, "column": 8 }, "end": { "line": 80, "column": 41 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 80, "column": 8 }, "end": { "line": 80, "column": 35 } },
          { "start": { "line": 80, "column": 39 }, "end": { "line": 80, "column": 41 } }
        ],
        "line": 80
      },
      "10": {
        "loc": { "start": { "line": 81, "column": 8 }, "end": { "line": 81, "column": 40 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 81, "column": 8 }, "end": { "line": 81, "column": 34 } },
          { "start": { "line": 81, "column": 38 }, "end": { "line": 81, "column": 40 } }
        ],
        "line": 81
      },
      "11": {
        "loc": { "start": { "line": 82, "column": 8 }, "end": { "line": 82, "column": 38 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 82, "column": 8 }, "end": { "line": 82, "column": 32 } },
          { "start": { "line": 82, "column": 36 }, "end": { "line": 82, "column": 38 } }
        ],
        "line": 82
      },
      "12": {
        "loc": { "start": { "line": 83, "column": 8 }, "end": { "line": 83, "column": 37 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 83, "column": 8 }, "end": { "line": 83, "column": 31 } },
          { "start": { "line": 83, "column": 35 }, "end": { "line": 83, "column": 37 } }
        ],
        "line": 83
      },
      "13": {
        "loc": { "start": { "line": 84, "column": 8 }, "end": { "line": 84, "column": 64 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 84, "column": 8 }, "end": { "line": 84, "column": 56 } },
          { "start": { "line": 84, "column": 60 }, "end": { "line": 84, "column": 64 } }
        ],
        "line": 84
      },
      "14": {
        "loc": { "start": { "line": 85, "column": 8 }, "end": { "line": 85, "column": 58 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 85, "column": 8 }, "end": { "line": 85, "column": 50 } },
          { "start": { "line": 85, "column": 54 }, "end": { "line": 85, "column": 58 } }
        ],
        "line": 85
      },
      "15": {
        "loc": { "start": { "line": 86, "column": 8 }, "end": { "line": 86, "column": 56 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 86, "column": 8 }, "end": { "line": 86, "column": 48 } },
          { "start": { "line": 86, "column": 52 }, "end": { "line": 86, "column": 56 } }
        ],
        "line": 86
      },
      "16": {
        "loc": { "start": { "line": 89, "column": 8 }, "end": { "line": 163, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 89, "column": 8 }, "end": { "line": 163, "column": 9 } },
          { "start": { "line": 89, "column": 8 }, "end": { "line": 163, "column": 9 } }
        ],
        "line": 89
      },
      "17": {
        "loc": { "start": { "line": 95, "column": 16 }, "end": { "line": 161, "column": 17 } },
        "type": "if",
        "locations": [
          { "start": { "line": 95, "column": 16 }, "end": { "line": 161, "column": 17 } },
          { "start": { "line": 95, "column": 16 }, "end": { "line": 161, "column": 17 } }
        ],
        "line": 95
      },
      "18": {
        "loc": { "start": { "line": 103, "column": 24 }, "end": { "line": 148, "column": 25 } },
        "type": "switch",
        "locations": [
          { "start": { "line": 104, "column": 28 }, "end": { "line": 114, "column": 38 } },
          { "start": { "line": 115, "column": 28 }, "end": { "line": 125, "column": 38 } },
          { "start": { "line": 126, "column": 28 }, "end": { "line": 136, "column": 38 } },
          { "start": { "line": 137, "column": 28 }, "end": { "line": 147, "column": 38 } }
        ],
        "line": 103
      },
      "19": {
        "loc": { "start": { "line": 110, "column": 36 }, "end": { "line": 112, "column": 37 } },
        "type": "if",
        "locations": [
          { "start": { "line": 110, "column": 36 }, "end": { "line": 112, "column": 37 } },
          { "start": { "line": 110, "column": 36 }, "end": { "line": 112, "column": 37 } }
        ],
        "line": 110
      },
      "20": {
        "loc": { "start": { "line": 172, "column": 8 }, "end": { "line": 194, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 172, "column": 8 }, "end": { "line": 194, "column": 9 } },
          { "start": { "line": 172, "column": 8 }, "end": { "line": 194, "column": 9 } }
        ],
        "line": 172
      },
      "21": {
        "loc": { "start": { "line": 175, "column": 13 }, "end": { "line": 194, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 175, "column": 13 }, "end": { "line": 194, "column": 9 } },
          { "start": { "line": 175, "column": 13 }, "end": { "line": 194, "column": 9 } }
        ],
        "line": 175
      },
      "22": {
        "loc": { "start": { "line": 178, "column": 16 }, "end": { "line": 178, "column": 72 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 178, "column": 16 }, "end": { "line": 178, "column": 44 } },
          { "start": { "line": 178, "column": 48 }, "end": { "line": 178, "column": 72 } }
        ],
        "line": 178
      },
      "23": {
        "loc": { "start": { "line": 179, "column": 16 }, "end": { "line": 179, "column": 70 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 179, "column": 16 }, "end": { "line": 179, "column": 43 } },
          { "start": { "line": 179, "column": 47 }, "end": { "line": 179, "column": 70 } }
        ],
        "line": 179
      },
      "24": {
        "loc": { "start": { "line": 180, "column": 16 }, "end": { "line": 180, "column": 68 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 180, "column": 16 }, "end": { "line": 180, "column": 42 } },
          { "start": { "line": 180, "column": 46 }, "end": { "line": 180, "column": 68 } }
        ],
        "line": 180
      },
      "25": {
        "loc": { "start": { "line": 181, "column": 16 }, "end": { "line": 181, "column": 64 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 181, "column": 16 }, "end": { "line": 181, "column": 40 } },
          { "start": { "line": 181, "column": 44 }, "end": { "line": 181, "column": 64 } }
        ],
        "line": 181
      },
      "26": {
        "loc": { "start": { "line": 182, "column": 16 }, "end": { "line": 182, "column": 62 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 182, "column": 16 }, "end": { "line": 182, "column": 39 } },
          { "start": { "line": 182, "column": 43 }, "end": { "line": 182, "column": 62 } }
        ],
        "line": 182
      },
      "27": {
        "loc": { "start": { "line": 183, "column": 16 }, "end": { "line": 183, "column": 96 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 183, "column": 16 }, "end": { "line": 183, "column": 64 } },
          { "start": { "line": 183, "column": 68 }, "end": { "line": 183, "column": 96 } }
        ],
        "line": 183
      },
      "28": {
        "loc": { "start": { "line": 184, "column": 16 }, "end": { "line": 184, "column": 84 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 184, "column": 16 }, "end": { "line": 184, "column": 58 } },
          { "start": { "line": 184, "column": 62 }, "end": { "line": 184, "column": 84 } }
        ],
        "line": 184
      },
      "29": {
        "loc": { "start": { "line": 185, "column": 16 }, "end": { "line": 185, "column": 64 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 185, "column": 16 }, "end": { "line": 185, "column": 40 } },
          { "start": { "line": 185, "column": 44 }, "end": { "line": 185, "column": 64 } }
        ],
        "line": 185
      },
      "30": {
        "loc": { "start": { "line": 186, "column": 16 }, "end": { "line": 186, "column": 60 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 186, "column": 16 }, "end": { "line": 186, "column": 38 } },
          { "start": { "line": 186, "column": 42 }, "end": { "line": 186, "column": 60 } }
        ],
        "line": 186
      },
      "31": {
        "loc": { "start": { "line": 203, "column": 8 }, "end": { "line": 270, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 203, "column": 8 }, "end": { "line": 270, "column": 9 } },
          { "start": { "line": 203, "column": 8 }, "end": { "line": 270, "column": 9 } }
        ],
        "line": 203
      },
      "32": {
        "loc": { "start": { "line": 209, "column": 16 }, "end": { "line": 264, "column": 17 } },
        "type": "if",
        "locations": [
          { "start": { "line": 209, "column": 16 }, "end": { "line": 264, "column": 17 } },
          { "start": { "line": 209, "column": 16 }, "end": { "line": 264, "column": 17 } }
        ],
        "line": 209
      },
      "33": {
        "loc": { "start": { "line": 217, "column": 24 }, "end": { "line": 262, "column": 25 } },
        "type": "switch",
        "locations": [
          { "start": { "line": 218, "column": 28 }, "end": { "line": 228, "column": 38 } },
          { "start": { "line": 229, "column": 28 }, "end": { "line": 239, "column": 38 } },
          { "start": { "line": 240, "column": 28 }, "end": { "line": 250, "column": 38 } },
          { "start": { "line": 251, "column": 28 }, "end": { "line": 261, "column": 38 } }
        ],
        "line": 217
      },
      "34": {
        "loc": { "start": { "line": 224, "column": 36 }, "end": { "line": 226, "column": 37 } },
        "type": "if",
        "locations": [
          { "start": { "line": 224, "column": 36 }, "end": { "line": 226, "column": 37 } },
          { "start": { "line": 224, "column": 36 }, "end": { "line": 226, "column": 37 } }
        ],
        "line": 224
      },
      "35": {
        "loc": { "start": { "line": 235, "column": 36 }, "end": { "line": 237, "column": 37 } },
        "type": "if",
        "locations": [
          { "start": { "line": 235, "column": 36 }, "end": { "line": 237, "column": 37 } },
          { "start": { "line": 235, "column": 36 }, "end": { "line": 237, "column": 37 } }
        ],
        "line": 235
      },
      "36": {
        "loc": { "start": { "line": 246, "column": 36 }, "end": { "line": 248, "column": 37 } },
        "type": "if",
        "locations": [
          { "start": { "line": 246, "column": 36 }, "end": { "line": 248, "column": 37 } },
          { "start": { "line": 246, "column": 36 }, "end": { "line": 248, "column": 37 } }
        ],
        "line": 246
      },
      "37": {
        "loc": { "start": { "line": 257, "column": 36 }, "end": { "line": 259, "column": 37 } },
        "type": "if",
        "locations": [
          { "start": { "line": 257, "column": 36 }, "end": { "line": 259, "column": 37 } },
          { "start": { "line": 257, "column": 36 }, "end": { "line": 259, "column": 37 } }
        ],
        "line": 257
      },
      "38": {
        "loc": { "start": { "line": 279, "column": 8 }, "end": { "line": 313, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 279, "column": 8 }, "end": { "line": 313, "column": 9 } },
          { "start": { "line": 279, "column": 8 }, "end": { "line": 313, "column": 9 } }
        ],
        "line": 279
      },
      "39": {
        "loc": { "start": { "line": 285, "column": 16 }, "end": { "line": 307, "column": 17 } },
        "type": "if",
        "locations": [
          { "start": { "line": 285, "column": 16 }, "end": { "line": 307, "column": 17 } },
          { "start": { "line": 285, "column": 16 }, "end": { "line": 307, "column": 17 } }
        ],
        "line": 285
      },
      "40": {
        "loc": { "start": { "line": 298, "column": 28 }, "end": { "line": 300, "column": 29 } },
        "type": "if",
        "locations": [
          { "start": { "line": 298, "column": 28 }, "end": { "line": 300, "column": 29 } },
          { "start": { "line": 298, "column": 28 }, "end": { "line": 300, "column": 29 } }
        ],
        "line": 298
      }
    },
    "s": {
      "0": 1,
      "1": 4,
      "2": 1,
      "3": 1,
      "4": 1,
      "5": 1,
      "6": 1,
      "7": 1,
      "8": 1,
      "9": 1,
      "10": 1,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 1,
      "21": 2,
      "22": 2,
      "23": 2,
      "24": 0,
      "25": 2,
      "26": 1,
      "27": 1,
      "28": 1,
      "29": 1,
      "30": 1,
      "31": 1,
      "32": 1,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 1,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 1,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 1,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 1,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 1
    },
    "f": {
      "0": 4,
      "1": 0,
      "2": 0,
      "3": 2,
      "4": 2,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    "b": {
      "0": [1, 1, 1],
      "1": [3, 1],
      "2": [4, 4],
      "3": [0, 0],
      "4": [0, 2],
      "5": [1, 1],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0, 0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0, 0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0]
    },
    "inputSourceMap": {
      "version": 3,
      "file": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\projectApi.ts",
      "sources": ["F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\projectApi.ts"],
      "names": [],
      "mappings": "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",
      "sourcesContent": [
        "import config from '../config';\r\nimport express, { Response, response } from 'express';\r\nimport $sql from './sqlMap';\r\nimport { ResultCommon, GetProjectResult, ProjectList } from 'achieve-it-contract';\r\nimport { commonDeleteHandler, notFoundErrorHandler, mysqlErrorHandler, commomUpdateHandler } from '../util';\r\nimport { conn } from '../mysqlPool';\r\nimport email from '../email';\r\n\r\nconst router = express.Router();\r\n\r\n\r\n  // get /project/getAllProjects\r\n  // 获取所有项目的列表\r\n  router.get('/getAllProjects', (req, res: Response<ProjectList>) => {\r\n    conn.query($sql.project.getAllProjects, [], (err, result) => {\r\n      if(err) {\r\n        mysqlErrorHandler(res, err);\r\n      } else {\r\n        for(let i in result) {\r\n          result[i].status = config.numberMap.projectStatus[result[i].status];\r\n          result[i].important_events = JSON.parse(result[i].important_events);\r\n          result[i].technology = JSON.parse(result[i].technology);\r\n          result[i].business = JSON.parse(result[i].business);\r\n        }\r\n        res.json({\r\n          project_list: result,\r\n          msg: 'success',\r\n          status: config.status.SUCCESS\r\n        })\r\n      }\r\n    })\r\n  })\r\n\r\n\r\n// get /project/:project_id\r\n// getProject\r\n\r\nrouter.get('/:project_id', (req, res: Response<GetProjectResult>) => {\r\n  const project_id = req.params.project_id;\r\n\r\n  conn.query($sql.project.getProjectById, [project_id], (err, result) => {\r\n    if (err) {\r\n      mysqlErrorHandler(res, err);\r\n    } else if (result.length == 1) {\r\n      result[0].status = config.numberMap.projectStatus[result[0].status];\r\n      result[0].important_events = JSON.parse(result[0].important_events);\r\n      result[0].technology = JSON.parse(result[0].technology);\r\n      result[0].business = JSON.parse(result[0].business);\r\n      res.json({\r\n        project: result[0],\r\n        status: config.status.SUCCESS,\r\n        msg: 'success'\r\n      });\r\n    } else {\r\n      notFoundErrorHandler(res);\r\n    }\r\n  });\r\n});\r\n\r\n// delete /project/:project_id\r\n// deleteProject\r\n\r\nrouter.delete('/:project_id', (req, res: Response<ResultCommon>) => {\r\n  const project_id = req.params.project_id;\r\n  conn.query($sql.project.deleteProjectById, [project_id], err => {\r\n    commonDeleteHandler(res, err);\r\n  });\r\n});\r\n\r\n// post /project\r\n// insertProject\r\nrouter.post('/', (req, res: Response<ResultCommon>) => {\r\n  const project_details = req.body;\r\n  if (!project_details.project_id) {\r\n    return res.json({\r\n      status: config.status.ERROR,\r\n      msg: '项目id不能为空'\r\n    });\r\n  }\r\n  conn.query(\r\n    $sql.project.insertProject,\r\n    [\r\n      project_details.project_id || '',\r\n      project_details.project_name || '',\r\n      project_details.client_info || '',\r\n      project_details.start_time || '',\r\n      project_details.end_time || '',\r\n      project_details.manager || '',\r\n      JSON.stringify(project_details.important_events) || '[]',\r\n      JSON.stringify(project_details.technology) || '[]',\r\n      JSON.stringify(project_details.business) || '[]',\r\n      project_details.status\r\n    ],\r\n    err => {\r\n      if (err) {\r\n        mysqlErrorHandler(res, err);\r\n      } else {\r\n        // 向相关者发送邮件(1-项目上级，3-EPGLeader，4-QA Manager，2-配置管理员)\r\n        conn.query(\"select job, email from member where job = ? or job = ? or job = ? or job = ?\", [1, 2, 3, 4], (err, result) => {\r\n          if (err) {\r\n            mysqlErrorHandler(res, err);\r\n          } else {\r\n            const emailList = result;\r\n            for (const e of emailList) {\r\n              const subject = `项目立项 to: ${config.numberMap.memberJob[e.job]}`; \r\n              \r\n              switch (e.job) {\r\n                case 1:\r\n                  email.sendEmail({\r\n                    to: e.email,\r\n                    subject,\r\n                    html: `${JSON.stringify(project_details)}<br/><a href=\"http://localhost:3000/project/acceptProject/${project_details.project_id}\">批准立项</a>\r\n                    &nbsp;&nbsp;<a href=\"http://localhost:3000/project/refuseProject/${project_details.project_id}\">不批准立项</a>`\r\n                  }, (err, info) => {\r\n                    if (err) {\r\n                      console.log('send to 项目上级 failed')\r\n                    }\r\n                  })\r\n                  break;\r\n                case 2:\r\n                  // email.sendEmail({\r\n                  //   to: e.email,\r\n                  //   subject,\r\n                  //   html: `${JSON.stringify(project_details)}<br/>项目已立项，待批准后请为项目建立基本的配置库`\r\n                  // }, (err, info) => {\r\n                  //   if (err) {\r\n                  //     console.log('send to 配置管理员 failed')\r\n                  //   }\r\n                  // })\r\n                  break;\r\n                case 3:\r\n                  // email.sendEmail({\r\n                  //   to: e.email,\r\n                  //   subject,\r\n                  //   html: `${JSON.stringify(project_details)}<br/>项目已立项，待批准后请为项目分配EPG`\r\n                  // }, (err, info) => {\r\n                  //   if (err) {\r\n                  //     console.log('send to EPG Leader failed')\r\n                  //   }\r\n                  // })\r\n                  break;\r\n                case 4:\r\n                  // email.sendEmail({\r\n                  //   to: e.email,\r\n                  //   subject,\r\n                  //   html: `${JSON.stringify(project_details)}<br/>项目已立项，待批准后请为项目分配QA`\r\n                  // }, (err, info) => {\r\n                  //   if (err) {\r\n                  //     console.log('send to QA Manager failed')\r\n                  //   }\r\n                  // })\r\n                  break;\r\n              }\r\n              // email.sendEmail({\r\n              //   to: e.email,\r\n              //   subject: '项目立项 to: ' + config.numberMap.memberJob[e.job],\r\n              //   text: JSON.stringify(project_details),\r\n              //   html: e.job == 1 ? JSON.stringify(project_details) + \"<br/><a href=''>批准立项</a>&nbsp;&nbsp;<a href=''>不批准立项</a>\" : \"\"\r\n              // }, () => {})\r\n            }\r\n            console.log(emailList);\r\n            res.json({\r\n              status: config.status.SUCCESS,\r\n              msg: 'success'\r\n            })\r\n          }\r\n        })\r\n      }\r\n    }\r\n  );\r\n});\r\n\r\n// put /project/:project_id\r\n// updateProject\r\nrouter.put('/:project_id', (req, res: Response<ResultCommon>) => {\r\n  const project_id = req.params.project_id;\r\n  const project_details = req.body;\r\n\r\n  conn.query($sql.project.getProjectById, [project_id], (err, result) => {\r\n    if (err) {\r\n      mysqlErrorHandler(res, err);\r\n    } else if (result.length == 1) {\r\n      const old_project = result[0];\r\n      conn.query(\r\n        $sql.project.updateProjectById,\r\n        [\r\n          project_details.project_name || old_project.project_name,\r\n          project_details.client_info || old_project.client_info,\r\n          project_details.start_time || old_project.start_time,\r\n          project_details.end_time || old_project.end_time,\r\n          project_details.manager || old_project.manager,\r\n          JSON.stringify(project_details.important_events) || old_project.important_events,\r\n          JSON.stringify(project_details.technology) || old_project.technology,\r\n          project_details.business || old_project.business,\r\n          project_details.status || old_project.status,\r\n          project_id\r\n        ],\r\n        err2 => {\r\n          commomUpdateHandler(res, err2);\r\n        }\r\n      );\r\n    } else {\r\n      notFoundErrorHandler(res);\r\n    }\r\n  });\r\n});\r\n\r\n// get /project/acceptProject/:project_id\r\n// 批准立项\r\nrouter.get('/acceptProject/:project_id', (req, res: Response<ResultCommon>) => {\r\n  const project_id = req.params.project_id;\r\n  conn.query($sql.project.updateProjectStatus, [1, project_id], err => {\r\n    // commomUpdateHandler(res, err);\r\n    if (err) {\r\n      mysqlErrorHandler(res, err);\r\n    } else {\r\n      // 通知组织配置管理员，EPG Leader， QA Manager\r\n      conn.query(\"select job, email from member where job = ? or job = ? or job = ? or job = ?\", [0, 2, 3, 4], (err2, result) => {\r\n        if (err2) {\r\n          mysqlErrorHandler(res, err2);\r\n        } else {\r\n          const emailList = result;\r\n          for (const e of emailList) {\r\n            const subject = `[${project_id}]项目已立项 to: ${config.numberMap.memberJob[e.job]}`\r\n            switch (e.job) {\r\n              case 0:\r\n                email.sendEmail({\r\n                  to: e.email,\r\n                  subject,\r\n                  text: `[${project_id}]项目已立项, 请为项目分配人员和任务`\r\n                }, (err, info) => {\r\n                  if (err) {\r\n                    console.log(\"send to 组织配置管理员 failed\");\r\n                  }\r\n                })\r\n                break;\r\n              case 2:\r\n                email.sendEmail({\r\n                  to: e.email,\r\n                  subject,\r\n                  text: `[${project_id}]项目已立项, 请为项目建立基本的配置库`\r\n                }, (err, info) => {\r\n                  if (err) {\r\n                    console.log(\"send to 组织配置管理员 failed\");\r\n                  }\r\n                })\r\n                break;\r\n              case 3:\r\n                email.sendEmail({\r\n                  to: e.email,\r\n                  subject,\r\n                  text: `[${project_id}]项目已立项, 请为项目分配EPG`\r\n                }, (err, info) => {\r\n                  if (err) {\r\n                    console.log(\"send to EPG Leader failed\");\r\n                  }\r\n                })\r\n                break;\r\n              case 4:\r\n                email.sendEmail({\r\n                  to: e.email,\r\n                  subject,\r\n                  text: `[${project_id}]项目已立项, 请为项目分配QA`\r\n                }, (err, info) => {\r\n                  if (err) {\r\n                    console.log(\"send to QA Manager failed\");\r\n                  }\r\n                })\r\n                break;\r\n            }\r\n          }\r\n        }\r\n        res.json({\r\n          status: config.status.SUCCESS,\r\n          msg: 'success'\r\n        })\r\n      })\r\n    }\r\n  })\r\n})\r\n\r\n// get /project/refuseProject/:project_id\r\n// 不批准立项\r\nrouter.get('/refuseProject/:project_id', (req, res: Response<ResultCommon>) => {\r\n  const project_id = req.params.project_id;\r\n  conn.query($sql.project.updateProjectStatus, [2, project_id], err => {\r\n    // commomUpdateHandler(res, err);\r\n    if (err) {\r\n      mysqlErrorHandler(res, err);\r\n    } else {\r\n      // 通知组织配置管理员，EPG Leader， QA Manager\r\n      conn.query(\"select job, email from member where job = ? or job = ? or job = ? or job = ?\", [0, 2, 3, 4], (err2, result) => {\r\n        if (err2) {\r\n          mysqlErrorHandler(res, err2);\r\n        } else {\r\n          const emailList = result;\r\n          for (const e of emailList) {\r\n            const subject = `[${project_id}]项目已被驳回 to: ${config.numberMap.memberJob[e.job]}`\r\n            const text = \"如题\";\r\n            email.sendEmail({\r\n              to: e.email,\r\n              subject,\r\n              text\r\n            }, (err, info) => {\r\n              if (err) {\r\n                console.log(`send to ${config.numberMap.memberJob[e.job]} failed`);\r\n              }\r\n            })\r\n          }\r\n        }\r\n        res.json({\r\n          status: config.status.SUCCESS,\r\n          msg: 'success'\r\n        })\r\n      })\r\n    }\r\n  })\r\n})\r\n\r\n\r\n\r\nexport default router;\r\n"
      ]
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "aed37ba42901aeba7c9a2e448a142ce8c81e3ca6",
    "contentHash": "14526ae2c21ad7cb5792909400a4a10f35e54c8a14bece4f8d53a2fa685e6963"
  },
  "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\deviceApi.ts": {
    "path": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\deviceApi.ts",
    "statementMap": {
      "0": { "start": { "line": 2, "column": 22 }, "end": { "line": 4, "column": 1 } },
      "1": { "start": { "line": 3, "column": 4 }, "end": { "line": 3, "column": 62 } },
      "2": { "start": { "line": 5, "column": 0 }, "end": { "line": 5, "column": 62 } },
      "3": { "start": { "line": 6, "column": 15 }, "end": { "line": 6, "column": 52 } },
      "4": { "start": { "line": 7, "column": 16 }, "end": { "line": 7, "column": 51 } },
      "5": { "start": { "line": 8, "column": 15 }, "end": { "line": 8, "column": 51 } },
      "6": { "start": { "line": 9, "column": 13 }, "end": { "line": 9, "column": 31 } },
      "7": { "start": { "line": 10, "column": 18 }, "end": { "line": 10, "column": 41 } },
      "8": { "start": { "line": 11, "column": 13 }, "end": { "line": 11, "column": 39 } },
      "9": { "start": { "line": 14, "column": 0 }, "end": { "line": 32, "column": 3 } },
      "10": { "start": { "line": 15, "column": 20 }, "end": { "line": 15, "column": 40 } },
      "11": { "start": { "line": 16, "column": 4 }, "end": { "line": 31, "column": 7 } },
      "12": { "start": { "line": 17, "column": 8 }, "end": { "line": 30, "column": 9 } },
      "13": { "start": { "line": 18, "column": 12 }, "end": { "line": 18, "column": 47 } },
      "14": { "start": { "line": 20, "column": 13 }, "end": { "line": 30, "column": 9 } },
      "15": { "start": { "line": 21, "column": 12 }, "end": { "line": 21, "column": 103 } },
      "16": { "start": { "line": 22, "column": 12 }, "end": { "line": 26, "column": 15 } },
      "17": { "start": { "line": 29, "column": 12 }, "end": { "line": 29, "column": 45 } },
      "18": { "start": { "line": 35, "column": 0 }, "end": { "line": 56, "column": 3 } },
      "19": { "start": { "line": 36, "column": 25 }, "end": { "line": 36, "column": 33 } },
      "20": { "start": { "line": 37, "column": 20 }, "end": { "line": 37, "column": 40 } },
      "21": { "start": { "line": 38, "column": 4 }, "end": { "line": 55, "column": 7 } },
      "22": { "start": { "line": 39, "column": 8 }, "end": { "line": 54, "column": 9 } },
      "23": { "start": { "line": 40, "column": 12 }, "end": { "line": 40, "column": 47 } },
      "24": { "start": { "line": 42, "column": 13 }, "end": { "line": 54, "column": 9 } },
      "25": { "start": { "line": 43, "column": 29 }, "end": { "line": 43, "column": 38 } },
      "26": { "start": { "line": 44, "column": 12 }, "end": { "line": 50, "column": 15 } },
      "27": { "start": { "line": 49, "column": 16 }, "end": { "line": 49, "column": 54 } },
      "28": { "start": { "line": 53, "column": 12 }, "end": { "line": 53, "column": 45 } },
      "29": { "start": { "line": 59, "column": 0 }, "end": { "line": 64, "column": 3 } },
      "30": { "start": { "line": 60, "column": 25 }, "end": { "line": 60, "column": 33 } },
      "31": { "start": { "line": 61, "column": 4 }, "end": { "line": 63, "column": 7 } },
      "32": { "start": { "line": 62, "column": 8 }, "end": { "line": 62, "column": 45 } },
      "33": { "start": { "line": 67, "column": 0 }, "end": { "line": 72, "column": 3 } },
      "34": { "start": { "line": 68, "column": 20 }, "end": { "line": 68, "column": 40 } },
      "35": { "start": { "line": 69, "column": 4 }, "end": { "line": 71, "column": 7 } },
      "36": { "start": { "line": 70, "column": 8 }, "end": { "line": 70, "column": 45 } },
      "37": { "start": { "line": 93, "column": 0 }, "end": { "line": 93, "column": 25 } }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": { "start": { "line": 2, "column": 56 }, "end": { "line": 2, "column": 57 } },
        "loc": { "start": { "line": 2, "column": 71 }, "end": { "line": 4, "column": 1 } },
        "line": 2
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": { "start": { "line": 14, "column": 26 }, "end": { "line": 14, "column": 27 } },
        "loc": { "start": { "line": 14, "column": 46 }, "end": { "line": 32, "column": 1 } },
        "line": 14
      },
      "2": {
        "name": "(anonymous_2)",
        "decl": { "start": { "line": 16, "column": 79 }, "end": { "line": 16, "column": 80 } },
        "loc": { "start": { "line": 16, "column": 102 }, "end": { "line": 31, "column": 5 } },
        "line": 16
      },
      "3": {
        "name": "(anonymous_3)",
        "decl": { "start": { "line": 35, "column": 26 }, "end": { "line": 35, "column": 27 } },
        "loc": { "start": { "line": 35, "column": 46 }, "end": { "line": 56, "column": 1 } },
        "line": 35
      },
      "4": {
        "name": "(anonymous_4)",
        "decl": { "start": { "line": 38, "column": 79 }, "end": { "line": 38, "column": 80 } },
        "loc": { "start": { "line": 38, "column": 102 }, "end": { "line": 55, "column": 5 } },
        "line": 38
      },
      "5": {
        "name": "(anonymous_5)",
        "decl": { "start": { "line": 48, "column": 15 }, "end": { "line": 48, "column": 16 } },
        "loc": { "start": { "line": 48, "column": 31 }, "end": { "line": 50, "column": 13 } },
        "line": 48
      },
      "6": {
        "name": "(anonymous_6)",
        "decl": { "start": { "line": 59, "column": 17 }, "end": { "line": 59, "column": 18 } },
        "loc": { "start": { "line": 59, "column": 37 }, "end": { "line": 64, "column": 1 } },
        "line": 59
      },
      "7": {
        "name": "(anonymous_7)",
        "decl": { "start": { "line": 61, "column": 125 }, "end": { "line": 61, "column": 126 } },
        "loc": { "start": { "line": 61, "column": 140 }, "end": { "line": 63, "column": 5 } },
        "line": 61
      },
      "8": {
        "name": "(anonymous_8)",
        "decl": { "start": { "line": 67, "column": 29 }, "end": { "line": 67, "column": 30 } },
        "loc": { "start": { "line": 67, "column": 49 }, "end": { "line": 72, "column": 1 } },
        "line": 67
      },
      "9": {
        "name": "(anonymous_9)",
        "decl": { "start": { "line": 69, "column": 82 }, "end": { "line": 69, "column": 83 } },
        "loc": { "start": { "line": 69, "column": 97 }, "end": { "line": 71, "column": 5 } },
        "line": 69
      }
    },
    "branchMap": {
      "0": {
        "loc": { "start": { "line": 2, "column": 22 }, "end": { "line": 4, "column": 1 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 2, "column": 23 }, "end": { "line": 2, "column": 27 } },
          { "start": { "line": 2, "column": 31 }, "end": { "line": 2, "column": 51 } },
          { "start": { "line": 2, "column": 56 }, "end": { "line": 4, "column": 1 } }
        ],
        "line": 2
      },
      "1": {
        "loc": { "start": { "line": 3, "column": 11 }, "end": { "line": 3, "column": 61 } },
        "type": "cond-expr",
        "locations": [
          { "start": { "line": 3, "column": 37 }, "end": { "line": 3, "column": 40 } },
          { "start": { "line": 3, "column": 43 }, "end": { "line": 3, "column": 61 } }
        ],
        "line": 3
      },
      "2": {
        "loc": { "start": { "line": 3, "column": 12 }, "end": { "line": 3, "column": 33 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 3, "column": 12 }, "end": { "line": 3, "column": 15 } },
          { "start": { "line": 3, "column": 19 }, "end": { "line": 3, "column": 33 } }
        ],
        "line": 3
      },
      "3": {
        "loc": { "start": { "line": 17, "column": 8 }, "end": { "line": 30, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 17, "column": 8 }, "end": { "line": 30, "column": 9 } },
          { "start": { "line": 17, "column": 8 }, "end": { "line": 30, "column": 9 } }
        ],
        "line": 17
      },
      "4": {
        "loc": { "start": { "line": 20, "column": 13 }, "end": { "line": 30, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 20, "column": 13 }, "end": { "line": 30, "column": 9 } },
          { "start": { "line": 20, "column": 13 }, "end": { "line": 30, "column": 9 } }
        ],
        "line": 20
      },
      "5": {
        "loc": { "start": { "line": 39, "column": 8 }, "end": { "line": 54, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 39, "column": 8 }, "end": { "line": 54, "column": 9 } },
          { "start": { "line": 39, "column": 8 }, "end": { "line": 54, "column": 9 } }
        ],
        "line": 39
      },
      "6": {
        "loc": { "start": { "line": 42, "column": 13 }, "end": { "line": 54, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 42, "column": 13 }, "end": { "line": 54, "column": 9 } },
          { "start": { "line": 42, "column": 13 }, "end": { "line": 54, "column": 9 } }
        ],
        "line": 42
      },
      "7": {
        "loc": { "start": { "line": 45, "column": 16 }, "end": { "line": 45, "column": 68 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 45, "column": 16 }, "end": { "line": 45, "column": 42 } },
          { "start": { "line": 45, "column": 46 }, "end": { "line": 45, "column": 68 } }
        ],
        "line": 45
      },
      "8": {
        "loc": { "start": { "line": 46, "column": 16 }, "end": { "line": 46, "column": 72 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 46, "column": 16 }, "end": { "line": 46, "column": 44 } },
          { "start": { "line": 46, "column": 48 }, "end": { "line": 46, "column": 72 } }
        ],
        "line": 46
      }
    },
    "s": {
      "0": 1,
      "1": 3,
      "2": 1,
      "3": 1,
      "4": 1,
      "5": 1,
      "6": 1,
      "7": 1,
      "8": 1,
      "9": 1,
      "10": 2,
      "11": 2,
      "12": 2,
      "13": 0,
      "14": 2,
      "15": 1,
      "16": 1,
      "17": 1,
      "18": 1,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 1,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 1,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 1
    },
    "f": { "0": 3, "1": 2, "2": 2, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0 },
    "b": {
      "0": [1, 1, 1],
      "1": [2, 1],
      "2": [3, 3],
      "3": [0, 2],
      "4": [1, 1],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    "inputSourceMap": {
      "version": 3,
      "file": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\deviceApi.ts",
      "sources": ["F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\deviceApi.ts"],
      "names": [],
      "mappings": "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",
      "sourcesContent": [
        "import config from '../config';\r\nimport express, { Response } from 'express';\r\nimport $sql from './sqlMap';\r\nimport { ResultCommon, GetDeviceResult, GetProjectDeviceListResult } from 'achieve-it-contract';\r\nimport {\r\n  mysqlErrorHandler,\r\n  notFoundErrorHandler,\r\n  commomUpdateHandler,\r\n  commomInsertHandler,\r\n  commonDeleteHandler\r\n} from '../util';\r\nimport { conn } from '../mysqlPool';\r\nconst router = express.Router();\r\n\r\n// get /device/:device_id\r\n// getDevice\r\nrouter.get('/:device_id', (req, res: Response<GetDeviceResult>) => {\r\n  const device_id = req.params.device_id;\r\n  conn.query($sql.device.getDeviceById, [device_id], (err, result) => {\r\n    if (err) {\r\n      mysqlErrorHandler(res, err);\r\n    } else if (result.length == 1) {\r\n      result[0].device_status = config.numberMap.deviceStatus[result[0].device_status];\r\n      res.json({\r\n        device: result[0],\r\n        status: config.status.SUCCESS,\r\n        msg: 'success'\r\n      });\r\n    } else {\r\n      notFoundErrorHandler(res);\r\n    }\r\n  });\r\n});\r\n\r\n// put /device/:device_id\r\n// updateDevice\r\nrouter.put('/:device_id', (req, res: Response<ResultCommon>) => {\r\n  const device_details = req.body;\r\n  const device_id = req.params.device_id;\r\n\r\n  conn.query($sql.device.getDeviceById, [device_id], (err, result) => {\r\n    if (err) {\r\n      mysqlErrorHandler(res, err);\r\n    } else if (result.length == 1) {\r\n      const old_device = result[0];\r\n      conn.query(\r\n        $sql.device.updateDeviceById,\r\n        [\r\n          device_details.device_name || old_device.device_name,\r\n          device_details.device_status || old_device.device_status,\r\n          device_id\r\n        ],\r\n        err2 => {\r\n          commomUpdateHandler(res, err2);\r\n        }\r\n      );\r\n    } else {\r\n      notFoundErrorHandler(res);\r\n    }\r\n  });\r\n});\r\n\r\n// post /device\r\n// insertDevice\r\nrouter.post('/', (req, res: Response<ResultCommon>) => {\r\n  const device_details = req.body;\r\n  conn.query($sql.device.insertDevice, [device_details.device_name, device_details.device_status], err => {\r\n    commomInsertHandler(res, err);\r\n  });\r\n});\r\n\r\n// delete /device/:device_id\r\n// unfinished: 未实现级联删除\r\nrouter.delete('/:device_id', (req, res: Response<ResultCommon>) => {\r\n  const device_id = req.params.device_id;\r\n  conn.query($sql.device.deleteDeviceById, [device_id], err => {\r\n    commonDeleteHandler(res, err);\r\n  });\r\n});\r\n\r\n// get /device/getProjectDeviceList/:project_id\r\n/*\r\nrouter.get(\"/getProjectDeviceList/:project_id\", (req, res: Response<GetProjectDeviceListResult>) => {\r\n  const project_id = req.params.project_id;\r\n  conn.query($sql.device.getProjectDeviceList, [project_id], (err, result) => {\r\n    if (err) {\r\n      mysqlErrorHandler(res, err);\r\n    } else if (result.length == 1) {\r\n      res.json({\r\n        device_list: result,\r\n        status: config.status.SUCCESS,\r\n        msg: 'get success'\r\n      })\r\n    } else {\r\n      console.log('123')\r\n      notFoundErrorHandler(res);\r\n    }\r\n  })\r\n})\r\n*/\r\n\r\nexport default router;\r\n"
      ]
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "bbf565f64765fca05d104df828260a73fdb4d975",
    "contentHash": "d4538c921f330270d3add86928fd9a14d3189e9eee07e760ecf82c8e7eed6bb4"
  },
  "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\riskApi.ts": {
    "path": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\riskApi.ts",
    "statementMap": {
      "0": { "start": { "line": 6, "column": 22 }, "end": { "line": 8, "column": 1 } },
      "1": { "start": { "line": 7, "column": 4 }, "end": { "line": 7, "column": 62 } },
      "2": { "start": { "line": 9, "column": 0 }, "end": { "line": 9, "column": 62 } },
      "3": { "start": { "line": 10, "column": 15 }, "end": { "line": 10, "column": 52 } },
      "4": { "start": { "line": 11, "column": 16 }, "end": { "line": 11, "column": 51 } },
      "5": { "start": { "line": 12, "column": 15 }, "end": { "line": 12, "column": 51 } },
      "6": { "start": { "line": 13, "column": 13 }, "end": { "line": 13, "column": 31 } },
      "7": { "start": { "line": 14, "column": 18 }, "end": { "line": 14, "column": 41 } },
      "8": { "start": { "line": 15, "column": 13 }, "end": { "line": 15, "column": 39 } },
      "9": { "start": { "line": 17, "column": 0 }, "end": { "line": 35, "column": 3 } },
      "10": { "start": { "line": 18, "column": 18 }, "end": { "line": 18, "column": 36 } },
      "11": { "start": { "line": 19, "column": 4 }, "end": { "line": 34, "column": 7 } },
      "12": { "start": { "line": 20, "column": 8 }, "end": { "line": 33, "column": 9 } },
      "13": { "start": { "line": 21, "column": 12 }, "end": { "line": 21, "column": 47 } },
      "14": { "start": { "line": 23, "column": 13 }, "end": { "line": 33, "column": 9 } },
      "15": { "start": { "line": 24, "column": 12 }, "end": { "line": 24, "column": 60 } },
      "16": { "start": { "line": 25, "column": 12 }, "end": { "line": 29, "column": 15 } },
      "17": { "start": { "line": 32, "column": 12 }, "end": { "line": 32, "column": 45 } },
      "18": { "start": { "line": 38, "column": 0 }, "end": { "line": 43, "column": 3 } },
      "19": { "start": { "line": 39, "column": 23 }, "end": { "line": 39, "column": 31 } },
      "20": { "start": { "line": 40, "column": 4 }, "end": { "line": 42, "column": 7 } },
      "21": { "start": { "line": 41, "column": 8 }, "end": { "line": 41, "column": 45 } },
      "22": { "start": { "line": 46, "column": 0 }, "end": { "line": 64, "column": 3 } },
      "23": { "start": { "line": 47, "column": 18 }, "end": { "line": 47, "column": 36 } },
      "24": { "start": { "line": 48, "column": 23 }, "end": { "line": 48, "column": 31 } },
      "25": { "start": { "line": 49, "column": 4 }, "end": { "line": 63, "column": 7 } },
      "26": { "start": { "line": 50, "column": 8 }, "end": { "line": 62, "column": 9 } },
      "27": { "start": { "line": 51, "column": 12 }, "end": { "line": 51, "column": 47 } },
      "28": { "start": { "line": 53, "column": 13 }, "end": { "line": 62, "column": 9 } },
      "29": { "start": { "line": 54, "column": 27 }, "end": { "line": 54, "column": 36 } },
      "30": { "start": { "line": 55, "column": 29 }, "end": { "line": 55, "column": 92 } },
      "31": { "start": { "line": 56, "column": 12 }, "end": { "line": 58, "column": 15 } },
      "32": { "start": { "line": 57, "column": 16 }, "end": { "line": 57, "column": 54 } },
      "33": { "start": { "line": 61, "column": 12 }, "end": { "line": 61, "column": 45 } },
      "34": { "start": { "line": 67, "column": 0 }, "end": { "line": 72, "column": 3 } },
      "35": { "start": { "line": 68, "column": 18 }, "end": { "line": 68, "column": 36 } },
      "36": { "start": { "line": 69, "column": 4 }, "end": { "line": 71, "column": 7 } },
      "37": { "start": { "line": 70, "column": 8 }, "end": { "line": 70, "column": 45 } },
      "38": { "start": { "line": 74, "column": 0 }, "end": { "line": 94, "column": 3 } },
      "39": { "start": { "line": 75, "column": 21 }, "end": { "line": 75, "column": 42 } },
      "40": { "start": { "line": 76, "column": 4 }, "end": { "line": 93, "column": 7 } },
      "41": { "start": { "line": 77, "column": 8 }, "end": { "line": 92, "column": 9 } },
      "42": { "start": { "line": 78, "column": 12 }, "end": { "line": 78, "column": 47 } },
      "43": { "start": { "line": 81, "column": 12 }, "end": { "line": 85, "column": 13 } },
      "44": { "start": { "line": 81, "column": 26 }, "end": { "line": 81, "column": 27 } },
      "45": { "start": { "line": 81, "column": 40 }, "end": { "line": 81, "column": 46 } },
      "46": { "start": { "line": 82, "column": 27 }, "end": { "line": 82, "column": 39 } },
      "47": { "start": { "line": 83, "column": 16 }, "end": { "line": 83, "column": 54 } },
      "48": { "start": { "line": 84, "column": 16 }, "end": { "line": 84, "column": 93 } },
      "49": { "start": { "line": 86, "column": 12 }, "end": { "line": 91, "column": 15 } },
      "50": { "start": { "line": 95, "column": 0 }, "end": { "line": 95, "column": 25 } }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": { "start": { "line": 6, "column": 56 }, "end": { "line": 6, "column": 57 } },
        "loc": { "start": { "line": 6, "column": 71 }, "end": { "line": 8, "column": 1 } },
        "line": 6
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": { "start": { "line": 17, "column": 24 }, "end": { "line": 17, "column": 25 } },
        "loc": { "start": { "line": 17, "column": 44 }, "end": { "line": 35, "column": 1 } },
        "line": 17
      },
      "2": {
        "name": "(anonymous_2)",
        "decl": { "start": { "line": 19, "column": 73 }, "end": { "line": 19, "column": 74 } },
        "loc": { "start": { "line": 19, "column": 96 }, "end": { "line": 34, "column": 5 } },
        "line": 19
      },
      "3": {
        "name": "(anonymous_3)",
        "decl": { "start": { "line": 38, "column": 17 }, "end": { "line": 38, "column": 18 } },
        "loc": { "start": { "line": 38, "column": 37 }, "end": { "line": 43, "column": 1 } },
        "line": 38
      },
      "4": {
        "name": "(anonymous_4)",
        "decl": { "start": { "line": 40, "column": 152 }, "end": { "line": 40, "column": 153 } },
        "loc": { "start": { "line": 40, "column": 167 }, "end": { "line": 42, "column": 5 } },
        "line": 40
      },
      "5": {
        "name": "(anonymous_5)",
        "decl": { "start": { "line": 46, "column": 24 }, "end": { "line": 46, "column": 25 } },
        "loc": { "start": { "line": 46, "column": 44 }, "end": { "line": 64, "column": 1 } },
        "line": 46
      },
      "6": {
        "name": "(anonymous_6)",
        "decl": { "start": { "line": 49, "column": 73 }, "end": { "line": 49, "column": 74 } },
        "loc": { "start": { "line": 49, "column": 96 }, "end": { "line": 63, "column": 5 } },
        "line": 49
      },
      "7": {
        "name": "(anonymous_7)",
        "decl": { "start": { "line": 56, "column": 139 }, "end": { "line": 56, "column": 140 } },
        "loc": { "start": { "line": 56, "column": 155 }, "end": { "line": 58, "column": 13 } },
        "line": 56
      },
      "8": {
        "name": "(anonymous_8)",
        "decl": { "start": { "line": 67, "column": 27 }, "end": { "line": 67, "column": 28 } },
        "loc": { "start": { "line": 67, "column": 47 }, "end": { "line": 72, "column": 1 } },
        "line": 67
      },
      "9": {
        "name": "(anonymous_9)",
        "decl": { "start": { "line": 69, "column": 76 }, "end": { "line": 69, "column": 77 } },
        "loc": { "start": { "line": 69, "column": 99 }, "end": { "line": 71, "column": 5 } },
        "line": 69
      },
      "10": {
        "name": "(anonymous_10)",
        "decl": { "start": { "line": 74, "column": 46 }, "end": { "line": 74, "column": 47 } },
        "loc": { "start": { "line": 74, "column": 66 }, "end": { "line": 94, "column": 1 } },
        "line": 74
      },
      "11": {
        "name": "(anonymous_11)",
        "decl": { "start": { "line": 76, "column": 83 }, "end": { "line": 76, "column": 84 } },
        "loc": { "start": { "line": 76, "column": 106 }, "end": { "line": 93, "column": 5 } },
        "line": 76
      }
    },
    "branchMap": {
      "0": {
        "loc": { "start": { "line": 6, "column": 22 }, "end": { "line": 8, "column": 1 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 6, "column": 23 }, "end": { "line": 6, "column": 27 } },
          { "start": { "line": 6, "column": 31 }, "end": { "line": 6, "column": 51 } },
          { "start": { "line": 6, "column": 56 }, "end": { "line": 8, "column": 1 } }
        ],
        "line": 6
      },
      "1": {
        "loc": { "start": { "line": 7, "column": 11 }, "end": { "line": 7, "column": 61 } },
        "type": "cond-expr",
        "locations": [
          { "start": { "line": 7, "column": 37 }, "end": { "line": 7, "column": 40 } },
          { "start": { "line": 7, "column": 43 }, "end": { "line": 7, "column": 61 } }
        ],
        "line": 7
      },
      "2": {
        "loc": { "start": { "line": 7, "column": 12 }, "end": { "line": 7, "column": 33 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 7, "column": 12 }, "end": { "line": 7, "column": 15 } },
          { "start": { "line": 7, "column": 19 }, "end": { "line": 7, "column": 33 } }
        ],
        "line": 7
      },
      "3": {
        "loc": { "start": { "line": 20, "column": 8 }, "end": { "line": 33, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 20, "column": 8 }, "end": { "line": 33, "column": 9 } },
          { "start": { "line": 20, "column": 8 }, "end": { "line": 33, "column": 9 } }
        ],
        "line": 20
      },
      "4": {
        "loc": { "start": { "line": 23, "column": 13 }, "end": { "line": 33, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 23, "column": 13 }, "end": { "line": 33, "column": 9 } },
          { "start": { "line": 23, "column": 13 }, "end": { "line": 33, "column": 9 } }
        ],
        "line": 23
      },
      "5": {
        "loc": { "start": { "line": 50, "column": 8 }, "end": { "line": 62, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 50, "column": 8 }, "end": { "line": 62, "column": 9 } },
          { "start": { "line": 50, "column": 8 }, "end": { "line": 62, "column": 9 } }
        ],
        "line": 50
      },
      "6": {
        "loc": { "start": { "line": 53, "column": 13 }, "end": { "line": 62, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 53, "column": 13 }, "end": { "line": 62, "column": 9 } },
          { "start": { "line": 53, "column": 13 }, "end": { "line": 62, "column": 9 } }
        ],
        "line": 53
      },
      "7": {
        "loc": { "start": { "line": 77, "column": 8 }, "end": { "line": 92, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 77, "column": 8 }, "end": { "line": 92, "column": 9 } },
          { "start": { "line": 77, "column": 8 }, "end": { "line": 92, "column": 9 } }
        ],
        "line": 77
      }
    },
    "s": {
      "0": 1,
      "1": 3,
      "2": 1,
      "3": 1,
      "4": 1,
      "5": 1,
      "6": 1,
      "7": 1,
      "8": 1,
      "9": 1,
      "10": 2,
      "11": 2,
      "12": 2,
      "13": 0,
      "14": 2,
      "15": 1,
      "16": 1,
      "17": 1,
      "18": 1,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 1,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 1,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 1,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 1
    },
    "f": { "0": 3, "1": 2, "2": 2, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0 },
    "b": { "0": [1, 1, 1], "1": [2, 1], "2": [3, 3], "3": [0, 2], "4": [1, 1], "5": [0, 0], "6": [0, 0], "7": [0, 0] },
    "inputSourceMap": {
      "version": 3,
      "file": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\riskApi.ts",
      "sources": ["F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\riskApi.ts"],
      "names": [],
      "mappings": "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",
      "sourcesContent": [
        "/**\r\n * @author: zou\r\n * @description: risk相关的api定义\r\n */\r\n\r\nimport config from '../config';\r\nimport express, { Response } from 'express';\r\nimport $sql from './sqlMap';\r\nimport { ResultCommon } from 'achieve-it-contract';\r\nimport { GetRiskResult, GetProjectRiskListResult } from 'achieve-it-contract/namespaces/risk';\r\nimport {\r\n  commonDeleteHandler,\r\n  notFoundErrorHandler,\r\n  mysqlErrorHandler,\r\n  commomInsertHandler,\r\n  commomUpdateHandler\r\n} from '../util';\r\nimport { conn } from '../mysqlPool';\r\n\r\nconst router = express.Router();\r\n\r\n// get /risk/:risk_id\r\nrouter.get('/:risk_id', (req, res: Response<GetRiskResult>) => {\r\n  const risk_id = req.params.risk_id;\r\n  conn.query($sql.risk.getRiskById, [risk_id], (err, result) => {\r\n    if (err) {\r\n      mysqlErrorHandler(res, err);\r\n    } else if (result.length == 1) {\r\n      result[0].detail = JSON.parse(result[0].detail);\r\n      res.json({\r\n        status: config.status.SUCCESS,\r\n        msg: 'success',\r\n        risk: result[0]\r\n      });\r\n    } else {\r\n      notFoundErrorHandler(res);\r\n    }\r\n  });\r\n});\r\n\r\n// post /risk\r\n// insertRisk\r\nrouter.post('/', (req, res: Response<ResultCommon>) => {\r\n  const risk_details = req.body;\r\n  conn.query(\r\n    $sql.risk.insertRisk,\r\n    [JSON.stringify(risk_details.detail), risk_details.project_id, risk_details.solve_status],\r\n    err => {\r\n      commomInsertHandler(res, err);\r\n    }\r\n  );\r\n});\r\n\r\n// put /risk/:risk_id\r\n// updateRiskById\r\nrouter.put('/:risk_id', (req, res: Response<ResultCommon>) => {\r\n  const risk_id = req.params.risk_id;\r\n  const risk_details = req.body;\r\n  conn.query($sql.risk.getRiskById, [risk_id], (err, result) => {\r\n    if (err) {\r\n      mysqlErrorHandler(res, err);\r\n    } else if (result.length == 1) {\r\n      const old_risk = result[0];\r\n      const new_detail = Object.assign(JSON.parse(old_risk.detail), risk_details.detail);\r\n      conn.query($sql.risk.updateRiskById, [JSON.stringify(new_detail), risk_details.solve_status, risk_id], err2 => {\r\n        commomUpdateHandler(res, err2);\r\n      });\r\n    } else {\r\n      notFoundErrorHandler(res);\r\n    }\r\n  });\r\n});\r\n\r\n// delete /risk/:risk_id\r\n// deleteRisk\r\nrouter.delete('/:risk_id', (req, res: Response<ResultCommon>) => {\r\n  const risk_id = req.params.risk_id;\r\n  conn.query($sql.risk.deleteRiskById, [risk_id], (err, result) => {\r\n    commonDeleteHandler(res, err);\r\n  });\r\n});\r\n\r\n// get /risk/getProjectRiskList\r\nrouter.get('/getProjectRiskList/:project_id', (req, res: Response<GetProjectRiskListResult>) => {\r\n  const project_id = req.params.project_id;\r\n  conn.query($sql.risk.getProjectRiskList, [project_id], (err, result) => {\r\n    if (err) {\r\n      mysqlErrorHandler(res, err);\r\n    } else {\r\n      for (const risk of result) {\r\n        risk.detail = JSON.parse(risk.detail);\r\n        risk.solve_status = config.numberMap.riskStatus[risk.solve_status];\r\n      }\r\n      res.json({\r\n        project_id,\r\n        risk_list: result,\r\n        status: config.status.ERROR,\r\n        msg: 'success'\r\n      });\r\n    }\r\n  });\r\n});\r\n\r\nexport default router;\r\n"
      ]
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "283556400f28b086661a87547174d66c2513186c",
    "contentHash": "67c3025f0c881c25e4abde5dbcdbdf982fd12a5265714c6b27b617d30f5f3ce7"
  },
  "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\activityApi.ts": {
    "path": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\activityApi.ts",
    "statementMap": {
      "0": { "start": { "line": 6, "column": 22 }, "end": { "line": 8, "column": 1 } },
      "1": { "start": { "line": 7, "column": 4 }, "end": { "line": 7, "column": 62 } },
      "2": { "start": { "line": 9, "column": 0 }, "end": { "line": 9, "column": 62 } },
      "3": { "start": { "line": 10, "column": 15 }, "end": { "line": 10, "column": 52 } },
      "4": { "start": { "line": 11, "column": 16 }, "end": { "line": 11, "column": 51 } },
      "5": { "start": { "line": 12, "column": 15 }, "end": { "line": 12, "column": 51 } },
      "6": { "start": { "line": 13, "column": 13 }, "end": { "line": 13, "column": 31 } },
      "7": { "start": { "line": 14, "column": 18 }, "end": { "line": 14, "column": 41 } },
      "8": { "start": { "line": 15, "column": 13 }, "end": { "line": 15, "column": 39 } },
      "9": { "start": { "line": 17, "column": 0 }, "end": { "line": 40, "column": 3 } },
      "10": { "start": { "line": 18, "column": 22 }, "end": { "line": 18, "column": 44 } },
      "11": { "start": { "line": 19, "column": 4 }, "end": { "line": 39, "column": 7 } },
      "12": { "start": { "line": 20, "column": 8 }, "end": { "line": 38, "column": 9 } },
      "13": { "start": { "line": 21, "column": 12 }, "end": { "line": 21, "column": 47 } },
      "14": { "start": { "line": 23, "column": 13 }, "end": { "line": 38, "column": 9 } },
      "15": { "start": { "line": 25, "column": 32 }, "end": { "line": 25, "column": 55 } },
      "16": { "start": { "line": 26, "column": 12 }, "end": { "line": 29, "column": 147 } },
      "17": { "start": { "line": 30, "column": 12 }, "end": { "line": 34, "column": 15 } },
      "18": { "start": { "line": 37, "column": 12 }, "end": { "line": 37, "column": 45 } },
      "19": { "start": { "line": 42, "column": 0 }, "end": { "line": 47, "column": 3 } },
      "20": { "start": { "line": 43, "column": 27 }, "end": { "line": 43, "column": 35 } },
      "21": { "start": { "line": 44, "column": 4 }, "end": { "line": 46, "column": 7 } },
      "22": { "start": { "line": 45, "column": 8 }, "end": { "line": 45, "column": 45 } },
      "23": { "start": { "line": 49, "column": 0 }, "end": { "line": 70, "column": 3 } },
      "24": { "start": { "line": 50, "column": 22 }, "end": { "line": 50, "column": 44 } },
      "25": { "start": { "line": 51, "column": 27 }, "end": { "line": 51, "column": 35 } },
      "26": { "start": { "line": 52, "column": 4 }, "end": { "line": 69, "column": 7 } },
      "27": { "start": { "line": 53, "column": 8 }, "end": { "line": 68, "column": 9 } },
      "28": { "start": { "line": 54, "column": 12 }, "end": { "line": 54, "column": 47 } },
      "29": { "start": { "line": 56, "column": 13 }, "end": { "line": 68, "column": 9 } },
      "30": { "start": { "line": 57, "column": 31 }, "end": { "line": 57, "column": 40 } },
      "31": { "start": { "line": 58, "column": 12 }, "end": { "line": 64, "column": 15 } },
      "32": { "start": { "line": 63, "column": 16 }, "end": { "line": 63, "column": 54 } },
      "33": { "start": { "line": 67, "column": 12 }, "end": { "line": 67, "column": 45 } },
      "34": { "start": { "line": 72, "column": 0 }, "end": { "line": 77, "column": 3 } },
      "35": { "start": { "line": 73, "column": 22 }, "end": { "line": 73, "column": 44 } },
      "36": { "start": { "line": 74, "column": 4 }, "end": { "line": 76, "column": 7 } },
      "37": { "start": { "line": 75, "column": 8 }, "end": { "line": 75, "column": 45 } },
      "38": { "start": { "line": 78, "column": 0 }, "end": { "line": 78, "column": 25 } }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": { "start": { "line": 6, "column": 56 }, "end": { "line": 6, "column": 57 } },
        "loc": { "start": { "line": 6, "column": 71 }, "end": { "line": 8, "column": 1 } },
        "line": 6
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": { "start": { "line": 17, "column": 28 }, "end": { "line": 17, "column": 29 } },
        "loc": { "start": { "line": 17, "column": 48 }, "end": { "line": 40, "column": 1 } },
        "line": 17
      },
      "2": {
        "name": "(anonymous_2)",
        "decl": { "start": { "line": 19, "column": 85 }, "end": { "line": 19, "column": 86 } },
        "loc": { "start": { "line": 19, "column": 108 }, "end": { "line": 39, "column": 5 } },
        "line": 19
      },
      "3": {
        "name": "(anonymous_3)",
        "decl": { "start": { "line": 42, "column": 17 }, "end": { "line": 42, "column": 18 } },
        "loc": { "start": { "line": 42, "column": 37 }, "end": { "line": 47, "column": 1 } },
        "line": 42
      },
      "4": {
        "name": "(anonymous_4)",
        "decl": { "start": { "line": 44, "column": 144 }, "end": { "line": 44, "column": 145 } },
        "loc": { "start": { "line": 44, "column": 159 }, "end": { "line": 46, "column": 5 } },
        "line": 44
      },
      "5": {
        "name": "(anonymous_5)",
        "decl": { "start": { "line": 49, "column": 28 }, "end": { "line": 49, "column": 29 } },
        "loc": { "start": { "line": 49, "column": 48 }, "end": { "line": 70, "column": 1 } },
        "line": 49
      },
      "6": {
        "name": "(anonymous_6)",
        "decl": { "start": { "line": 52, "column": 85 }, "end": { "line": 52, "column": 86 } },
        "loc": { "start": { "line": 52, "column": 108 }, "end": { "line": 69, "column": 5 } },
        "line": 52
      },
      "7": {
        "name": "(anonymous_7)",
        "decl": { "start": { "line": 62, "column": 15 }, "end": { "line": 62, "column": 16 } },
        "loc": { "start": { "line": 62, "column": 40 }, "end": { "line": 64, "column": 13 } },
        "line": 62
      },
      "8": {
        "name": "(anonymous_8)",
        "decl": { "start": { "line": 72, "column": 31 }, "end": { "line": 72, "column": 32 } },
        "loc": { "start": { "line": 72, "column": 51 }, "end": { "line": 77, "column": 1 } },
        "line": 72
      },
      "9": {
        "name": "(anonymous_9)",
        "decl": { "start": { "line": 74, "column": 88 }, "end": { "line": 74, "column": 89 } },
        "loc": { "start": { "line": 74, "column": 111 }, "end": { "line": 76, "column": 5 } },
        "line": 74
      }
    },
    "branchMap": {
      "0": {
        "loc": { "start": { "line": 6, "column": 22 }, "end": { "line": 8, "column": 1 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 6, "column": 23 }, "end": { "line": 6, "column": 27 } },
          { "start": { "line": 6, "column": 31 }, "end": { "line": 6, "column": 51 } },
          { "start": { "line": 6, "column": 56 }, "end": { "line": 8, "column": 1 } }
        ],
        "line": 6
      },
      "1": {
        "loc": { "start": { "line": 7, "column": 11 }, "end": { "line": 7, "column": 61 } },
        "type": "cond-expr",
        "locations": [
          { "start": { "line": 7, "column": 37 }, "end": { "line": 7, "column": 40 } },
          { "start": { "line": 7, "column": 43 }, "end": { "line": 7, "column": 61 } }
        ],
        "line": 7
      },
      "2": {
        "loc": { "start": { "line": 7, "column": 12 }, "end": { "line": 7, "column": 33 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 7, "column": 12 }, "end": { "line": 7, "column": 15 } },
          { "start": { "line": 7, "column": 19 }, "end": { "line": 7, "column": 33 } }
        ],
        "line": 7
      },
      "3": {
        "loc": { "start": { "line": 20, "column": 8 }, "end": { "line": 38, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 20, "column": 8 }, "end": { "line": 38, "column": 9 } },
          { "start": { "line": 20, "column": 8 }, "end": { "line": 38, "column": 9 } }
        ],
        "line": 20
      },
      "4": {
        "loc": { "start": { "line": 23, "column": 13 }, "end": { "line": 38, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 23, "column": 13 }, "end": { "line": 38, "column": 9 } },
          { "start": { "line": 23, "column": 13 }, "end": { "line": 38, "column": 9 } }
        ],
        "line": 23
      },
      "5": {
        "loc": { "start": { "line": 44, "column": 102 }, "end": { "line": 44, "column": 141 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 44, "column": 102 }, "end": { "line": 44, "column": 135 } },
          { "start": { "line": 44, "column": 139 }, "end": { "line": 44, "column": 141 } }
        ],
        "line": 44
      },
      "6": {
        "loc": { "start": { "line": 53, "column": 8 }, "end": { "line": 68, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 53, "column": 8 }, "end": { "line": 68, "column": 9 } },
          { "start": { "line": 53, "column": 8 }, "end": { "line": 68, "column": 9 } }
        ],
        "line": 53
      },
      "7": {
        "loc": { "start": { "line": 56, "column": 13 }, "end": { "line": 68, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 56, "column": 13 }, "end": { "line": 68, "column": 9 } },
          { "start": { "line": 56, "column": 13 }, "end": { "line": 68, "column": 9 } }
        ],
        "line": 56
      },
      "8": {
        "loc": { "start": { "line": 59, "column": 16 }, "end": { "line": 59, "column": 76 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 59, "column": 16 }, "end": { "line": 59, "column": 46 } },
          { "start": { "line": 59, "column": 50 }, "end": { "line": 59, "column": 76 } }
        ],
        "line": 59
      },
      "9": {
        "loc": { "start": { "line": 60, "column": 16 }, "end": { "line": 60, "column": 82 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 60, "column": 16 }, "end": { "line": 60, "column": 49 } },
          { "start": { "line": 60, "column": 53 }, "end": { "line": 60, "column": 82 } }
        ],
        "line": 60
      }
    },
    "s": {
      "0": 1,
      "1": 3,
      "2": 1,
      "3": 1,
      "4": 1,
      "5": 1,
      "6": 1,
      "7": 1,
      "8": 1,
      "9": 1,
      "10": 2,
      "11": 2,
      "12": 2,
      "13": 0,
      "14": 2,
      "15": 1,
      "16": 1,
      "17": 1,
      "18": 1,
      "19": 1,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 1,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 1,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 1
    },
    "f": { "0": 3, "1": 2, "2": 2, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0 },
    "b": {
      "0": [1, 1, 1],
      "1": [2, 1],
      "2": [3, 3],
      "3": [0, 2],
      "4": [1, 1],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    "inputSourceMap": {
      "version": 3,
      "file": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\activityApi.ts",
      "sources": ["F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\activityApi.ts"],
      "names": [],
      "mappings": "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",
      "sourcesContent": [
        "/**\r\n * @author: zou\r\n * @description: activity相关的api定义\r\n */\r\n\r\nimport config from '../config';\r\nimport express, { Response, response } from 'express';\r\nimport $sql from './sqlMap';\r\nimport { GetActivityResult, ResultCommon } from 'achieve-it-contract';\r\nimport {\r\n  mysqlErrorHandler,\r\n  notFoundErrorHandler,\r\n  commonDeleteHandler,\r\n  commomInsertHandler,\r\n  commomUpdateHandler\r\n} from '../util';\r\nimport { conn } from '../mysqlPool';\r\nconst router = express.Router();\r\n\r\n// get /activity/:activity_id\r\nrouter.get('/:activity_id', (req, res: Response<GetActivityResult>) => {\r\n  const activity_id = req.params.activity_id;\r\n  conn.query($sql.activity.getActivityById, [activity_id], (err, result) => {\r\n    if (err) {\r\n      mysqlErrorHandler(res, err);\r\n    } else if (result.length == 1) {\r\n      // 0-0 --> 工程活动-需求开发\r\n      const activity_name = result[0].activity_name;\r\n      result[0].activity_name =\r\n        config.numberMap.activityName[Number(activity_name.split('-')[0])].prefix +\r\n        '-' +\r\n        config.numberMap.activityName[Number(activity_name.split('-')[0])].activityList[\r\n          Number(activity_name.split('-')[1])\r\n        ];\r\n\r\n      res.json({\r\n        activity: result[0],\r\n        status: config.status.SUCCESS,\r\n        msg: 'success'\r\n      });\r\n    } else {\r\n      notFoundErrorHandler(res);\r\n    }\r\n  });\r\n});\r\n\r\n// post /activity\r\nrouter.post('/', (req, res: Response<ResultCommon>) => {\r\n  const activity_details = req.body;\r\n  conn.query(\r\n    $sql.activity.insertActivity,\r\n    [activity_details.activity_name, activity_details.activity_content || ''],\r\n    err => {\r\n      commomInsertHandler(res, err);\r\n    }\r\n  );\r\n});\r\n\r\n// put /activity/:activity_id\r\nrouter.put('/:activity_id', (req, res: Response<ResultCommon>) => {\r\n  const activity_id = req.params.activity_id;\r\n  const activity_details = req.body;\r\n  conn.query($sql.activity.getActivityById, [activity_id], (err, result) => {\r\n    if (err) {\r\n      mysqlErrorHandler(res, err);\r\n    } else if (result.length == 1) {\r\n      const old_activity = result[0];\r\n      conn.query(\r\n        $sql.activity.updateActivityById,\r\n        [\r\n          activity_details.activity_name || old_activity.activity_name,\r\n          activity_details.activity_content || old_activity.activity_content,\r\n          activity_id\r\n        ],\r\n        (err2, result2) => {\r\n          commomUpdateHandler(res, err2);\r\n        }\r\n      );\r\n    } else {\r\n      notFoundErrorHandler(res);\r\n    }\r\n  });\r\n});\r\n\r\n// delete /activity/:activity_id\r\nrouter.delete('/:activity_id', (req, res: Response<ResultCommon>) => {\r\n  const activity_id = req.params.activity_id;\r\n  conn.query($sql.activity.deleteActivityById, [activity_id], (err, result) => {\r\n    commonDeleteHandler(res, err);\r\n  });\r\n});\r\n\r\nexport default router;\r\n"
      ]
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "bea4bf2e75b54f47520f997b6c8896a7ffb9463a",
    "contentHash": "97a18129a65391bfb236c2eafe0cd18cb7fe62be2d7f2d1456e28b7bc207ac3f"
  },
  "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\workTimeApi.ts": {
    "path": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\workTimeApi.ts",
    "statementMap": {
      "0": { "start": { "line": 6, "column": 22 }, "end": { "line": 8, "column": 1 } },
      "1": { "start": { "line": 7, "column": 4 }, "end": { "line": 7, "column": 62 } },
      "2": { "start": { "line": 9, "column": 0 }, "end": { "line": 9, "column": 62 } },
      "3": { "start": { "line": 10, "column": 15 }, "end": { "line": 10, "column": 52 } },
      "4": { "start": { "line": 11, "column": 16 }, "end": { "line": 11, "column": 51 } },
      "5": { "start": { "line": 12, "column": 15 }, "end": { "line": 12, "column": 51 } },
      "6": { "start": { "line": 13, "column": 18 }, "end": { "line": 13, "column": 41 } },
      "7": { "start": { "line": 14, "column": 13 }, "end": { "line": 14, "column": 31 } },
      "8": { "start": { "line": 15, "column": 13 }, "end": { "line": 15, "column": 39 } },
      "9": { "start": { "line": 17, "column": 0 }, "end": { "line": 32, "column": 3 } },
      "10": { "start": { "line": 18, "column": 20 }, "end": { "line": 18, "column": 40 } },
      "11": { "start": { "line": 19, "column": 4 }, "end": { "line": 31, "column": 7 } },
      "12": { "start": { "line": 20, "column": 8 }, "end": { "line": 30, "column": 9 } },
      "13": { "start": { "line": 21, "column": 12 }, "end": { "line": 21, "column": 47 } },
      "14": { "start": { "line": 24, "column": 12 }, "end": { "line": 29, "column": 15 } },
      "15": { "start": { "line": 34, "column": 0 }, "end": { "line": 40, "column": 3 } },
      "16": { "start": { "line": 35, "column": 20 }, "end": { "line": 35, "column": 40 } },
      "17": { "start": { "line": 36, "column": 18 }, "end": { "line": 36, "column": 26 } },
      "18": { "start": { "line": 37, "column": 4 }, "end": { "line": 39, "column": 7 } },
      "19": { "start": { "line": 38, "column": 8 }, "end": { "line": 38, "column": 45 } },
      "20": { "start": { "line": 41, "column": 0 }, "end": { "line": 41, "column": 25 } }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": { "start": { "line": 6, "column": 56 }, "end": { "line": 6, "column": 57 } },
        "loc": { "start": { "line": 6, "column": 71 }, "end": { "line": 8, "column": 1 } },
        "line": 6
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": { "start": { "line": 17, "column": 48 }, "end": { "line": 17, "column": 49 } },
        "loc": { "start": { "line": 17, "column": 68 }, "end": { "line": 32, "column": 1 } },
        "line": 17
      },
      "2": {
        "name": "(anonymous_2)",
        "decl": { "start": { "line": 19, "column": 89 }, "end": { "line": 19, "column": 90 } },
        "loc": { "start": { "line": 19, "column": 112 }, "end": { "line": 31, "column": 5 } },
        "line": 19
      },
      "3": {
        "name": "(anonymous_3)",
        "decl": { "start": { "line": 34, "column": 27 }, "end": { "line": 34, "column": 28 } },
        "loc": { "start": { "line": 34, "column": 47 }, "end": { "line": 40, "column": 1 } },
        "line": 34
      },
      "4": {
        "name": "(anonymous_4)",
        "decl": { "start": { "line": 37, "column": 187 }, "end": { "line": 37, "column": 188 } },
        "loc": { "start": { "line": 37, "column": 202 }, "end": { "line": 39, "column": 5 } },
        "line": 37
      }
    },
    "branchMap": {
      "0": {
        "loc": { "start": { "line": 6, "column": 22 }, "end": { "line": 8, "column": 1 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 6, "column": 23 }, "end": { "line": 6, "column": 27 } },
          { "start": { "line": 6, "column": 31 }, "end": { "line": 6, "column": 51 } },
          { "start": { "line": 6, "column": 56 }, "end": { "line": 8, "column": 1 } }
        ],
        "line": 6
      },
      "1": {
        "loc": { "start": { "line": 7, "column": 11 }, "end": { "line": 7, "column": 61 } },
        "type": "cond-expr",
        "locations": [
          { "start": { "line": 7, "column": 37 }, "end": { "line": 7, "column": 40 } },
          { "start": { "line": 7, "column": 43 }, "end": { "line": 7, "column": 61 } }
        ],
        "line": 7
      },
      "2": {
        "loc": { "start": { "line": 7, "column": 12 }, "end": { "line": 7, "column": 33 } },
        "type": "binary-expr",
        "locations": [
          { "start": { "line": 7, "column": 12 }, "end": { "line": 7, "column": 15 } },
          { "start": { "line": 7, "column": 19 }, "end": { "line": 7, "column": 33 } }
        ],
        "line": 7
      },
      "3": {
        "loc": { "start": { "line": 20, "column": 8 }, "end": { "line": 30, "column": 9 } },
        "type": "if",
        "locations": [
          { "start": { "line": 20, "column": 8 }, "end": { "line": 30, "column": 9 } },
          { "start": { "line": 20, "column": 8 }, "end": { "line": 30, "column": 9 } }
        ],
        "line": 20
      }
    },
    "s": {
      "0": 1,
      "1": 3,
      "2": 1,
      "3": 1,
      "4": 1,
      "5": 1,
      "6": 1,
      "7": 1,
      "8": 1,
      "9": 1,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 1,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 1
    },
    "f": { "0": 3, "1": 0, "2": 0, "3": 0, "4": 0 },
    "b": { "0": [1, 1, 1], "1": [2, 1], "2": [3, 3], "3": [0, 0] },
    "inputSourceMap": {
      "version": 3,
      "file": "F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\workTimeApi.ts",
      "sources": ["F:\\课程\\软件开发实践\\AchieveIt\\server\\src\\api\\workTimeApi.ts"],
      "names": [],
      "mappings": ";AAAA;;;GAGG;;;;;AAEH,qDAA+B;AAC/B,oDAA4C;AAC5C,oDAA4B;AAC5B,0CAAoC;AACpC,gCAAiE;AAEjE,IAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,iDAAiD;AACjD,MAAM,CAAC,GAAG,CAAC,mCAAmC,EAAE,UAAC,GAAG,EAAE,GAAyC;IAC3F,IAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;IACvC,gBAAI,CAAC,KAAK,CAAC,gBAAI,CAAC,QAAQ,CAAC,qBAAqB,EAAE,CAAC,SAAS,CAAC,EAAE,UAAC,GAAG,EAAE,MAAM;QACrE,IAAI,GAAG,EAAE;YACL,wBAAiB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;SAC/B;aAAM;YACH,GAAG,CAAC,IAAI,CAAC;gBACL,SAAS,EAAE,QAAQ,CAAC,SAAS,EAAE,EAAE,CAAC;gBAClC,cAAc,EAAE,MAAM;gBACtB,MAAM,EAAE,gBAAM,CAAC,MAAM,CAAC,OAAO;gBAC7B,GAAG,EAAE,aAAa;aACrB,CAAC,CAAA;SACL;IACL,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAA;AAEF,4BAA4B;AAC5B,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,UAAC,GAAG,EAAE,GAA2B;IACxD,IAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;IACvC,IAAM,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC;IACzB,gBAAI,CAAC,KAAK,CAAC,gBAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC,WAAW,EAAE,OAAO,CAAC,gBAAgB,EAAE,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,QAAQ,CAAC,EAAE,UAAC,GAAG;QAC/J,0BAAmB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAClC,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAA;AAEF,kBAAe,MAAM,CAAC",
      "sourcesContent": [
        "/**\r\n * @author: zou\r\n * @description: workTime相关的api定义\r\n */\r\n\r\nimport config from '../config';\r\nimport express, { Response } from 'express';\r\nimport $sql from './sqlMap';\r\nimport { conn } from '../mysqlPool';\r\nimport { mysqlErrorHandler, commomInsertHandler } from '../util';\r\nimport { GetMemberWorkTimeListResul, ResultCommon } from 'achieve-it-contract';\r\nconst router = express.Router();\r\n\r\n// get /workTime/getMemberWorkTimeList/:member_id\r\nrouter.get(\"/getMemberWorkTimeList/:member_id\", (req, res: Response<GetMemberWorkTimeListResul>) => {\r\n    const member_id = req.params.member_id;\r\n    conn.query($sql.workTime.getMemberWorkTimeList, [member_id], (err, result) => {\r\n        if (err) {\r\n            mysqlErrorHandler(res, err);\r\n        } else {\r\n            res.json({\r\n                member_id: parseInt(member_id, 10),\r\n                work_time_list: result,\r\n                status: config.status.SUCCESS,\r\n                msg: 'get success'\r\n            })\r\n        }\r\n    })\r\n})\r\n\r\n// post /workTime/:member_id\r\nrouter.post(\"/:member_id\", (req, res: Response<ResultCommon>) => {\r\n    const member_id = req.params.member_id;\r\n    const details = req.body;\r\n    conn.query($sql.workTime.insertWorkTime, [member_id, details.function_id, details.activity_content, details.project_id, details.start_time, details.end_time], (err) => {\r\n        commomInsertHandler(res, err);\r\n    })\r\n})\r\n\r\nexport default router;"
      ]
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "c77b036b43cf4717f8f4443fdbac1223044c16b8",
    "contentHash": "2e5eb3f7d975abb397c6a13746762bbe1109f610f0e2dcb8ee5ab14f03a3cde4"
  }
}
